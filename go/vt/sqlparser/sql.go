// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const PURGE = 57702
const BEFORE = 57703
const CODE = 57704
const COLLATION = 57705
const COLUMNS = 57706
const DATABASES = 57707
const ENGINES = 57708
const EVENT = 57709
const EXTENDED = 57710
const FIELDS = 57711
const FULL = 57712
const FUNCTION = 57713
const GTID_EXECUTED = 57714
const KEYSPACES = 57715
const OPEN = 57716
const PLUGINS = 57717
const PRIVILEGES = 57718
const PROCESSLIST = 57719
const SCHEMAS = 57720
const TABLES = 57721
const TRIGGERS = 57722
const USER = 57723
const VGTID_EXECUTED = 57724
const VITESS_KEYSPACES = 57725
const VITESS_METADATA = 57726
const VITESS_MIGRATIONS = 57727
const VITESS_REPLICATION_STATUS = 57728
const VITESS_SHARDS = 57729
const VITESS_TABLETS = 57730
const VITESS_TARGET = 57731
const VSCHEMA = 57732
const VITESS_THROTTLED_APPS = 57733
const NAMES = 57734
const GLOBAL = 57735
const SESSION = 57736
const ISOLATION = 57737
const LEVEL = 57738
const READ = 57739
const WRITE = 57740
const ONLY = 57741
const REPEATABLE = 57742
const COMMITTED = 57743
const UNCOMMITTED = 57744
const SERIALIZABLE = 57745
const CURRENT_TIMESTAMP = 57746
const DATABASE = 57747
const CURRENT_DATE = 57748
const NOW = 57749
const CURRENT_TIME = 57750
const LOCALTIME = 57751
const LOCALTIMESTAMP = 57752
const CURRENT_USER = 57753
const UTC_DATE = 57754
const UTC_TIME = 57755
const UTC_TIMESTAMP = 57756
const DAY = 57757
const DAY_HOUR = 57758
const DAY_MICROSECOND = 57759
const DAY_MINUTE = 57760
const DAY_SECOND = 57761
const HOUR = 57762
const HOUR_MICROSECOND = 57763
const HOUR_MINUTE = 57764
const HOUR_SECOND = 57765
const MICROSECOND = 57766
const MINUTE = 57767
const MINUTE_MICROSECOND = 57768
const MINUTE_SECOND = 57769
const MONTH = 57770
const QUARTER = 57771
const SECOND = 57772
const SECOND_MICROSECOND = 57773
const YEAR_MONTH = 57774
const WEEK = 57775
const REPLACE = 57776
const CONVERT = 57777
const CAST = 57778
const SUBSTR = 57779
const SUBSTRING = 57780
const SEPARATOR = 57781
const TIMESTAMPADD = 57782
const TIMESTAMPDIFF = 57783
const WEIGHT_STRING = 57784
const LTRIM = 57785
const RTRIM = 57786
const TRIM = 57787
const JSON_ARRAY = 57788
const JSON_OBJECT = 57789
const JSON_QUOTE = 57790
const JSON_DEPTH = 57791
const JSON_TYPE = 57792
const JSON_LENGTH = 57793
const JSON_VALID = 57794
const JSON_ARRAY_APPEND = 57795
const JSON_ARRAY_INSERT = 57796
const JSON_INSERT = 57797
const JSON_MERGE = 57798
const JSON_MERGE_PATCH = 57799
const JSON_MERGE_PRESERVE = 57800
const JSON_REMOVE = 57801
const JSON_REPLACE = 57802
const JSON_SET = 57803
const JSON_UNQUOTE = 57804
const COUNT = 57805
const AVG = 57806
const MAX = 57807
const MIN = 57808
const SUM = 57809
const GROUP_CONCAT = 57810
const BIT_AND = 57811
const BIT_OR = 57812
const BIT_XOR = 57813
const STD = 57814
const STDDEV = 57815
const STDDEV_POP = 57816
const STDDEV_SAMP = 57817
const VAR_POP = 57818
const VAR_SAMP = 57819
const VARIANCE = 57820
const REGEXP_INSTR = 57821
const REGEXP_LIKE = 57822
const REGEXP_REPLACE = 57823
const REGEXP_SUBSTR = 57824
const ExtractValue = 57825
const UpdateXML = 57826
const GET_LOCK = 57827
const RELEASE_LOCK = 57828
const RELEASE_ALL_LOCKS = 57829
const IS_FREE_LOCK = 57830
const IS_USED_LOCK = 57831
const LOCATE = 57832
const POSITION = 57833
const ST_GeomFromText = 57834
const ST_GeomCollFromText = 57835
const ST_GeometryCollectionFromText = 57836
const ST_GeomCollFromTxt = 57837
const ST_GeometryFromText = 57838
const ST_LineStringFromText = 57839
const ST_LineFromText = 57840
const ST_MultiLineStringFromText = 57841
const ST_MLineFromText = 57842
const ST_MPointFromText = 57843
const ST_MultiPointFromText = 57844
const ST_MPolyFromText = 57845
const ST_MultiPolygonFromText = 57846
const ST_PointFromText = 57847
const ST_PolyFromText = 57848
const ST_PolygonFromText = 57849
const MATCH = 57850
const AGAINST = 57851
const BOOLEAN = 57852
const LANGUAGE = 57853
const WITH = 57854
const QUERY = 57855
const EXPANSION = 57856
const WITHOUT = 57857
const VALIDATION = 57858
const UNUSED = 57859
const ARRAY = 57860
const BYTE = 57861
const CUME_DIST = 57862
const DESCRIPTION = 57863
const DENSE_RANK = 57864
const EMPTY = 57865
const EXCEPT = 57866
const FIRST_VALUE = 57867
const GROUPING = 57868
const GROUPS = 57869
const JSON_TABLE = 57870
const LAG = 57871
const LAST_VALUE = 57872
const LATERAL = 57873
const LEAD = 57874
const NTH_VALUE = 57875
const NTILE = 57876
const OF = 57877
const OVER = 57878
const PERCENT_RANK = 57879
const RANK = 57880
const RECURSIVE = 57881
const ROW_NUMBER = 57882
const SYSTEM = 57883
const WINDOW = 57884
const ACTIVE = 57885
const ADMIN = 57886
const AUTOEXTEND_SIZE = 57887
const BUCKETS = 57888
const CLONE = 57889
const COLUMN_FORMAT = 57890
const COMPONENT = 57891
const DEFINITION = 57892
const ENFORCED = 57893
const ENGINE_ATTRIBUTE = 57894
const EXCLUDE = 57895
const FOLLOWING = 57896
const GET_MASTER_PUBLIC_KEY = 57897
const HISTOGRAM = 57898
const HISTORY = 57899
const INACTIVE = 57900
const INVISIBLE = 57901
const LOCKED = 57902
const MASTER_COMPRESSION_ALGORITHMS = 57903
const MASTER_PUBLIC_KEY_PATH = 57904
const MASTER_TLS_CIPHERSUITES = 57905
const MASTER_ZSTD_COMPRESSION_LEVEL = 57906
const NESTED = 57907
const NETWORK_NAMESPACE = 57908
const NOWAIT = 57909
const NULLS = 57910
const OJ = 57911
const OLD = 57912
const OPTIONAL = 57913
const ORDINALITY = 57914
const ORGANIZATION = 57915
const OTHERS = 57916
const PARTIAL = 57917
const PATH = 57918
const PERSIST = 57919
const PERSIST_ONLY = 57920
const PRECEDING = 57921
const PRIVILEGE_CHECKS_USER = 57922
const PROCESS = 57923
const RANDOM = 57924
const REFERENCE = 57925
const REQUIRE_ROW_FORMAT = 57926
const RESOURCE = 57927
const RESPECT = 57928
const RESTART = 57929
const RETAIN = 57930
const REUSE = 57931
const ROLE = 57932
const SECONDARY = 57933
const SECONDARY_ENGINE = 57934
const SECONDARY_ENGINE_ATTRIBUTE = 57935
const SECONDARY_LOAD = 57936
const SECONDARY_UNLOAD = 57937
const SIMPLE = 57938
const SKIP = 57939
const SRID = 57940
const THREAD_PRIORITY = 57941
const TIES = 57942
const UNBOUNDED = 57943
const VCPU = 57944
const VISIBLE = 57945
const RETURNING = 57946
const FORMAT_BYTES = 57947
const FORMAT_PICO_TIME = 57948
const PS_CURRENT_THREAD_ID = 57949
const PS_THREAD_ID = 57950
const GTID_SUBSET = 57951
const GTID_SUBTRACT = 57952
const WAIT_FOR_EXECUTED_GTID_SET = 57953
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57954
const FORMAT = 57955
const TREE = 57956
const VITESS = 57957
const TRADITIONAL = 57958
const VTEXPLAIN = 57959
const VEXPLAIN = 57960
const PLAN = 57961
const LOCAL = 57962
const LOW_PRIORITY = 57963
const NO_WRITE_TO_BINLOG = 57964
const LOGS = 57965
const ERROR = 57966
const GENERAL = 57967
const HOSTS = 57968
const OPTIMIZER_COSTS = 57969
const USER_RESOURCES = 57970
const SLOW = 57971
const CHANNEL = 57972
const RELAY = 57973
const EXPORT = 57974
const CURRENT = 57975
const ROW = 57976
const ROWS = 57977
const AVG_ROW_LENGTH = 57978
const CONNECTION = 57979
const CHECKSUM = 57980
const DELAY_KEY_WRITE = 57981
const ENCRYPTION = 57982
const ENGINE = 57983
const INSERT_METHOD = 57984
const MAX_ROWS = 57985
const MIN_ROWS = 57986
const PACK_KEYS = 57987
const PASSWORD = 57988
const FIXED = 57989
const DYNAMIC = 57990
const COMPRESSED = 57991
const REDUNDANT = 57992
const COMPACT = 57993
const ROW_FORMAT = 57994
const STATS_AUTO_RECALC = 57995
const STATS_PERSISTENT = 57996
const STATS_SAMPLE_PAGES = 57997
const STORAGE = 57998
const MEMORY = 57999
const DISK = 58000
const PARTITIONS = 58001
const LINEAR = 58002
const RANGE = 58003
const LIST = 58004
const SUBPARTITION = 58005
const SUBPARTITIONS = 58006
const HASH = 58007

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeomFromText",
	"ST_GeomCollFromText",
	"ST_GeometryCollectionFromText",
	"ST_GeomCollFromTxt",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_LineFromText",
	"ST_MultiLineStringFromText",
	"ST_MLineFromText",
	"ST_MPointFromText",
	"ST_MultiPointFromText",
	"ST_MPolyFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolyFromText",
	"ST_PolygonFromText",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	683, 158,
	-2, 166,
	-1, 52,
	135, 166,
	176, 166,
	345, 166,
	-2, 520,
	-1, 60,
	36, 769,
	239, 769,
	250, 769,
	285, 783,
	286, 783,
	-2, 771,
	-1, 65,
	241, 807,
	-2, 805,
	-1, 120,
	238, 1513,
	-2, 132,
	-1, 122,
	1, 159,
	683, 159,
	-2, 166,
	-1, 133,
	136, 406,
	244, 406,
	-2, 509,
	-1, 152,
	135, 166,
	176, 166,
	345, 166,
	-2, 529,
	-1, 853,
	87, 1530,
	-2, 1384,
	-1, 854,
	87, 1531,
	221, 1535,
	-2, 1385,
	-1, 855,
	221, 1534,
	-2, 41,
	-1, 935,
	60, 881,
	-2, 896,
	-1, 1021,
	249, 42,
	254, 42,
	-2, 417,
	-1, 1106,
	1, 577,
	683, 577,
	-2, 166,
	-1, 1406,
	221, 1535,
	-2, 1385,
	-1, 1576,
	60, 882,
	-2, 901,
	-1, 1577,
	60, 883,
	-2, 902,
	-1, 1628,
	135, 166,
	176, 166,
	345, 166,
	-2, 456,
	-1, 1709,
	136, 406,
	244, 406,
	-2, 509,
	-1, 1718,
	249, 43,
	254, 43,
	-2, 418,
	-1, 2101,
	221, 1539,
	-2, 1533,
	-1, 2102,
	221, 1535,
	-2, 1531,
	-1, 2202,
	135, 166,
	176, 166,
	345, 166,
	-2, 457,
	-1, 2209,
	26, 187,
	-2, 189,
	-1, 2616,
	78, 97,
	88, 97,
	-2, 960,
	-1, 2685,
	658, 693,
	-2, 667,
	-1, 2869,
	50, 1481,
	-2, 1475,
	-1, 3609,
	658, 693,
	-2, 681,
	-1, 3697,
	90, 625,
	95, 625,
	105, 625,
	178, 625,
	179, 625,
	180, 625,
	181, 625,
	182, 625,
	183, 625,
	184, 625,
	185, 625,
	186, 625,
	187, 625,
	188, 625,
	189, 625,
	190, 625,
	191, 625,
	192, 625,
	193, 625,
	194, 625,
	195, 625,
	196, 625,
	197, 625,
	198, 625,
	199, 625,
	200, 625,
	201, 625,
	202, 625,
	203, 625,
	204, 625,
	205, 625,
	206, 625,
	207, 625,
	208, 625,
	209, 625,
	210, 625,
	211, 625,
	212, 625,
	213, 625,
	214, 625,
	215, 625,
	216, 625,
	217, 625,
	218, 625,
	219, 625,
	-2, 1893,
}

const yyPrivate = 57344

const yyLast = 48690

var yyAct = [...]int{
	1584, 3768, 3319, 864, 3320, 3779, 3590, 3318, 856, 857,
	1946, 705, 3674, 3737, 2199, 3738, 3130, 3695, 3273, 1631,
	3640, 2150, 3019, 3663, 3574, 2921, 2928, 2130, 684, 3506,
	2970, 3260, 951, 2979, 2882, 2984, 2981, 2980, 2978, 2983,
	2982, 2885, 3572, 2516, 3562, 3348, 687, 823, 2998, 1171,
	41, 928, 2550, 2273, 1892, 2828, 2883, 5, 2589, 2132,
	1591, 2999, 2886, 3169, 3163, 2936, 3353, 2154, 2173, 715,
	2170, 3189, 819, 817, 2746, 3001, 818, 2880, 2870, 2576,
	2092, 824, 2730, 3025, 3155, 2236, 685, 2261, 2241, 2651,
	2304, 2652, 983, 2187, 952, 161, 930, 42, 2650, 1734,
	2175, 2601, 2552, 2174, 2582, 1578, 2568, 1687, 40, 2057,
	2097, 1900, 1716, 2282, 2682, 147, 2722, 2260, 2243, 2162,
	2321, 2643, 1961, 1942, 1016, 1011, 1620, 2618, 1600, 98,
	2089, 932, 683, 936, 697, 2177, 102, 1558, 103, 1418,
	1837, 1919, 990, 987, 1965, 1022, 1331, 1173, 2258, 1815,
	991, 1019, 954, 2233, 2232, 1017, 1018, 1619, 1346, 1605,
	97, 1833, 692, 969, 2037, 942, 971, 1974, 1402, 2098,
	1378, 105, 939, 1554, 1891, 83, 1169, 1844, 1162, 940,
	82, 125, 104, 938, 691, 165, 123, 124, 91, 1426,
	674, 3599, 1422, 2675, 937, 96, 2155, 3769, 1148, 2275,
	2276, 2277, 3625, 3261, 2967, 2275, 2705, 2704, 2319, 2673,
	653, 3253, 873, 874, 875, 93, 2056, 3721, 1347, 2738,
	2989, 873, 874, 875, 93, 93, 2739, 945, 3626, 3620,
	3621, 1907, 959, 963, 3216, 659, 1723, 126, 3323, 2127,
	2128, 1800, 984, 1922, 1906, 1682, 1905, 679, 1058, 1904,
	1903, 1009, 1902, 1875, 130, 1118, 2989, 619, 677, 946,
	678, 1708, 675, 131, 931, 929, 2548, 2866, 3716, 2986,
	3675, 3323, 2578, 1342, 2366, 2308, 2987, 978, 1000, 3741,
	1363, 2832, 995, 3789, 1102, 3736, 1032, 3759, 3135, 1119,
	3725, 3723, 3134, 953, 2698, 1585, 3575, 2306, 93, 2517,
	1912, 3044, 2993, 3502, 1007, 1059, 1062, 1063, 126, 1006,
	1005, 979, 2987, 1029, 132, 3724, 3722, 3501, 3266, 2307,
	1057, 3267, 964, 1008, 659, 3322, 1357, 1056, 3750, 653,
	3621, 3512, 1347, 977, 821, 822, 3681, 2695, 2993, 3719,
	3285, 3274, 2, 3664, 3671, 3681, 2301, 977, 821, 822,
	1333, 3511, 1951, 3700, 3284, 3064, 1697, 2549, 3322, 2918,
	2919, 2917, 1075, 84, 2712, 2713, 2627, 3705, 653, 2626,
	2737, 2158, 2628, 2194, 2195, 2372, 126, 653, 1884, 1885,
	2193, 84, 2375, 84, 1166, 3703, 109, 110, 111, 2721,
	114, 653, 1138, 120, 3709, 3710, 189, 922, 1621, 613,
	1622, 3604, 2938, 2939, 921, 2592, 2676, 3591, 1126, 3704,
	650, 672, 673, 1127, 2990, 1360, 2639, 1361, 1362, 1139,
	654, 924, 925, 926, 927, 1132, 3021, 935, 1143, 1144,
	2593, 1840, 3366, 3166, 1353, 653, 84, 1345, 188, 86,
	1357, 93, 2212, 2211, 2252, 2585, 2586, 2373, 1033, 3052,
	2990, 1105, 3050, 2364, 2780, 966, 967, 869, 635, 93,
	85, 93, 127, 2129, 149, 1332, 1883, 2246, 1101, 667,
	1066, 633, 665, 999, 1887, 170, 1001, 671, 3026, 1617,
	2723, 1126, 1562, 2683, 3742, 1343, 1127, 2283, 3550, 1004,
	3551, 1111, 1112, 2708, 1125, 2322, 1124, 3771, 1159, 1165,
	1790, 84, 43, 44, 86, 3743, 160, 3014, 1816, 1164,
	2937, 630, 148, 1140, 93, 3015, 1147, 2327, 3022, 1133,
	645, 90, 2940, 1114, 1107, 47, 75, 76, 3255, 73,
	77, 167, 1145, 2725, 168, 640, 1141, 1142, 74, 654,
	3254, 933, 1146, 85, 1791, 643, 1792, 1002, 1353, 2367,
	2368, 2370, 2369, 136, 137, 159, 158, 187, 3486, 653,
	2345, 2326, 933, 2156, 2157, 1082, 1379, 61, 1841, 1081,
	3023, 970, 2328, 2324, 1004, 2286, 996, 993, 654, 93,
	3327, 1042, 2171, 998, 997, 1013, 1040, 654, 3041, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1388, 1387, 1389, 1390,
	1076, 654, 1821, 2325, 1051, 1050, 1004, 1100, 1155, 1701,
	1157, 3251, 1049, 620, 2245, 622, 636, 3717, 656, 2781,
	655, 626, 1048, 624, 628, 637, 629, 2342, 623, 2343,
	634, 2344, 1002, 625, 638, 639, 642, 646, 647, 648,
	644, 641, 2831, 632, 657, 654, 1012, 1047, 1154, 1156,
	1013, 980, 974, 972, 1046, 1565, 153, 134, 156, 141,
	133, 1045, 154, 155, 1044, 980, 974, 972, 1039, 171,
	1052, 1104, 2940, 3790, 1003, 1393, 1053, 3748, 177, 142,
	3783, 1352, 1349, 1350, 1351, 1356, 1358, 1355, 988, 1354,
	988, 1393, 986, 145, 143, 138, 139, 140, 144, 1348,
	2677, 1024, 2710, 1618, 1722, 135, 653, 2334, 2330, 2332,
	2333, 2331, 2335, 2336, 146, 1834, 1136, 50, 53, 56,
	55, 58, 2305, 72, 2259, 3250, 81, 78, 1043, 3167,
	2641, 965, 1010, 1041, 3677, 1414, 3598, 988, 2674, 1061,
	2693, 2960, 1025, 3677, 2726, 1024, 2312, 2311, 2158, 1060,
	60, 89, 88, 2707, 1152, 70, 71, 57, 1153, 1003,
	1830, 2742, 2373, 79, 80, 2729, 3676, 1334, 1158, 654,
	1069, 1695, 1694, 1404, 1693, 3676, 1103, 2387, 1831, 870,
	1396, 1397, 1398, 1399, 1324, 2553, 2555, 1691, 870, 870,
	1410, 1003, 1151, 617, 1068, 1352, 1349, 1350, 1351, 1356,
	1358, 1355, 162, 1354, 612, 62, 63, 3283, 64, 65,
	66, 67, 1721, 1348, 2303, 1824, 1031, 1822, 1823, 1031,
	1825, 1826, 1820, 3587, 2720, 3203, 1055, 2719, 1325, 1326,
	1394, 1395, 3185, 2623, 1400, 2991, 2992, 2588, 1160, 1072,
	1073, 1074, 3708, 1077, 1078, 1079, 1080, 3321, 2995, 1083,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1099, 3214, 3215, 122, 59,
	658, 2991, 2992, 1802, 1801, 1803, 1804, 1805, 87, 973,
	3321, 2697, 157, 92, 2995, 1341, 3707, 2525, 2374, 1031,
	1954, 651, 1113, 973, 1123, 2249, 1110, 3118, 2583, 3781,
	618, 92, 3782, 92, 3780, 1031, 652, 1424, 1428, 1425,
	1122, 1609, 1128, 1129, 1130, 1131, 654, 1552, 1030, 1135,
	1517, 1030, 1116, 1034, 1024, 2696, 2732, 2200, 1036, 2732,
	1137, 2731, 1037, 1035, 2731, 2250, 1167, 1168, 1586, 1588,
	2156, 2157, 2248, 87, 1031, 1385, 1386, 1388, 1387, 1389,
	1390, 1393, 2554, 1038, 1975, 3042, 92, 1390, 2916, 150,
	1031, 1566, 151, 948, 1163, 1121, 1149, 117, 1976, 1845,
	1817, 3612, 1818, 1054, 2766, 1819, 2251, 1568, 1553, 3246,
	3179, 1572, 2323, 1569, 1896, 1827, 2247, 932, 1623, 1966,
	2666, 1030, 163, 1966, 3751, 2404, 1034, 1024, 1362, 175,
	3362, 1036, 1914, 1916, 1917, 1037, 1035, 1030, 2302, 1067,
	1361, 1362, 680, 1064, 3221, 1523, 1524, 1525, 1526, 1527,
	1924, 92, 3220, 2290, 1731, 1730, 1915, 1570, 1720, 1571,
	2300, 102, 2295, 103, 1925, 1391, 1392, 1923, 2298, 118,
	183, 2295, 1553, 1042, 1040, 3744, 1030, 3791, 944, 1546,
	3642, 3580, 1024, 1027, 1028, 3204, 988, 1559, 1585, 1106,
	1021, 1025, 1030, 3785, 3494, 1971, 105, 3493, 1024, 1027,
	1028, 2299, 988, 3280, 1972, 3281, 1021, 1025, 3484, 3296,
	2297, 1020, 1810, 164, 169, 166, 172, 173, 174, 176,
	178, 179, 180, 181, 3295, 3643, 3581, 1973, 1587, 182,
	184, 185, 186, 3228, 1808, 1728, 3227, 1170, 1120, 1170,
	1170, 1556, 1714, 1150, 929, 3217, 1846, 2968, 1567, 955,
	931, 1590, 961, 961, 2379, 2380, 2381, 69, 873, 874,
	875, 1707, 1763, 2956, 3792, 1766, 2648, 1768, 2647, 1736,
	2646, 1737, 1726, 1739, 1741, 1785, 1809, 1745, 1747, 1749,
	1751, 1753, 2255, 1811, 1795, 1794, 1767, 933, 1403, 1408,
	1409, 1793, 1412, 1783, 1413, 1415, 1416, 1417, 1807, 1420,
	1421, 1423, 1423, 1777, 1423, 1427, 1427, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1839, 1725, 1771, 1717, 1516, 1705,
	1518, 1519, 1520, 1521, 1522, 1835, 1704, 1573, 1703, 1690,
	1774, 2747, 1773, 1427, 1427, 1427, 1427, 1427, 1007, 1614,
	1615, 1772, 126, 1006, 1005, 1743, 2094, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 3018, 1851, 1381, 1382, 1383, 1384, 1385, 1386, 1388,
	1387, 1389, 1390, 1847, 1848, 1797, 3211, 659, 1555, 1379,
	2630, 659, 1375, 1328, 1376, 1872, 659, 1852, 1873, 2271,
	2270, 1724, 1724, 1696, 1859, 1860, 1861, 1379, 1377, 1391,
	1392, 1374, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388,
	1387, 1389, 1390, 2269, 2268, 2749, 2267, 2266, 1363, 2443,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1387, 1389,
	1390, 1561, 1363, 99, 3745, 41, 1617, 933, 41, 1796,
	101, 933, 1585, 1594, 100, 2574, 3770, 933, 1949, 1949,
	3732, 1585, 3600, 1947, 1947, 1927, 1950, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1359, 1585, 1849, 3607, 1969, 2574, 3670, 3520, 1970, 1853,
	108, 1855, 1856, 1857, 1858, 2759, 2758, 2757, 1862, 1595,
	2751, 107, 2755, 106, 2750, 3606, 2748, 2441, 99, 1585,
	1874, 2753, 3755, 1585, 2574, 3650, 1920, 1359, 1585, 100,
	2752, 1552, 2033, 3584, 1928, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1388, 1387, 1389, 1390, 1404, 3583, 2754, 2756,
	3582, 2094, 2574, 3646, 3519, 2091, 2029, 3633, 1585, 3264,
	3597, 3497, 1585, 1967, 2093, 3178, 3489, 1363, 3473, 1918,
	1880, 1881, 1379, 1360, 2741, 1361, 1362, 1363, 868, 1921,
	83, 1585, 2087, 83, 1585, 1897, 3472, 1360, 3361, 1361,
	1362, 3359, 1553, 2574, 3485, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1388, 1387, 1389, 1390, 3292, 2116, 1383, 1384,
	1385, 1386, 1388, 1387, 1389, 1390, 1926, 1551, 1550, 1549,
	1379, 3225, 2386, 3210, 1586, 2123, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1365, 3264, 1585, 1363, 2099, 2574, 3262,
	1363, 3027, 1953, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1388, 1387, 1389, 1390, 3024, 1960, 1962, 2959, 2147, 2958,
	2090, 3753, 1585, 1363, 1379, 2295, 1585, 3477, 1977, 1978,
	1979, 1980, 2140, 2657, 2141, 3183, 1585, 2484, 1585, 2949,
	2948, 3476, 1991, 2946, 2947, 3272, 1170, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1388, 1387, 1389, 1390, 2644, 2027,
	2104, 2105, 1360, 1363, 1361, 1362, 1548, 1363, 2355, 2038,
	2354, 2768, 1360, 2619, 1361, 1362, 2209, 102, 2401, 103,
	3687, 1585, 1363, 2317, 3685, 1585, 1363, 2316, 2100, 2099,
	2944, 2945, 2181, 2944, 2943, 2101, 2153, 102, 2135, 103,
	2598, 1585, 2373, 2706, 1686, 2687, 2684, 3683, 1585, 2081,
	2082, 2083, 2084, 2085, 2146, 1698, 1699, 1700, 2103, 1876,
	2256, 2106, 2107, 1842, 1364, 2680, 2681, 2574, 2573, 2397,
	1585, 1360, 1806, 1361, 1362, 1360, 2620, 1361, 1362, 1363,
	2218, 2219, 2220, 2221, 2122, 1363, 2622, 945, 1585, 1363,
	1798, 2400, 2204, 1419, 2203, 101, 2134, 2185, 1360, 2124,
	1361, 1362, 1363, 2163, 2164, 2038, 3559, 1585, 1363, 2619,
	3557, 1585, 1363, 1788, 2213, 2145, 2214, 2215, 2216, 2217,
	2168, 1784, 1775, 1776, 2207, 2148, 1780, 2101, 1781, 1782,
	1779, 3059, 2224, 2225, 2226, 2227, 2166, 2238, 1360, 1778,
	1361, 1362, 1360, 2244, 1361, 1362, 2191, 2284, 1596, 978,
	2190, 1170, 1170, 2189, 1585, 2206, 2205, 1360, 1161, 1361,
	1362, 1360, 2662, 1361, 1362, 85, 2590, 1363, 85, 3554,
	1585, 1363, 2620, 3540, 1585, 1363, 2281, 2254, 2439, 1363,
	2015, 2590, 2373, 979, 1952, 1585, 3154, 1585, 1686, 1685,
	1629, 1628, 3147, 1585, 2570, 2911, 2239, 1585, 2208, 2228,
	2230, 2231, 2881, 2289, 2235, 2373, 2292, 2253, 2293, 101,
	2257, 2597, 1363, 3178, 1360, 2265, 1361, 1362, 1359, 3180,
	1360, 107, 1361, 1362, 1360, 3638, 1361, 1362, 3611, 2309,
	2574, 2239, 2288, 2287, 1032, 1363, 2598, 1360, 2598, 1361,
	1362, 2296, 1363, 1360, 3139, 1361, 1362, 1360, 2946, 1361,
	1362, 2310, 1585, 3178, 2854, 3144, 1585, 2192, 2397, 3142,
	1585, 2484, 2428, 3110, 1585, 2313, 2598, 2397, 2427, 2314,
	2315, 2007, 1996, 1997, 1998, 1999, 2009, 2000, 2001, 2002,
	2014, 2010, 2003, 2004, 2011, 2012, 2013, 2005, 2006, 2008,
	1359, 2295, 2278, 2161, 1363, 2320, 3108, 1585, 1589, 2295,
	2125, 1952, 1360, 1898, 1361, 1362, 1360, 1882, 1361, 1362,
	1360, 1829, 1361, 1362, 1360, 1616, 1361, 1362, 1015, 3106,
	1585, 1014, 934, 2383, 2390, 2385, 3104, 1585, 2395, 2291,
	93, 2398, 3713, 2399, 3653, 3508, 1592, 3474, 2406, 1601,
	3373, 3245, 2408, 2409, 2410, 3242, 3223, 1360, 3069, 1361,
	1362, 3068, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 1363, 2348, 1688, 2237, 3016, 2973, 2394, 2969,
	1360, 2688, 1361, 1362, 2391, 1920, 1689, 1360, 2393, 1361,
	1362, 2234, 2384, 2229, 2223, 1363, 2222, 1813, 2432, 2433,
	2434, 2435, 2436, 1719, 2438, 2389, 1033, 3229, 2440, 2363,
	93, 1715, 2445, 2446, 1684, 2447, 1724, 119, 2450, 2653,
	2451, 2453, 2455, 2457, 2459, 2461, 2463, 2465, 2467, 2469,
	2471, 2473, 2475, 2477, 2479, 2481, 2483, 2371, 1921, 1360,
	2486, 1361, 1362, 2971, 2490, 2382, 2654, 1105, 2495, 2496,
	2497, 2498, 2179, 1363, 3190, 3191, 3102, 1585, 3230, 3231,
	3232, 2509, 2510, 2511, 2512, 2513, 2514, 2654, 3020, 2518,
	2519, 1363, 3509, 2252, 2138, 2100, 1363, 2521, 2523, 3100,
	1585, 1363, 2101, 3765, 2526, 2527, 2528, 2529, 2530, 2403,
	1878, 3763, 1363, 3739, 3619, 2537, 2538, 1759, 2539, 1363,
	3545, 2542, 2544, 2147, 3193, 2546, 2965, 1360, 2964, 1361,
	1362, 1363, 2963, 2881, 1843, 2558, 2667, 2357, 2358, 1363,
	1949, 2349, 2360, 3196, 993, 1947, 3195, 2559, 2411, 2903,
	1360, 2361, 1361, 1362, 2904, 2901, 1363, 3098, 1585, 3615,
	2902, 2905, 2437, 2607, 2608, 2426, 2900, 2899, 1760, 1761,
	1762, 1593, 1879, 3510, 1363, 3096, 1585, 993, 1363, 2152,
	3094, 1585, 2144, 1363, 3184, 3092, 1585, 1363, 2603, 2606,
	2607, 2608, 2604, 2557, 2605, 2609, 3090, 1585, 3190, 3191,
	2431, 1363, 2859, 3088, 1585, 1363, 2858, 3352, 1360, 3579,
	1361, 1362, 3354, 2871, 2873, 3086, 1585, 2560, 41, 2562,
	1363, 2575, 2874, 3084, 1585, 2594, 1360, 2612, 1361, 1362,
	2614, 1360, 3233, 1361, 1362, 3171, 1360, 949, 1361, 1362,
	3082, 1585, 3343, 3170, 3342, 950, 3174, 1360, 2613, 1361,
	1362, 2868, 2571, 1828, 1360, 920, 1361, 1362, 3080, 1585,
	1363, 1559, 2584, 2547, 1363, 2942, 1360, 3515, 1361, 1362,
	1363, 3074, 1585, 2637, 1360, 2567, 1361, 1362, 1598, 3234,
	3235, 3236, 2640, 2642, 2572, 3057, 1585, 2658, 1553, 3198,
	2587, 1360, 3341, 1361, 1362, 1071, 2617, 1070, 2633, 99,
	1327, 2679, 1363, 1755, 2545, 1585, 1363, 3035, 2653, 1360,
	100, 1361, 1362, 1360, 2621, 1361, 1362, 1975, 1360, 2624,
	1361, 1362, 1360, 2735, 1361, 1362, 99, 2631, 2703, 2634,
	2244, 1976, 2694, 101, 3777, 3176, 1360, 100, 1361, 1362,
	1360, 127, 1361, 1362, 1597, 2645, 2163, 2164, 2543, 1585,
	1756, 1757, 1758, 101, 3149, 1360, 2961, 1361, 1362, 2352,
	3692, 2655, 2603, 2606, 2607, 2608, 2604, 3596, 2605, 2609,
	2378, 3504, 1908, 1909, 1910, 1911, 2663, 2941, 2664, 2611,
	2668, 2669, 2670, 2149, 2701, 2857, 2522, 1585, 957, 958,
	2499, 1585, 2341, 2856, 1707, 1360, 2340, 1361, 1362, 1360,
	2339, 1361, 1362, 2689, 2690, 1360, 2338, 1361, 1362, 2388,
	2337, 3156, 2770, 2771, 2772, 2773, 2774, 2745, 2377, 106,
	3567, 1955, 1956, 2699, 1363, 2700, 1958, 3566, 961, 961,
	1963, 2779, 3548, 3360, 1968, 3358, 1363, 1360, 3357, 1361,
	1362, 1360, 3350, 1361, 1362, 1363, 2392, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 2724, 3243, 3175,
	2727, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2760, 2028,
	3173, 2030, 2031, 2032, 2744, 2034, 2035, 2036, 2775, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2761, 2743,
	2763, 3746, 1363, 2086, 2974, 2088, 2279, 2095, 2096, 961,
	3595, 961, 961, 961, 961, 961, 1702, 956, 108, 107,
	3349, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 107,
	2117, 2118, 2119, 2120, 2121, 2733, 108, 2524, 2734, 1360,
	3164, 1361, 1362, 2833, 3331, 2784, 2590, 107, 108, 106,
	2762, 1360, 2570, 1361, 1362, 2838, 2782, 2835, 101, 107,
	1360, 106, 1361, 1362, 3767, 3766, 3766, 1363, 961, 2556,
	2429, 2136, 1610, 1602, 2806, 3767, 2890, 2090, 1363, 2090,
	112, 113, 3585, 3209, 947, 3, 3145, 933, 108, 1895,
	2159, 2160, 10, 1363, 2908, 95, 1, 1893, 2181, 107,
	9, 106, 2878, 1894, 1330, 1329, 8, 2861, 2595, 2596,
	101, 3213, 2893, 3702, 631, 2837, 2198, 2179, 2838, 2862,
	933, 2615, 2126, 936, 2910, 1363, 2181, 2181, 2181, 2181,
	2181, 2834, 1557, 2836, 2849, 3740, 2853, 1360, 3698, 1361,
	1362, 2808, 3699, 2810, 1799, 2884, 2181, 1789, 3275, 2181,
	2884, 2491, 1585, 2055, 2860, 2887, 3505, 2863, 2977, 2821,
	2822, 2823, 2824, 3481, 2875, 2876, 2285, 2912, 3241, 1585,
	2913, 2242, 1023, 938, 152, 2201, 2892, 2240, 3247, 2202,
	2895, 2896, 2894, 2898, 937, 2897, 3666, 102, 116, 103,
	2997, 2906, 981, 115, 1026, 1134, 2914, 2816, 2817, 2818,
	2819, 2820, 1360, 2280, 1361, 1362, 3265, 2638, 2920, 2482,
	1585, 2210, 1635, 1360, 1633, 1361, 1362, 1634, 1632, 1637,
	2951, 3037, 2953, 2952, 1636, 3043, 1363, 2430, 1360, 3117,
	1361, 1362, 1886, 666, 2692, 2610, 2976, 1363, 660, 190,
	1624, 3054, 3055, 3056, 1603, 3058, 3060, 1363, 3131, 3005,
	1065, 1839, 3004, 2975, 621, 2244, 2996, 2950, 2318, 3067,
	1360, 627, 1361, 1362, 3071, 3072, 3073, 3075, 3076, 3077,
	3078, 3079, 3081, 3083, 3085, 3087, 3089, 3091, 3093, 3095,
	3097, 3099, 3101, 3103, 3105, 3107, 3109, 1411, 3028, 3111,
	3030, 3113, 3114, 3115, 3011, 1877, 3119, 3120, 3121, 3122,
	3123, 3124, 3125, 3126, 3127, 3128, 3129, 3031, 1363, 3039,
	2480, 1585, 2855, 2625, 976, 3136, 968, 3048, 3140, 1363,
	3141, 3143, 2649, 3146, 3148, 2137, 3150, 3151, 3152, 3153,
	1363, 2478, 1585, 2561, 3159, 3045, 3046, 975, 3047, 3482,
	2889, 3049, 3168, 3051, 2867, 3053, 2869, 2850, 2851, 2852,
	1363, 2577, 3133, 2872, 3038, 2865, 3578, 1363, 3351, 3137,
	3651, 1360, 2635, 1361, 1362, 1599, 3138, 2402, 1964, 3181,
	3182, 1401, 1360, 3186, 1361, 1362, 2178, 3326, 1913, 1363,
	1583, 1579, 1360, 689, 1361, 1362, 688, 686, 2563, 2591,
	1366, 858, 2476, 1585, 2551, 1580, 1611, 2602, 2600, 3162,
	2599, 2350, 2656, 2474, 1585, 2186, 3192, 2659, 2660, 3188,
	3694, 2180, 2176, 2569, 3116, 3160, 3157, 3158, 809, 808,
	2142, 2143, 1582, 698, 1581, 3165, 1363, 690, 3172, 682,
	807, 806, 3187, 3206, 2472, 1585, 3003, 3678, 2709, 2181,
	3177, 2470, 1585, 1360, 1363, 1361, 1362, 3017, 3197, 3194,
	1363, 3201, 3202, 2711, 1360, 2826, 1361, 1362, 1363, 2405,
	3200, 3199, 1363, 2468, 1585, 1360, 1363, 1361, 1362, 2636,
	2412, 2413, 2414, 2415, 3207, 3248, 3249, 3013, 3005, 3263,
	3208, 3004, 1344, 1363, 1575, 1360, 676, 1361, 1362, 1363,
	994, 3224, 1360, 3226, 1361, 1362, 3269, 3270, 3040, 1363,
	3602, 2376, 3063, 3033, 3034, 1363, 1574, 1994, 2179, 1995,
	2466, 1585, 3609, 2985, 1360, 1419, 1361, 1362, 1363, 3259,
	2966, 3282, 1363, 2685, 3286, 2272, 1363, 68, 2464, 1585,
	45, 2888, 3573, 85, 2462, 1585, 2179, 2179, 2179, 2179,
	2179, 1363, 2460, 1585, 3639, 805, 2458, 1585, 1363, 802,
	3112, 3297, 3328, 3271, 3329, 1363, 2179, 3330, 2829, 2179,
	1363, 1360, 2830, 1361, 1362, 1363, 3622, 2456, 1585, 3623,
	801, 3624, 2022, 2454, 1585, 1340, 3291, 1337, 3715, 1360,
	1888, 1361, 1362, 2452, 1585, 1360, 94, 1361, 1362, 3066,
	1363, 36, 35, 1360, 3287, 1361, 1362, 1360, 3317, 1361,
	1362, 1360, 3065, 1361, 1362, 34, 3062, 33, 32, 26,
	2541, 3325, 25, 24, 23, 1363, 22, 29, 1360, 3332,
	1361, 1362, 19, 2994, 1360, 2540, 1361, 1362, 21, 20,
	18, 2988, 2536, 3002, 1360, 3735, 1361, 1362, 3776, 2535,
	1360, 121, 1361, 1362, 2534, 54, 51, 49, 129, 2533,
	128, 52, 48, 1360, 1601, 1361, 1362, 1360, 1108, 1361,
	1362, 1360, 46, 1361, 1362, 31, 30, 3346, 17, 16,
	15, 14, 13, 3324, 2532, 12, 1360, 11, 1361, 1362,
	7, 6, 1949, 1360, 39, 1361, 1362, 1947, 38, 3375,
	1360, 28, 1361, 1362, 37, 1360, 27, 1361, 1362, 2531,
	1360, 4, 1361, 1362, 2672, 2274, 3369, 3347, 0, 0,
	41, 0, 3356, 0, 3355, 3363, 0, 3367, 1363, 3371,
	0, 0, 0, 3365, 0, 1360, 0, 1361, 1362, 0,
	0, 2884, 0, 0, 0, 0, 3379, 0, 3376, 3377,
	3496, 0, 2887, 1363, 0, 0, 2887, 3483, 0, 3503,
	1360, 0, 1361, 1362, 1363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 0, 3315, 0, 1363, 3513,
	3514, 3479, 3516, 0, 3517, 3518, 0, 3480, 3478, 3521,
	3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531,
	3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3495, 3541,
	3544, 3542, 2520, 3543, 3507, 854, 3500, 1949, 3499, 0,
	2954, 2955, 1947, 3487, 3546, 3553, 3555, 3556, 3558, 3560,
	3561, 3563, 0, 0, 0, 0, 0, 2515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2508, 0,
	0, 0, 0, 0, 0, 1363, 0, 0, 2507, 2179,
	0, 0, 2506, 1360, 0, 1361, 1362, 0, 3547, 3593,
	193, 0, 3205, 193, 3549, 0, 0, 664, 3552, 3568,
	3569, 2740, 670, 3571, 0, 3589, 1363, 0, 1360, 3570,
	1361, 1362, 0, 193, 3588, 0, 0, 0, 3586, 1360,
	961, 1361, 1362, 2764, 2765, 0, 0, 2767, 193, 1360,
	2769, 1361, 1362, 1360, 0, 1361, 1362, 1363, 3592, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 0,
	2776, 2777, 2778, 670, 193, 670, 0, 0, 2887, 2505,
	0, 1363, 2783, 0, 0, 2785, 2786, 2787, 0, 0,
	0, 2788, 2789, 0, 0, 2790, 0, 2791, 0, 2792,
	0, 2793, 0, 2794, 0, 2795, 0, 2796, 0, 2797,
	2504, 2798, 0, 2799, 0, 2800, 0, 2801, 0, 2802,
	0, 2803, 0, 2804, 0, 2805, 3594, 2058, 2807, 0,
	1360, 2809, 1361, 1362, 2811, 2812, 2813, 2814, 0, 0,
	0, 2503, 2815, 2058, 2058, 2058, 2058, 2058, 0, 0,
	2502, 0, 1363, 0, 3577, 0, 0, 0, 2825, 3608,
	3613, 1360, 0, 1361, 1362, 2501, 0, 961, 0, 0,
	0, 0, 0, 3618, 2839, 2840, 2841, 2842, 2843, 2844,
	3605, 0, 41, 2845, 2846, 0, 2847, 0, 2848, 3610,
	1583, 1579, 1360, 3634, 1361, 1362, 0, 0, 3601, 3635,
	3636, 1360, 0, 1361, 1362, 1580, 0, 0, 0, 0,
	0, 0, 1363, 0, 0, 0, 1360, 0, 1361, 1362,
	0, 3647, 0, 3628, 0, 1363, 3629, 0, 0, 0,
	1576, 1577, 1582, 2879, 1581, 0, 2500, 0, 0, 0,
	0, 3218, 3219, 3340, 3637, 3344, 3345, 3672, 3673, 1363,
	3644, 0, 0, 0, 0, 3649, 0, 0, 2909, 0,
	3654, 3682, 3684, 3686, 3679, 0, 3680, 0, 2888, 0,
	85, 3665, 2888, 3657, 41, 3662, 3659, 3658, 3656, 3661,
	3660, 3652, 1363, 0, 0, 0, 3714, 1360, 2884, 1361,
	1362, 3507, 3667, 3690, 3252, 0, 2494, 0, 3256, 3257,
	3258, 1363, 0, 1560, 0, 3693, 3711, 3701, 3706, 2493,
	0, 1363, 0, 0, 0, 3679, 0, 3680, 3720, 2972,
	0, 0, 1363, 3718, 0, 3731, 1363, 0, 0, 0,
	0, 0, 0, 2492, 0, 0, 0, 0, 0, 3488,
	1414, 0, 3729, 0, 3617, 0, 3734, 1360, 0, 1361,
	1362, 0, 3627, 0, 0, 0, 0, 3752, 3754, 3756,
	1360, 615, 1361, 1362, 0, 3747, 2489, 3749, 0, 1949,
	0, 0, 0, 0, 1947, 0, 3761, 3757, 0, 3760,
	3758, 923, 3764, 3762, 1360, 2488, 1361, 1362, 3775, 0,
	0, 3679, 0, 3680, 3772, 2487, 0, 0, 3778, 0,
	0, 0, 3786, 3784, 3787, 3788, 2485, 0, 0, 0,
	2449, 3061, 0, 0, 0, 0, 0, 1360, 0, 1361,
	1362, 0, 989, 1949, 0, 3070, 3795, 3796, 1947, 3543,
	3793, 3794, 0, 0, 0, 0, 1360, 0, 1361, 1362,
	0, 0, 0, 0, 0, 0, 1360, 0, 1361, 1362,
	0, 0, 0, 0, 2888, 0, 0, 1360, 0, 1361,
	1362, 1360, 0, 1361, 1362, 0, 0, 0, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	3490, 3491, 3492, 0, 0, 0, 1363, 0, 193, 0,
	193, 0, 188, 193, 3603, 0, 0, 1363, 0, 0,
	0, 0, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 188, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 670, 670, 170,
	0, 0, 3244, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 1363, 0, 0, 0, 670, 193, 0,
	0, 170, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3268, 0, 0, 0, 0,
	2448, 0, 2632, 0, 0, 0, 1406, 0, 0, 0,
	0, 2444, 0, 0, 0, 167, 0, 2442, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3648,
	0, 0, 0, 0, 85, 0, 0, 167, 0, 0,
	168, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	3288, 1360, 3289, 1361, 1362, 3290, 0, 2407, 3293, 3294,
	0, 0, 1360, 187, 1361, 1362, 2396, 3298, 1360, 0,
	1361, 1362, 0, 3299, 0, 3300, 0, 3301, 0, 3302,
	0, 3303, 0, 3304, 0, 3305, 0, 3306, 0, 3307,
	0, 3308, 0, 3309, 0, 3310, 0, 3311, 0, 3312,
	0, 3313, 0, 3314, 0, 0, 0, 0, 1360, 3316,
	1361, 1362, 0, 0, 0, 0, 0, 1360, 0, 1361,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3730, 0, 3333, 0, 0, 3334, 0, 3335, 3336, 0,
	3337, 0, 3338, 0, 0, 0, 0, 3339, 0, 2924,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 3364, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 3372, 177, 0, 3374, 0, 0, 0,
	0, 0, 0, 0, 2925, 0, 0, 0, 3378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3475, 0, 2927, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 670, 670, 0, 0, 0, 2922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 2938, 2939, 0, 0, 0, 0, 0,
	2923, 0, 0, 0, 0, 0, 1109, 670, 1115, 0,
	193, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 162, 0, 193, 0,
	0, 0, 188, 2929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2678, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 149, 0,
	0, 0, 0, 0, 0, 670, 1336, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 3576, 0, 670, 670, 0, 670, 0, 670,
	670, 0, 670, 670, 670, 670, 670, 670, 0, 0,
	160, 2937, 0, 0, 0, 1406, 148, 0, 1406, 670,
	1406, 193, 0, 2940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 168, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 670, 0, 193, 1710, 1711, 159,
	158, 187, 0, 0, 1706, 0, 0, 0, 0, 0,
	670, 0, 193, 0, 0, 0, 0, 127, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	170, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 670, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 163, 148, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 2926,
	0, 0, 0, 0, 0, 0, 167, 0, 163, 168,
	0, 0, 0, 0, 0, 175, 0, 0, 3616, 0,
	153, 1712, 156, 0, 1709, 0, 154, 155, 1710, 1711,
	159, 158, 187, 171, 183, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 3630, 0, 0,
	3631, 0, 3632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 169, 166,
	172, 173, 174, 176, 178, 179, 180, 181, 0, 0,
	0, 0, 0, 182, 184, 185, 186, 0, 0, 164,
	169, 166, 172, 173, 174, 176, 178, 179, 180, 181,
	0, 0, 0, 0, 0, 182, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 153, 1712, 156, 0, 1709, 0, 154, 155, 670,
	670, 0, 0, 0, 171, 0, 1630, 0, 0, 0,
	0, 0, 670, 177, 0, 0, 3712, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3726, 0, 3727, 0,
	3728, 0, 2930, 0, 0, 0, 2934, 0, 0, 0,
	0, 0, 0, 2933, 853, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	670, 0, 0, 0, 0, 0, 1406, 2935, 0, 0,
	0, 0, 2931, 0, 0, 0, 157, 2932, 0, 0,
	0, 0, 0, 0, 0, 0, 3773, 0, 3774, 0,
	0, 670, 670, 0, 1814, 649, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 669, 150, 669, 0, 151, 0, 0, 0,
	0, 0, 0, 2102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 157, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3733, 183, 193, 0, 0, 670, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 193, 0,
	0, 0, 670, 0, 0, 2102, 193, 0, 193, 0,
	193, 193, 0, 0, 150, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 164, 169, 166,
	172, 173, 174, 176, 178, 179, 180, 181, 0, 0,
	0, 0, 0, 182, 184, 185, 186, 163, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 164, 169,
	166, 172, 173, 174, 176, 178, 179, 180, 181, 0,
	0, 0, 0, 0, 182, 184, 185, 186, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 670, 0, 0,
	0, 670, 670, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 1653, 0, 0, 0, 193, 193, 0, 0, 193,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 1666, 1669, 1670, 1671, 1672, 1673, 1674,
	0, 1675, 1676, 1678, 1679, 1677, 1680, 1681, 1654, 1655,
	1656, 1657, 1638, 1639, 1667, 0, 1641, 0, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1640, 0, 1651,
	1658, 1659, 1660, 1661, 0, 1662, 1663, 1664, 1665, 0,
	0, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2165, 0, 1406, 0,
	2102, 0, 0, 0, 2169, 0, 2172, 0, 0, 1901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 985, 0, 992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 1323, 669, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	0, 0, 0, 1666, 1669, 1670, 1671, 1672, 1673, 1674,
	0, 1675, 1676, 1678, 1679, 1677, 1680, 1681, 1654, 1655,
	1656, 1657, 1638, 1639, 1667, 1405, 1641, 1668, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 0, 0, 1651,
	1658, 1659, 1660, 1661, 0, 1662, 1663, 1664, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 0, 0, 0, 2329, 0, 0, 0, 0, 0,
	0, 0, 0, 2346, 2347, 193, 0, 2351, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 2356, 0,
	0, 0, 0, 0, 0, 2359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 1405,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	669, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 193, 193, 193, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 193, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 1718, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 1405, 1729, 0,
	0, 1732, 1733, 669, 669, 0, 669, 0, 669, 669,
	0, 669, 669, 669, 669, 669, 669, 670, 0, 0,
	0, 0, 0, 0, 1405, 1764, 1765, 1405, 669, 1405,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 1172, 0, 1172, 1172, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 2616, 0,
	93, 0, 0, 871, 0, 0, 1335, 859, 872, 873,
	874, 875, 860, 669, 0, 861, 862, 0, 863, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 868, 876, 877, 0, 193, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 1406, 0,
	0, 670, 670, 1406, 193, 193, 193, 193, 193, 0,
	0, 0, 2665, 0, 0, 0, 193, 0, 0, 3006,
	3007, 0, 193, 0, 193, 0, 0, 193, 193, 193,
	0, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 193, 0, 0, 0, 0, 2714, 2715,
	2716, 2717, 2718, 0, 0, 0, 670, 0, 0, 1406,
	0, 0, 811, 0, 670, 0, 0, 0, 0, 193,
	0, 0, 1901, 2728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 3008, 0, 0, 0, 669, 669,
	0, 0, 0, 0, 0, 0, 0, 2736, 0, 0,
	0, 669, 193, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 0, 669, 0,
	0, 3009, 3010, 0, 0, 0, 0, 0, 1405, 0,
	1563, 1564, 962, 962, 0, 0, 0, 1957, 0, 669,
	0, 616, 0, 0, 0, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 1607, 0, 0, 0,
	669, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 0, 0, 829, 0, 826,
	827, 0, 0, 0, 828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 1735, 1735, 0, 1735, 193, 1735, 1735,
	0, 1744, 1735, 1735, 1735, 1735, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 985, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 193, 0, 0, 193,
	193, 193, 0, 1812, 0, 0, 0, 0, 0, 670,
	670, 0, 0, 0, 0, 0, 0, 669, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2962, 0, 0, 669, 0, 670, 670, 670, 670,
	0, 0, 0, 1172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3029, 669, 0, 3032, 0, 0, 0, 0, 2262, 2263,
	2264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 0, 0, 669, 1727, 0, 0, 1727, 0,
	1727, 0, 0, 0, 0, 0, 2294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 193, 669, 0, 0, 0,
	669, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 670,
	0, 670, 0, 0, 0, 0, 0, 0, 1172, 1172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3161,
	0, 1889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 670, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 669, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 3222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 616, 871, 0,
	616, 0, 0, 872, 3237, 0, 0, 3238, 3239, 3240,
	1992, 1993, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 1405, 0, 669,
	670, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 1407, 0, 0, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 0, 0,
	2139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 1607, 0, 0, 1172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 985, 0,
	0, 1406, 0, 670, 992, 2629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 670, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 943, 0, 0, 0, 0, 670,
	0, 985, 0, 0, 0, 0, 1943, 669, 0, 0,
	1943, 1943, 0, 193, 670, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 616, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 1727, 1727, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 2702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 1407, 0, 1407, 616, 0,
	0, 2365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 1786, 2094,
	0, 0, 872, 0, 0, 0, 0, 0, 0, 669,
	0, 0, 1948, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 1172,
	0, 0, 0, 616, 0, 0, 669, 0, 0, 0,
	0, 0, 1863, 1864, 616, 616, 616, 616, 616, 616,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3614, 0, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 1405, 0, 0,
	669, 669, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2579, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 1405, 0,
	0, 0, 0, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 962,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2661, 0, 0,
	0, 0, 0, 0, 3036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2151, 0, 0, 0, 0, 0,
	0, 2686, 0, 0, 0, 0, 0, 0, 0, 0,
	2691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 962,
	1838, 962, 962, 962, 962, 962, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 1838, 616, 0, 616, 0, 616, 2188, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 3212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2827, 0, 0, 0, 0, 0, 0, 0,
	1172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 669, 669, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1172, 0, 0, 0, 0, 0, 0,
	2891, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 616, 0, 0, 616, 0, 2353, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 0, 0, 0, 0,
	0, 0, 0, 2151, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 1405, 0, 0, 0, 0, 669, 0,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 1407, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 871, 0, 0, 0, 859, 872, 873, 874, 875,
	860, 0, 0, 861, 862, 0, 863, 0, 0, 0,
	0, 3132, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 876, 877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 669,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3006, 3007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2151, 2151,
	0, 0, 3008, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	0, 0, 616, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3276, 3277, 3278, 3279, 0,
	0, 0, 0, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3009,
	3010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 2671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1405, 0, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 669, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 616, 616,
	616, 616, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 616, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3368, 0,
	3370, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2151, 0, 0, 0, 0, 669, 0, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 3498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3564, 0, 962, 0, 3564,
	3564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	1407, 616, 616, 616, 616, 616, 0, 0, 0, 0,
	0, 0, 0, 2907, 0, 0, 0, 0, 0, 1786,
	0, 616, 0, 0, 616, 2915, 1838, 0, 0, 3397,
	3399, 3398, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 2151, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1172, 1172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 3403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3641, 0, 3411, 3412,
	0, 0, 3457, 3456, 3455, 0, 0, 3453, 3454, 3452,
	0, 0, 0, 0, 0, 0, 0, 0, 2151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 3132, 0, 3696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 825, 616, 716, 829, 718, 826, 827, 0,
	714, 717, 828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 0, 0, 616, 616, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 736,
	3396, 3400, 3401, 3402, 3413, 3430, 3431, 3439, 3441, 784,
	3440, 3442, 3443, 3444, 3447, 3448, 3449, 3450, 3445, 3446,
	3451, 3380, 3384, 3381, 3382, 3383, 3395, 3385, 3386, 3387,
	3388, 3389, 3390, 3391, 3392, 3393, 3394, 3458, 3459, 3460,
	3461, 3462, 3463, 3406, 3410, 3409, 3407, 3408, 3404, 3405,
	3414, 3416, 3417, 3418, 3415, 3419, 3420, 3421, 3422, 3423,
	3424, 3425, 3426, 3427, 3428, 3429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	831, 0, 0, 835, 0, 0, 0, 837, 836, 0,
	838, 804, 803, 0, 0, 832, 833, 0, 834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3464, 3465, 3466, 3467, 3468, 3469, 3470,
	3471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 386,
	0, 0, 0, 1306, 1291, 506, 0, 1234, 1309, 1203,
	1222, 1319, 1225, 1228, 1270, 1182, 1248, 405, 1219, 1175,
	1207, 1177, 1214, 1178, 1205, 1236, 263, 1202, 1293, 1252,
	1308, 356, 260, 1184, 1208, 419, 1224, 200, 1272, 475,
	247, 367, 364, 530, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 1315, 360, 1258, 0, 485, 390, 0,
	1786, 0, 1238, 1297, 1246, 1284, 1233, 1271, 1192, 1257,
	1310, 1220, 1267, 1311, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 3668, 659, 0, 0, 0,
	0, 3669, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 1216, 1264, 1305, 1217, 1266, 258, 313,
	265, 257, 527, 1316, 1296, 1181, 1245, 1304, 0, 0,
	224, 1307, 1240, 0, 1269, 0, 1322, 1176, 1260, 0,
	1179, 1183, 1318, 1300, 1211, 268, 0, 0, 0, 0,
	0, 0, 0, 1237, 1247, 1281, 1285, 1231, 0, 0,
	0, 0, 0, 0, 0, 1209, 0, 1256, 0, 0,
	0, 1188, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	1191, 0, 1210, 1282, 0, 1174, 290, 1185, 391, 250,
	0, 442, 1289, 1299, 1232, 569, 1303, 1230, 1229, 1276,
	1189, 1295, 1223, 355, 1187, 322, 195, 220, 0, 1221,
	401, 450, 462, 1294, 1206, 1215, 248, 1213, 460, 415,
	547, 228, 277, 447, 421, 458, 429, 280, 1255, 1274,
	459, 362, 532, 439, 544, 570, 571, 256, 395, 556,
	500, 564, 588, 221, 253, 409, 493, 550, 482, 387,
	528, 529, 321, 481, 288, 198, 359, 576, 219, 468,
	361, 237, 226, 534, 553, 282, 445, 583, 208, 495,
	542, 234, 472, 0, 0, 590, 242, 492, 210, 539,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 536, 537, 249, 591, 223, 563, 215,
	1186, 562, 397, 531, 540, 384, 373, 214, 538, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 551, 0, 203, 0, 487,
	552, 592, 441, 207, 229, 230, 232, 1201, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	1290, 526, 545, 557, 568, 574, 575, 577, 578, 579,
	580, 581, 584, 582, 396, 303, 483, 325, 363, 1279,
	1321, 414, 461, 235, 549, 484, 1196, 1200, 1194, 1261,
	1195, 1250, 1251, 1197, 1312, 1313, 1314, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 1283, 1190, 0, 1198,
	1199, 1292, 1301, 1302, 611, 374, 474, 546, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 525,
	304, 211, 212, 213, 502, 503, 504, 505, 560, 561,
	565, 451, 452, 453, 454, 285, 555, 301, 457, 456,
	323, 324, 369, 438, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	1254, 194, 216, 358, 1317, 443, 281, 589, 559, 554,
	201, 218, 1193, 255, 1204, 1212, 0, 1218, 1226, 1227,
	1239, 1241, 1242, 1243, 1244, 1262, 1263, 1265, 1273, 1275,
	1278, 1280, 1287, 1298, 1320, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 533, 535, 548, 566, 572, 469, 293, 294, 433,
	434, 306, 307, 586, 587, 292, 543, 573, 541, 585,
	567, 427, 368, 1253, 1259, 371, 274, 297, 312, 1268,
	558, 490, 222, 455, 283, 246, 1286, 1288, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 1249, 1277, 366, 523, 524, 308, 386, 0,
	0, 0, 1306, 1291, 506, 0, 1234, 1309, 1203, 1222,
	1319, 1225, 1228, 1270, 1182, 1248, 405, 1219, 1175, 1207,
	1177, 1214, 1178, 1205, 1236, 263, 1202, 1293, 1252, 1308,
	356, 260, 1184, 1208, 419, 1224, 200, 1272, 475, 247,
	367, 364, 530, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 1315, 360, 1258, 0, 485, 390, 0, 0,
	0, 1238, 1297, 1246, 1284, 1233, 1271, 1192, 1257, 1310,
	1220, 1267, 1311, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 1216, 1264, 1305, 1217, 1266, 258, 313, 265,
	257, 527, 1316, 1296, 1181, 1245, 1304, 0, 0, 224,
	1307, 1240, 0, 1269, 0, 1322, 1176, 1260, 0, 1179,
	1183, 1318, 1300, 1211, 268, 0, 0, 0, 0, 0,
	0, 0, 1237, 1247, 1281, 1285, 1231, 0, 0, 0,
	0, 0, 2916, 0, 1209, 0, 1256, 0, 0, 0,
	1188, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 1191,
	0, 1210, 1282, 0, 1174, 290, 1185, 391, 250, 0,
	442, 1289, 1299, 1232, 569, 1303, 1230, 1229, 1276, 1189,
	1295, 1223, 355, 1187, 322, 195, 220, 0, 1221, 401,
	450, 462, 1294, 1206, 1215, 248, 1213, 460, 415, 547,
	228, 277, 447, 421, 458, 429, 280, 1255, 1274, 459,
	362, 532, 439, 544, 570, 571, 256, 395, 556, 500,
	564, 588, 221, 253, 409, 493, 550, 482, 387, 528,
	529, 321, 481, 288, 198, 359, 576, 219, 468, 361,
	237, 226, 534, 553, 282, 445, 583, 208, 495, 542,
	234, 472, 0, 0, 590, 242, 492, 210, 539, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 536, 537, 249, 591, 223, 563, 215, 1186,
	562, 397, 531, 540, 384, 373, 214, 538, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 551, 0, 203, 0, 487, 552,
	592, 441, 207, 229, 230, 232, 1201, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 1290,
	526, 545, 557, 568, 574, 575, 577, 578, 579, 580,
	581, 584, 582, 396, 303, 483, 325, 363, 1279, 1321,
	414, 461, 235, 549, 484, 1196, 1200, 1194, 1261, 1195,
	1250, 1251, 1197, 1312, 1313, 1314, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 1283, 1190, 0, 1198, 1199,
	1292, 1301, 1302, 611, 374, 474, 546, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 525, 304,
	211, 212, 213, 502, 503, 504, 505, 560, 561, 565,
	451, 452, 453, 454, 285, 555, 301, 457, 456, 323,
	324, 369, 438, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 1254,
	194, 216, 358, 1317, 443, 281, 589, 559, 554, 201,
	218, 1193, 255, 1204, 1212, 0, 1218, 1226, 1227, 1239,
	1241, 1242, 1243, 1244, 1262, 1263, 1265, 1273, 1275, 1278,
	1280, 1287, 1298, 1320, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	533, 535, 548, 566, 572, 469, 293, 294, 433, 434,
	306, 307, 586, 587, 292, 543, 573, 541, 585, 567,
	427, 368, 1253, 1259, 371, 274, 297, 312, 1268, 558,
	490, 222, 455, 283, 246, 1286, 1288, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 1249, 1277, 366, 523, 524, 308, 386, 0, 0,
	0, 1306, 1291, 506, 0, 1234, 1309, 1203, 1222, 1319,
	1225, 1228, 1270, 1182, 1248, 405, 1219, 1175, 1207, 1177,
	1214, 1178, 1205, 1236, 263, 1202, 1293, 1252, 1308, 356,
	260, 1184, 1208, 419, 1224, 200, 1272, 475, 247, 367,
	364, 530, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 1315, 360, 1258, 0, 485, 390, 0, 0, 0,
	1238, 1297, 1246, 1284, 1233, 1271, 1192, 1257, 1310, 1220,
	1267, 1311, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 1216, 1264, 1305, 1217, 1266, 258, 313, 265, 257,
	527, 1316, 1296, 1181, 1245, 1304, 0, 0, 224, 1307,
	1240, 0, 1269, 0, 1322, 1176, 1260, 0, 1179, 1183,
	1318, 1300, 1211, 268, 0, 0, 0, 0, 0, 0,
	0, 1237, 1247, 1281, 1285, 1231, 0, 0, 0, 0,
	0, 2877, 0, 1209, 0, 1256, 0, 0, 0, 1188,
	1180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 1191, 0,
	1210, 1282, 0, 1174, 290, 1185, 391, 250, 0, 442,
	1289, 1299, 1232, 569, 1303, 1230, 1229, 1276, 1189, 1295,
	1223, 355, 1187, 322, 195, 220, 0, 1221, 401, 450,
	462, 1294, 1206, 1215, 248, 1213, 460, 415, 547, 228,
	277, 447, 421, 458, 429, 280, 1255, 1274, 459, 362,
	532, 439, 544, 570, 571, 256, 395, 556, 500, 564,
	588, 221, 253, 409, 493, 550, 482, 387, 528, 529,
	321, 481, 288, 198, 359, 576, 219, 468, 361, 237,
	226, 534, 553, 282, 445, 583, 208, 495, 542, 234,
	472, 0, 0, 590, 242, 492, 210, 539, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 536, 537, 249, 591, 223, 563, 215, 1186, 562,
	397, 531, 540, 384, 373, 214, 538, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 551, 0, 203, 0, 487, 552, 592,
	441, 207, 229, 230, 232, 1201, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 1290, 526,
	545, 557, 568, 574, 575, 577, 578, 579, 580, 581,
	584, 582, 396, 303, 483, 325, 363, 1279, 1321, 414,
	461, 235, 549, 484, 1196, 1200, 1194, 1261, 1195, 1250,
	1251, 1197, 1312, 1313, 1314, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 1283, 1190, 0, 1198, 1199, 1292,
	1301, 1302, 611, 374, 474, 546, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 525, 304, 211,
	212, 213, 502, 503, 504, 505, 560, 561, 565, 451,
	452, 453, 454, 285, 555, 301, 457, 456, 323, 324,
	369, 438, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 1254, 194,
	216, 358, 1317, 443, 281, 589, 559, 554, 201, 218,
	1193, 255, 1204, 1212, 0, 1218, 1226, 1227, 1239, 1241,
	1242, 1243, 1244, 1262, 1263, 1265, 1273, 1275, 1278, 1280,
	1287, 1298, 1320, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 533,
	535, 548, 566, 572, 469, 293, 294, 433, 434, 306,
	307, 586, 587, 292, 543, 573, 541, 585, 567, 427,
	368, 1253, 1259, 371, 274, 297, 312, 1268, 558, 490,
	222, 455, 283, 246, 1286, 1288, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	1249, 1277, 366, 523, 524, 308, 386, 0, 0, 0,
	1306, 1291, 506, 0, 1234, 1309, 1203, 1222, 1319, 1225,
	1228, 1270, 1182, 1248, 405, 1219, 1175, 1207, 1177, 1214,
	1178, 1205, 1236, 263, 1202, 1293, 1252, 1308, 356, 260,
	1184, 1208, 419, 1224, 200, 1272, 475, 247, 367, 364,
	530, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	1315, 360, 1258, 0, 485, 390, 0, 0, 0, 1238,
	1297, 1246, 1284, 1233, 1271, 1192, 1257, 1310, 1220, 1267,
	1311, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	1216, 1264, 1305, 1217, 1266, 258, 313, 265, 257, 527,
	1316, 1296, 1181, 1245, 1304, 0, 0, 224, 1307, 1240,
	0, 1269, 0, 1322, 1176, 1260, 0, 1179, 1183, 1318,
	1300, 1211, 268, 0, 0, 0, 0, 0, 0, 0,
	1237, 1247, 1281, 1285, 1231, 0, 0, 0, 0, 0,
	2167, 0, 1209, 0, 1256, 0, 0, 0, 1188, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 1191, 0, 1210,
	1282, 0, 1174, 290, 1185, 391, 250, 0, 442, 1289,
	1299, 1232, 569, 1303, 1230, 1229, 1276, 1189, 1295, 1223,
	355, 1187, 322, 195, 220, 0, 1221, 401, 450, 462,
	1294, 1206, 1215, 248, 1213, 460, 415, 547, 228, 277,
	447, 421, 458, 429, 280, 1255, 1274, 459, 362, 532,
	439, 544, 570, 571, 256, 395, 556, 500, 564, 588,
	221, 253, 409, 493, 550, 482, 387, 528, 529, 321,
	481, 288, 198, 359, 576, 219, 468, 361, 237, 226,
	534, 553, 282, 445, 583, 208, 495, 542, 234, 472,
	0, 0, 590, 242, 492, 210, 539, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	536, 537, 249, 591, 223, 563, 215, 1186, 562, 397,
	531, 540, 384, 373, 214, 538, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 551, 0, 203, 0, 487, 552, 592, 441,
	207, 229, 230, 232, 1201, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 1290, 526, 545,
	557, 568, 574, 575, 577, 578, 579, 580, 581, 584,
	582, 396, 303, 483, 325, 363, 1279, 1321, 414, 461,
	235, 549, 484, 1196, 1200, 1194, 1261, 1195, 1250, 1251,
	1197, 1312, 1313, 1314, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 1283, 1190, 0, 1198, 1199, 1292, 1301,
	1302, 611, 374, 474, 546, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 525, 304, 211, 212,
	213, 502, 503, 504, 505, 560, 561, 565, 451, 452,
	453, 454, 285, 555, 301, 457, 456, 323, 324, 369,
	438, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 1254, 194, 216,
	358, 1317, 443, 281, 589, 559, 554, 201, 218, 1193,
	255, 1204, 1212, 0, 1218, 1226, 1227, 1239, 1241, 1242,
	1243, 1244, 1262, 1263, 1265, 1273, 1275, 1278, 1280, 1287,
	1298, 1320, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 533, 535,
	548, 566, 572, 469, 293, 294, 433, 434, 306, 307,
	586, 587, 292, 543, 573, 541, 585, 567, 427, 368,
	1253, 1259, 371, 274, 297, 312, 1268, 558, 490, 222,
	455, 283, 246, 1286, 1288, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 1249,
	1277, 366, 523, 524, 308, 386, 0, 0, 0, 1306,
	1291, 506, 0, 1234, 1309, 1203, 1222, 1319, 1225, 1228,
	1270, 1182, 1248, 405, 1219, 1175, 1207, 1177, 1214, 1178,
	1205, 1236, 263, 1202, 1293, 1252, 1308, 356, 260, 1184,
	1208, 419, 1224, 200, 1272, 475, 247, 367, 364, 530,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 1315,
	360, 1258, 0, 485, 390, 0, 0, 0, 1238, 1297,
	1246, 1284, 1233, 1271, 1192, 1257, 1310, 1220, 1267, 1311,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 1216,
	1264, 1305, 1217, 1266, 258, 313, 265, 257, 527, 1316,
	1296, 1181, 1245, 1304, 0, 0, 224, 1307, 1240, 0,
	1269, 0, 1322, 1176, 1260, 0, 1179, 1183, 1318, 1300,
	1211, 268, 0, 0, 0, 0, 0, 0, 0, 1237,
	1247, 1281, 1285, 1231, 0, 0, 0, 0, 0, 0,
	0, 1209, 0, 1256, 0, 0, 0, 1188, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 1191, 0, 1210, 1282,
	0, 1174, 290, 1185, 391, 250, 0, 442, 1289, 1299,
	1232, 569, 1303, 1230, 1229, 1276, 1189, 1295, 1223, 355,
	1187, 322, 195, 220, 0, 1221, 401, 450, 462, 1294,
	1206, 1215, 248, 1213, 460, 415, 547, 228, 277, 447,
	421, 458, 429, 280, 1255, 1274, 459, 362, 532, 439,
	544, 570, 571, 256, 395, 556, 500, 564, 588, 221,
	253, 409, 493, 550, 482, 387, 528, 529, 321, 481,
	288, 198, 359, 576, 219, 468, 361, 237, 226, 534,
	553, 282, 445, 583, 208, 495, 542, 234, 472, 0,
	0, 590, 242, 492, 210, 539, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 536,
	537, 249, 591, 223, 563, 215, 1186, 562, 397, 531,
	540, 384, 373, 214, 538, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 551, 0, 203, 0, 487, 552, 592, 441, 207,
	229, 230, 232, 1201, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 1290, 526, 545, 557,
	568, 574, 575, 577, 578, 579, 580, 581, 584, 582,
	396, 303, 483, 325, 363, 1279, 1321, 414, 461, 235,
	549, 484, 1196, 1200, 1194, 1261, 1195, 1250, 1251, 1197,
	1312, 1313, 1314, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 1283, 1190, 0, 1198, 1199, 1292, 1301, 1302,
	611, 374, 474, 546, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 525, 304, 211, 212, 213,
	502, 503, 504, 505, 560, 561, 565, 451, 452, 453,
	454, 285, 555, 301, 457, 456, 323, 324, 369, 438,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 1254, 194, 216, 358,
	1317, 443, 281, 589, 559, 554, 201, 218, 1193, 255,
	1204, 1212, 0, 1218, 1226, 1227, 1239, 1241, 1242, 1243,
	1244, 1262, 1263, 1265, 1273, 1275, 1278, 1280, 1287, 1298,
	1320, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 533, 535, 548,
	566, 572, 469, 293, 294, 433, 434, 306, 307, 586,
	587, 292, 543, 573, 541, 585, 567, 427, 368, 1253,
	1259, 371, 274, 297, 312, 1268, 558, 490, 222, 455,
	283, 246, 1286, 1288, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 1249, 1277,
	366, 523, 524, 308, 386, 0, 0, 0, 1306, 1291,
	506, 0, 1234, 1309, 1203, 1222, 1319, 1225, 1228, 1270,
	1182, 1248, 405, 1219, 1175, 1207, 1177, 1214, 1178, 1205,
	1236, 263, 1202, 1293, 1252, 1308, 356, 260, 1184, 1208,
	419, 1224, 200, 1272, 475, 247, 367, 364, 530, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 1315, 360,
	1258, 0, 485, 390, 0, 0, 0, 1238, 1297, 1246,
	1284, 1233, 1271, 1192, 1257, 1310, 1220, 1267, 1311, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 1216, 1264,
	1305, 1217, 1266, 258, 313, 265, 257, 527, 1316, 1296,
	1181, 1245, 1304, 0, 0, 224, 1307, 1240, 0, 1269,
	0, 1322, 1176, 1260, 0, 1179, 1183, 1318, 1300, 1211,
	268, 0, 0, 0, 0, 0, 0, 0, 1237, 1247,
	1281, 1285, 1231, 0, 0, 0, 0, 0, 0, 0,
	1209, 0, 1256, 0, 0, 0, 1188, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 1191, 0, 1210, 1282, 0,
	1174, 290, 1185, 391, 250, 0, 442, 1289, 1299, 1232,
	569, 1303, 1230, 1229, 1276, 1189, 1295, 1223, 355, 1187,
	322, 195, 220, 0, 1221, 401, 450, 462, 1294, 1206,
	1215, 248, 1213, 460, 415, 547, 228, 277, 447, 421,
	458, 429, 280, 1255, 1274, 459, 362, 532, 439, 544,
	570, 571, 256, 395, 556, 500, 564, 588, 221, 253,
	409, 493, 550, 482, 387, 528, 529, 321, 481, 288,
	198, 359, 576, 219, 468, 361, 237, 226, 534, 553,
	282, 445, 583, 208, 495, 542, 234, 472, 0, 0,
	590, 242, 492, 210, 539, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 536, 537,
	249, 591, 223, 563, 215, 1186, 562, 397, 531, 540,
	384, 373, 214, 538, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	551, 0, 203, 0, 487, 552, 592, 441, 207, 229,
	230, 232, 1201, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 1290, 526, 545, 557, 568,
	574, 575, 577, 578, 579, 580, 581, 584, 582, 396,
	303, 483, 325, 363, 1279, 1321, 414, 461, 235, 549,
	484, 1196, 1200, 1194, 1261, 1195, 1250, 1251, 1197, 1312,
	1313, 1314, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 1283, 1190, 0, 1198, 1199, 1292, 1301, 1302, 611,
	374, 474, 546, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 525, 304, 211, 212, 213, 502,
	503, 504, 505, 560, 561, 565, 451, 452, 453, 454,
	285, 555, 301, 457, 456, 323, 324, 369, 438, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 1254, 194, 216, 358, 1317,
	443, 281, 589, 559, 554, 201, 218, 1193, 255, 1204,
	1212, 0, 1218, 1226, 1227, 1239, 1241, 1242, 1243, 1244,
	1262, 1263, 1265, 1273, 1275, 1278, 1280, 1287, 1298, 1320,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 533, 535, 548, 566,
	572, 469, 293, 294, 433, 434, 306, 307, 586, 587,
	292, 543, 573, 541, 585, 567, 427, 368, 1253, 1259,
	371, 274, 297, 312, 1268, 558, 490, 222, 455, 283,
	246, 1286, 1288, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 1249, 1277, 366,
	523, 524, 308, 386, 0, 0, 0, 1306, 1291, 506,
	0, 1234, 1309, 1203, 1222, 1319, 1225, 1228, 1270, 1182,
	1248, 405, 1219, 1175, 1207, 1177, 1214, 1178, 1205, 1236,
	263, 1202, 1293, 1252, 1308, 356, 260, 1184, 1208, 419,
	1224, 200, 1272, 475, 247, 367, 364, 530, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 1315, 360, 1258,
	0, 485, 390, 0, 0, 0, 1238, 1297, 1246, 1284,
	1233, 1271, 1192, 1257, 1310, 1220, 1267, 1311, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 1216, 1264, 1305,
	1217, 1266, 258, 313, 265, 257, 527, 1316, 1296, 1181,
	1245, 1304, 0, 0, 224, 1307, 1240, 0, 1269, 0,
	1322, 1176, 1260, 0, 1179, 1183, 1318, 1300, 1211, 268,
	0, 0, 0, 0, 0, 0, 0, 1237, 1247, 1281,
	1285, 1231, 0, 0, 0, 0, 0, 0, 0, 1209,
	0, 1256, 0, 0, 0, 1188, 1180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 1191, 0, 1210, 1282, 0, 1174,
	290, 1185, 391, 250, 0, 442, 1289, 1299, 1232, 569,
	1303, 1230, 1229, 1276, 1189, 1295, 1223, 355, 1187, 322,
	195, 220, 0, 1221, 401, 450, 462, 1294, 1206, 1215,
	248, 1213, 460, 415, 547, 228, 277, 447, 421, 458,
	429, 280, 1255, 1274, 459, 362, 532, 439, 544, 570,
	571, 256, 395, 556, 500, 564, 588, 221, 253, 409,
	493, 550, 482, 387, 528, 529, 321, 481, 288, 198,
	359, 576, 219, 468, 361, 237, 226, 534, 553, 282,
	445, 583, 208, 495, 542, 234, 472, 0, 0, 590,
	242, 492, 210, 539, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 536, 537, 249,
	591, 223, 563, 215, 1186, 562, 397, 531, 540, 384,
	373, 214, 538, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 551,
	0, 203, 0, 487, 552, 592, 441, 207, 229, 230,
	232, 1201, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 1290, 526, 545, 557, 568, 574,
	575, 577, 578, 579, 580, 581, 584, 582, 396, 303,
	483, 325, 363, 1279, 1321, 414, 461, 235, 549, 484,
	1196, 1200, 1194, 1261, 1195, 1250, 1251, 1197, 1312, 1313,
	1314, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	1283, 1190, 0, 1198, 1199, 1292, 1301, 1302, 611, 374,
	474, 546, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 525, 304, 211, 212, 213, 502, 503,
	504, 505, 560, 561, 565, 451, 452, 453, 454, 285,
	555, 301, 457, 456, 323, 324, 369, 438, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 1254, 194, 216, 358, 1317, 443,
	281, 589, 559, 554, 201, 218, 1193, 255, 1204, 1212,
	0, 1218, 1226, 1227, 1239, 1241, 1242, 1243, 1244, 1262,
	1263, 1265, 1273, 1275, 1278, 1280, 1287, 1298, 1320, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 533, 535, 548, 566, 572,
	469, 293, 294, 433, 434, 306, 307, 586, 587, 292,
	543, 573, 541, 585, 567, 427, 368, 1253, 1259, 371,
	274, 297, 312, 1268, 558, 490, 222, 455, 283, 246,
	1286, 1288, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 1249, 1277, 366, 523,
	524, 308, 386, 0, 0, 0, 1306, 1291, 506, 0,
	1234, 1309, 1203, 1222, 1319, 1225, 1228, 1270, 1182, 1248,
	405, 1219, 1175, 1207, 1177, 1214, 1178, 1205, 1236, 263,
	1202, 1293, 1252, 1308, 356, 260, 1184, 1208, 419, 1224,
	200, 1272, 475, 247, 367, 364, 530, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 1315, 360, 1258, 0,
	485, 390, 0, 0, 0, 1238, 1297, 1246, 1284, 1233,
	1271, 1192, 1257, 1310, 1220, 1267, 1311, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 1216, 1264, 1305, 1217,
	1266, 258, 313, 265, 257, 527, 1316, 1296, 1181, 1245,
	1304, 0, 0, 224, 1307, 1240, 0, 1269, 0, 1322,
	1176, 1260, 0, 1179, 1183, 1318, 1300, 1211, 268, 0,
	0, 0, 0, 0, 0, 0, 1237, 1247, 1281, 1285,
	1231, 0, 0, 0, 0, 0, 0, 0, 1209, 0,
	1256, 0, 0, 0, 1188, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 1191, 0, 1210, 1282, 0, 1174, 290,
	1185, 391, 250, 0, 442, 1289, 1299, 1232, 569, 1303,
	1230, 1229, 1276, 1189, 1295, 1223, 355, 1187, 322, 195,
	220, 0, 1221, 401, 450, 462, 1294, 1206, 1215, 248,
	1213, 460, 415, 547, 228, 277, 447, 421, 458, 429,
	280, 1255, 1274, 459, 362, 532, 439, 544, 570, 571,
	256, 395, 556, 500, 564, 588, 221, 253, 409, 493,
	550, 482, 387, 528, 529, 321, 481, 288, 198, 359,
	576, 219, 468, 361, 237, 226, 534, 553, 282, 445,
	583, 208, 495, 542, 234, 472, 0, 0, 590, 242,
	492, 210, 539, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 536, 537, 249, 591,
	223, 563, 215, 1186, 562, 397, 531, 540, 384, 373,
	214, 538, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 551, 0,
	203, 0, 487, 552, 592, 441, 207, 229, 230, 232,
	1201, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 1290, 526, 545, 557, 568, 574, 575,
	577, 578, 579, 580, 581, 584, 582, 396, 303, 483,
	325, 363, 1279, 1321, 414, 461, 235, 549, 484, 1196,
	1200, 1194, 1261, 1195, 1250, 1251, 1197, 1312, 1313, 1314,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 1283,
	1190, 0, 1198, 1199, 1292, 1301, 1302, 611, 374, 474,
	546, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 525, 304, 211, 212, 213, 502, 503, 504,
	505, 560, 561, 565, 451, 452, 453, 454, 285, 555,
	301, 457, 456, 323, 324, 369, 438, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 1254, 194, 216, 358, 1317, 443, 281,
	589, 559, 554, 201, 218, 1193, 255, 1204, 1212, 0,
	1218, 1226, 1227, 1239, 1241, 1242, 1243, 1244, 1262, 1263,
	1265, 1273, 1275, 1278, 1280, 1287, 1298, 1320, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 533, 535, 548, 566, 572, 469,
	293, 294, 433, 434, 306, 307, 586, 587, 292, 543,
	573, 541, 585, 567, 427, 368, 1253, 1259, 371, 274,
	297, 312, 1268, 558, 490, 222, 455, 283, 246, 1286,
	1288, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 1249, 1277, 366, 523, 524,
	308, 386, 0, 0, 0, 0, 0, 506, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 699, 0, 0, 0, 263, 704,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 530, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 711, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 707, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 93, 0, 0, 871, 855, 821,
	822, 859, 872, 873, 874, 875, 860, 0, 233, 861,
	862, 240, 863, 0, 820, 739, 741, 740, 774, 775,
	776, 777, 778, 779, 780, 737, 868, 876, 877, 0,
	258, 313, 265, 257, 527, 0, 0, 2024, 2025, 2026,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	681, 696, 0, 710, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 694, 0, 0, 0, 0, 815,
	0, 695, 0, 0, 703, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 814, 0, 0, 569, 0, 0,
	812, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 865, 0,
	460, 415, 547, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 532, 439, 544, 570, 571, 256,
	395, 556, 500, 564, 588, 221, 253, 409, 493, 550,
	482, 387, 528, 529, 321, 481, 288, 198, 359, 576,
	219, 468, 361, 237, 226, 534, 553, 282, 445, 583,
	208, 495, 542, 234, 472, 0, 0, 590, 242, 492,
	210, 539, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 866, 867, 249, 591, 745,
	563, 215, 0, 562, 397, 531, 540, 384, 373, 214,
	538, 382, 372, 326, 753, 754, 273, 299, 800, 799,
	798, 298, 300, 796, 797, 795, 202, 551, 0, 203,
	0, 487, 552, 592, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 526, 545, 557, 568, 574, 575, 577,
	578, 579, 580, 581, 584, 582, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 549, 484, 825, 813,
	716, 829, 718, 826, 827, 713, 714, 717, 828, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 816, 702,
	701, 0, 709, 0, 735, 736, 738, 742, 743, 744,
	755, 772, 773, 781, 783, 784, 782, 785, 786, 787,
	790, 791, 792, 793, 788, 789, 794, 719, 723, 720,
	721, 722, 734, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 839, 840, 841, 842, 843, 844, 748,
	752, 751, 749, 750, 746, 747, 756, 758, 759, 760,
	757, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 700, 194, 216, 358, 0, 443, 281, 589,
	559, 554, 201, 218, 830, 255, 831, 0, 0, 835,
	0, 0, 0, 837, 836, 0, 838, 804, 803, 0,
	0, 832, 833, 0, 834, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 533, 535, 548, 566, 572, 469, 845,
	846, 847, 848, 849, 850, 851, 852, 292, 543, 573,
	541, 585, 567, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 558, 490, 222, 455, 283, 246, 870, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 523, 524, 308,
	506, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 699, 0, 0,
	0, 263, 704, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 530, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 711, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 707,
	708, 0, 0, 0, 0, 0, 0, 2196, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 93, 0, 0,
	871, 855, 821, 822, 859, 872, 873, 874, 875, 860,
	0, 233, 861, 862, 240, 863, 0, 820, 739, 741,
	740, 774, 775, 776, 777, 778, 779, 780, 737, 868,
	876, 877, 2197, 258, 313, 265, 257, 527, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 681, 696, 0, 710, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 694, 0, 0,
	0, 0, 815, 0, 695, 0, 0, 703, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 814, 0, 0,
	569, 0, 0, 812, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 865, 0, 460, 415, 547, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 532, 439, 544,
	570, 571, 256, 395, 556, 500, 564, 588, 221, 253,
	409, 493, 550, 482, 387, 528, 529, 321, 481, 288,
	198, 359, 576, 219, 468, 361, 237, 226, 534, 553,
	282, 445, 583, 208, 495, 542, 234, 472, 0, 0,
	590, 242, 492, 210, 539, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 866, 867,
	249, 591, 745, 563, 215, 0, 562, 397, 531, 540,
	384, 373, 214, 538, 382, 372, 326, 753, 754, 273,
	299, 800, 799, 798, 298, 300, 796, 797, 795, 202,
	551, 0, 203, 0, 487, 552, 592, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 526, 545, 557, 568,
	574, 575, 577, 578, 579, 580, 581, 584, 582, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 549,
	484, 825, 813, 716, 829, 718, 826, 827, 713, 714,
	717, 828, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 816, 702, 701, 0, 709, 0, 735, 736, 738,
	742, 743, 744, 755, 772, 773, 781, 783, 784, 782,
	785, 786, 787, 790, 791, 792, 793, 788, 789, 794,
	719, 723, 720, 721, 722, 734, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 839, 840, 841, 842,
	843, 844, 748, 752, 751, 749, 750, 746, 747, 756,
	758, 759, 760, 757, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 700, 194, 216, 358, 0,
	443, 281, 589, 559, 554, 201, 218, 830, 255, 831,
	0, 0, 835, 0, 0, 0, 837, 836, 0, 838,
	804, 803, 0, 0, 832, 833, 0, 834, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 533, 535, 548, 566,
	572, 469, 845, 846, 847, 848, 849, 850, 851, 852,
	292, 543, 573, 541, 585, 567, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 558, 490, 222, 455, 283,
	246, 870, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 0, 386, 366,
	523, 524, 308, 84, 506, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 699, 0, 0, 0, 263, 704, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 530, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 711, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 707, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 93, 0, 0, 871, 855, 821, 822, 859, 872,
	873, 874, 875, 860, 0, 233, 861, 862, 240, 863,
	0, 820, 739, 741, 740, 774, 775, 776, 777, 778,
	779, 780, 737, 868, 876, 877, 0, 258, 313, 265,
	257, 527, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 681, 696, 0,
	710, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	693, 694, 0, 0, 0, 0, 815, 0, 695, 0,
	0, 703, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 814, 0, 0, 569, 0, 0, 812, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 865, 0, 460, 415, 547,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 532, 439, 544, 570, 571, 256, 395, 556, 500,
	564, 588, 221, 253, 409, 493, 550, 482, 387, 528,
	529, 321, 481, 288, 198, 359, 576, 219, 468, 361,
	237, 226, 534, 553, 282, 445, 583, 208, 495, 542,
	234, 472, 0, 0, 590, 242, 492, 210, 539, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 866, 867, 249, 591, 745, 563, 215, 0,
	562, 397, 531, 540, 384, 373, 214, 538, 382, 372,
	326, 753, 754, 273, 299, 800, 799, 798, 298, 300,
	796, 797, 795, 202, 551, 0, 203, 0, 487, 552,
	592, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	526, 545, 557, 568, 574, 575, 577, 578, 579, 580,
	581, 584, 582, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 549, 484, 825, 813, 716, 829, 718,
	826, 827, 713, 714, 717, 828, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 816, 702, 701, 0, 709,
	0, 735, 736, 738, 742, 743, 744, 755, 772, 773,
	781, 783, 784, 782, 785, 786, 787, 790, 791, 792,
	793, 788, 789, 794, 719, 723, 720, 721, 722, 734,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	839, 840, 841, 842, 843, 844, 748, 752, 751, 749,
	750, 746, 747, 756, 758, 759, 760, 757, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 700,
	194, 216, 358, 92, 443, 281, 589, 559, 554, 201,
	218, 830, 255, 831, 0, 0, 835, 0, 0, 0,
	837, 836, 0, 838, 804, 803, 0, 0, 832, 833,
	0, 834, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	533, 535, 548, 566, 572, 469, 845, 846, 847, 848,
	849, 850, 851, 852, 292, 543, 573, 541, 585, 567,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 558,
	490, 222, 455, 283, 246, 870, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 523, 524, 308, 506, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 699, 0, 0, 0, 263, 704,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 530, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 711, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 707, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 93, 0, 0, 871, 855, 821,
	822, 859, 872, 873, 874, 875, 860, 0, 233, 861,
	862, 240, 863, 0, 820, 739, 741, 740, 774, 775,
	776, 777, 778, 779, 780, 737, 868, 876, 877, 0,
	258, 313, 265, 257, 527, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	681, 696, 0, 710, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 694, 0, 0, 0, 0, 815,
	0, 695, 0, 0, 703, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 814, 0, 0, 569, 0, 0,
	812, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 865, 0,
	460, 415, 547, 228, 277, 447, 421, 458, 429, 280,
	3655, 0, 459, 362, 532, 439, 544, 570, 571, 256,
	395, 556, 500, 564, 588, 221, 253, 409, 493, 550,
	482, 387, 528, 529, 321, 481, 288, 198, 359, 576,
	219, 468, 361, 237, 226, 534, 553, 282, 445, 583,
	208, 495, 542, 234, 472, 0, 0, 590, 242, 492,
	210, 539, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 866, 867, 249, 591, 745,
	563, 215, 0, 562, 397, 531, 540, 384, 373, 214,
	538, 382, 372, 326, 753, 754, 273, 299, 800, 799,
	798, 298, 300, 796, 797, 795, 202, 551, 0, 203,
	0, 487, 552, 592, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 526, 545, 557, 568, 574, 575, 577,
	578, 579, 580, 581, 584, 582, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 549, 484, 825, 813,
	716, 829, 718, 826, 827, 713, 714, 717, 828, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 816, 702,
	701, 0, 709, 0, 735, 736, 738, 742, 743, 744,
	755, 772, 773, 781, 783, 784, 782, 785, 786, 787,
	790, 791, 792, 793, 788, 789, 794, 719, 723, 720,
	721, 722, 734, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 839, 840, 841, 842, 843, 844, 748,
	752, 751, 749, 750, 746, 747, 756, 758, 759, 760,
	757, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 700, 194, 216, 358, 0, 443, 281, 589,
	559, 554, 201, 218, 830, 255, 831, 0, 0, 835,
	0, 0, 0, 837, 836, 0, 838, 804, 803, 0,
	0, 832, 833, 0, 834, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 533, 535, 548, 566, 572, 469, 845,
	846, 847, 848, 849, 850, 851, 852, 292, 543, 573,
	541, 585, 567, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 558, 490, 222, 455, 283, 246, 870, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 523, 524, 308,
	506, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 699, 0, 0,
	0, 263, 704, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 530, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 711, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 707,
	708, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 93, 0, 1585,
	871, 855, 821, 822, 859, 872, 873, 874, 875, 860,
	0, 233, 861, 862, 240, 863, 0, 820, 739, 741,
	740, 774, 775, 776, 777, 778, 779, 780, 737, 868,
	876, 877, 0, 258, 313, 265, 257, 527, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 681, 696, 0, 710, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 694, 0, 0,
	0, 0, 815, 0, 695, 0, 0, 703, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 814, 0, 0,
	569, 0, 0, 812, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 865, 0, 460, 415, 547, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 532, 439, 544,
	570, 571, 256, 395, 556, 500, 564, 588, 221, 253,
	409, 493, 550, 482, 387, 528, 529, 321, 481, 288,
	198, 359, 576, 219, 468, 361, 237, 226, 534, 553,
	282, 445, 583, 208, 495, 542, 234, 472, 0, 0,
	590, 242, 492, 210, 539, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 866, 867,
	249, 591, 745, 563, 215, 0, 562, 397, 531, 540,
	384, 373, 214, 538, 382, 372, 326, 753, 754, 273,
	299, 800, 799, 798, 298, 300, 796, 797, 795, 202,
	551, 0, 203, 0, 487, 552, 592, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 526, 545, 557, 568,
	574, 575, 577, 578, 579, 580, 581, 584, 582, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 549,
	484, 825, 813, 716, 829, 718, 826, 827, 713, 714,
	717, 828, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 816, 702, 701, 0, 709, 0, 735, 736, 738,
	742, 743, 744, 755, 772, 773, 781, 783, 784, 782,
	785, 786, 787, 790, 791, 792, 793, 788, 789, 794,
	719, 723, 720, 721, 722, 734, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 839, 840, 841, 842,
	843, 844, 748, 752, 751, 749, 750, 746, 747, 756,
	758, 759, 760, 757, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 700, 194, 216, 358, 0,
	443, 281, 589, 559, 554, 201, 218, 830, 255, 831,
	0, 0, 835, 0, 0, 0, 837, 836, 0, 838,
	804, 803, 0, 0, 832, 833, 0, 834, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 533, 535, 548, 566,
	572, 469, 845, 846, 847, 848, 849, 850, 851, 852,
	292, 543, 573, 541, 585, 567, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 558, 490, 222, 455, 283,
	246, 870, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	523, 524, 308, 506, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	699, 0, 0, 0, 263, 704, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 530, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 711, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 707, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	93, 0, 0, 871, 855, 821, 822, 859, 872, 873,
	874, 875, 860, 0, 233, 861, 862, 240, 863, 0,
	820, 739, 741, 740, 774, 775, 776, 777, 778, 779,
	780, 737, 868, 876, 877, 0, 258, 313, 265, 257,
	527, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 681, 696, 0, 710,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	694, 960, 0, 0, 0, 815, 0, 695, 0, 0,
	703, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	814, 0, 0, 569, 0, 0, 812, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 865, 0, 460, 415, 547, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	532, 439, 544, 570, 571, 256, 395, 556, 500, 564,
	588, 221, 253, 409, 493, 550, 482, 387, 528, 529,
	321, 481, 288, 198, 359, 576, 219, 468, 361, 237,
	226, 534, 553, 282, 445, 583, 208, 495, 542, 234,
	472, 0, 0, 590, 242, 492, 210, 539, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 866, 867, 249, 591, 745, 563, 215, 0, 562,
	397, 531, 540, 384, 373, 214, 538, 382, 372, 326,
	753, 754, 273, 299, 800, 799, 798, 298, 300, 796,
	797, 795, 202, 551, 0, 203, 0, 487, 552, 592,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 526,
	545, 557, 568, 574, 575, 577, 578, 579, 580, 581,
	584, 582, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 549, 484, 825, 813, 716, 829, 718, 826,
	827, 713, 714, 717, 828, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 816, 702, 701, 0, 709, 0,
	735, 736, 738, 742, 743, 744, 755, 772, 773, 781,
	783, 784, 782, 785, 786, 787, 790, 791, 792, 793,
	788, 789, 794, 719, 723, 720, 721, 722, 734, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 839,
	840, 841, 842, 843, 844, 748, 752, 751, 749, 750,
	746, 747, 756, 758, 759, 760, 757, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 700, 194,
	216, 358, 0, 443, 281, 589, 559, 554, 201, 218,
	830, 255, 831, 0, 0, 835, 0, 0, 0, 837,
	836, 0, 838, 804, 803, 0, 0, 832, 833, 0,
	834, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 533,
	535, 548, 566, 572, 469, 845, 846, 847, 848, 849,
	850, 851, 852, 292, 543, 573, 541, 585, 567, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 558, 490,
	222, 455, 283, 246, 870, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 523, 524, 308, 506, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 699, 0, 0, 0, 263, 704, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 530, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 711, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 707, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 93, 0, 0, 871, 855, 821, 822,
	859, 872, 873, 874, 875, 860, 0, 233, 861, 862,
	240, 863, 0, 820, 739, 741, 740, 774, 775, 776,
	777, 778, 779, 780, 737, 868, 876, 877, 0, 258,
	313, 265, 257, 527, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 681,
	696, 0, 710, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 693, 694, 0, 0, 0, 0, 815, 0,
	695, 0, 0, 703, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 814, 0, 0, 569, 0, 0, 812,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 865, 0, 460,
	415, 547, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 532, 439, 544, 570, 571, 256, 395,
	556, 500, 564, 588, 221, 253, 409, 493, 550, 482,
	387, 528, 529, 321, 481, 288, 198, 359, 576, 219,
	468, 361, 237, 226, 534, 553, 282, 445, 583, 208,
	495, 542, 234, 472, 0, 0, 590, 242, 492, 210,
	539, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 866, 867, 249, 591, 745, 563,
	215, 0, 562, 397, 531, 540, 384, 373, 214, 538,
	382, 372, 326, 753, 754, 273, 299, 800, 799, 798,
	298, 300, 796, 797, 795, 202, 551, 0, 203, 0,
	487, 552, 592, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 526, 545, 557, 568, 574, 575, 577, 578,
	579, 580, 581, 584, 582, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 549, 484, 825, 813, 716,
	829, 718, 826, 827, 713, 714, 717, 828, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 816, 702, 701,
	0, 709, 0, 735, 736, 738, 742, 743, 744, 755,
	772, 773, 781, 783, 784, 782, 785, 786, 787, 790,
	791, 792, 793, 788, 789, 794, 719, 723, 720, 721,
	722, 734, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 839, 840, 841, 842, 843, 844, 748, 752,
	751, 749, 750, 746, 747, 756, 758, 759, 760, 757,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 700, 194, 216, 358, 0, 443, 281, 589, 559,
	554, 201, 218, 830, 255, 831, 0, 0, 835, 0,
	0, 0, 837, 836, 0, 838, 804, 803, 0, 0,
	832, 833, 0, 834, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 533, 535, 548, 566, 572, 469, 845, 846,
	847, 848, 849, 850, 851, 852, 292, 543, 573, 541,
	585, 567, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 558, 490, 222, 455, 283, 246, 870, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 523, 524, 308, 506,
	0, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 699, 0, 0, 0,
	263, 704, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 530, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 711, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 707, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 93, 0, 0, 871,
	855, 821, 822, 859, 872, 873, 874, 875, 860, 0,
	233, 861, 862, 240, 863, 0, 820, 739, 741, 740,
	774, 775, 776, 777, 778, 779, 780, 737, 868, 876,
	877, 0, 258, 313, 265, 257, 527, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 0, 710, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 693, 694, 0, 0, 0,
	0, 815, 0, 695, 0, 0, 703, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 814, 0, 0, 569,
	0, 0, 812, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	865, 0, 460, 415, 547, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 532, 439, 544, 570,
	571, 256, 395, 556, 500, 564, 588, 221, 253, 409,
	493, 550, 482, 387, 528, 529, 321, 481, 288, 198,
	359, 576, 219, 468, 361, 237, 226, 534, 553, 282,
	445, 583, 208, 495, 542, 234, 472, 0, 0, 590,
	242, 492, 210, 539, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 866, 867, 249,
	591, 745, 563, 215, 0, 562, 397, 531, 540, 384,
	373, 214, 538, 382, 372, 326, 753, 754, 273, 299,
	800, 799, 798, 298, 300, 796, 797, 795, 202, 551,
	0, 203, 0, 487, 552, 592, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 526, 545, 557, 568, 574,
	575, 577, 578, 579, 580, 581, 584, 582, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 549, 484,
	825, 813, 716, 829, 718, 826, 827, 713, 714, 717,
	828, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	816, 702, 701, 0, 709, 0, 735, 736, 738, 742,
	743, 744, 755, 772, 773, 781, 783, 784, 782, 785,
	786, 787, 790, 791, 792, 793, 788, 789, 794, 719,
	723, 720, 721, 722, 734, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 839, 840, 841, 842, 843,
	844, 748, 752, 751, 749, 750, 746, 747, 756, 758,
	759, 760, 757, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 700, 194, 216, 358, 0, 443,
	281, 589, 559, 554, 201, 218, 830, 255, 831, 0,
	0, 835, 0, 0, 0, 837, 836, 0, 838, 804,
	803, 0, 0, 832, 833, 0, 834, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 533, 535, 548, 566, 572,
	469, 845, 846, 847, 848, 849, 850, 851, 852, 292,
	543, 573, 541, 585, 567, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 558, 490, 222, 455, 283, 246,
	870, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 523,
	524, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	530, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 527,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1388, 1387, 1389, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 547, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 532,
	439, 544, 570, 571, 256, 395, 556, 500, 564, 588,
	221, 253, 409, 493, 550, 482, 387, 528, 529, 321,
	481, 288, 198, 359, 576, 219, 468, 361, 237, 226,
	534, 553, 282, 445, 583, 208, 495, 542, 234, 472,
	0, 0, 590, 242, 492, 210, 539, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	536, 537, 249, 591, 223, 563, 215, 0, 562, 397,
	531, 540, 384, 373, 214, 538, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 551, 0, 203, 0, 487, 552, 592, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 526, 545,
	557, 568, 574, 575, 577, 578, 579, 580, 581, 584,
	582, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 549, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 374, 474, 546, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 525, 304, 211, 212,
	213, 502, 503, 504, 505, 560, 561, 565, 451, 452,
	453, 454, 285, 555, 301, 457, 456, 323, 324, 369,
	438, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 0, 194, 216,
	358, 0, 443, 281, 589, 559, 554, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 533, 535,
	548, 566, 572, 469, 293, 294, 433, 434, 306, 307,
	586, 587, 292, 543, 573, 541, 585, 567, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 558, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 523, 524, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 530, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 527, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 1031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 1030, 569, 0, 0, 0, 0,
	0, 1027, 1028, 355, 988, 322, 195, 220, 1021, 1025,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	547, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 532, 439, 544, 570, 571, 256, 395, 556,
	500, 564, 588, 221, 253, 409, 493, 550, 482, 387,
	528, 529, 321, 481, 288, 198, 359, 576, 219, 468,
	361, 237, 226, 534, 553, 282, 445, 583, 208, 495,
	542, 234, 472, 0, 0, 590, 242, 492, 210, 539,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 536, 537, 249, 591, 223, 563, 215,
	0, 562, 397, 531, 540, 384, 373, 214, 538, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 551, 0, 203, 0, 487,
	552, 592, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 526, 545, 557, 568, 574, 575, 577, 578, 579,
	580, 581, 584, 582, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 549, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 374, 474, 546, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 525,
	304, 211, 212, 213, 502, 503, 504, 505, 560, 561,
	565, 451, 452, 453, 454, 285, 555, 301, 457, 456,
	323, 324, 369, 438, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	0, 194, 216, 358, 0, 443, 281, 589, 559, 554,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 533, 535, 548, 566, 572, 469, 293, 294, 433,
	434, 306, 307, 586, 587, 292, 543, 573, 541, 585,
	567, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	558, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 523, 524, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 530, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 1548, 855,
	0, 0, 1545, 0, 0, 0, 0, 1543, 0, 233,
	1544, 1542, 240, 1547, 0, 820, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 527, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 547, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 532, 439, 544, 570, 571,
	256, 395, 556, 500, 564, 588, 221, 253, 409, 493,
	550, 482, 387, 528, 529, 321, 481, 288, 198, 359,
	576, 219, 468, 361, 237, 226, 534, 553, 282, 445,
	583, 208, 495, 542, 234, 472, 0, 0, 590, 242,
	492, 210, 539, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 536, 537, 249, 591,
	223, 563, 215, 0, 562, 397, 531, 540, 384, 373,
	214, 538, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 551, 0,
	203, 0, 487, 552, 592, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 526, 545, 557, 568, 574, 575,
	577, 578, 579, 580, 581, 584, 582, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 549, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 374, 474,
	546, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 525, 304, 211, 212, 213, 502, 503, 504,
	505, 560, 561, 565, 451, 452, 453, 454, 285, 555,
	301, 457, 456, 323, 324, 369, 438, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 0, 194, 216, 358, 0, 443, 281,
	589, 559, 554, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 533, 535, 548, 566, 572, 469,
	293, 294, 433, 434, 306, 307, 586, 587, 292, 543,
	573, 541, 585, 567, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 558, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 0, 386, 366, 523, 524,
	308, 84, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	530, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 93,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 527,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 547, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 532,
	439, 544, 570, 571, 256, 395, 556, 500, 564, 588,
	221, 253, 409, 493, 550, 482, 387, 528, 529, 321,
	481, 288, 198, 359, 576, 219, 468, 361, 237, 226,
	534, 553, 282, 445, 583, 208, 495, 542, 234, 472,
	0, 0, 590, 242, 492, 210, 539, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	536, 537, 249, 591, 223, 563, 215, 0, 562, 397,
	531, 540, 384, 373, 214, 538, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 551, 0, 203, 0, 487, 552, 592, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 526, 545,
	557, 568, 574, 575, 577, 578, 579, 580, 581, 584,
	582, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 549, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 374, 474, 546, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 525, 304, 211, 212,
	213, 502, 503, 504, 505, 560, 561, 565, 451, 452,
	453, 454, 285, 555, 301, 457, 456, 323, 324, 369,
	438, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 0, 194, 216,
	358, 92, 443, 281, 589, 559, 554, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 2183, 0, 0,
	2182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 533, 535,
	548, 566, 572, 469, 293, 294, 433, 434, 306, 307,
	586, 587, 292, 543, 573, 541, 585, 567, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 558, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 1604,
	0, 366, 523, 524, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 1606, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 530, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 1608, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 527, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 1360, 0, 1361, 1362, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	547, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 532, 439, 544, 570, 571, 256, 395, 556,
	500, 564, 588, 221, 253, 409, 493, 550, 482, 387,
	528, 529, 321, 481, 288, 198, 359, 576, 219, 468,
	361, 237, 226, 534, 553, 282, 445, 583, 208, 495,
	542, 234, 472, 0, 0, 590, 242, 492, 210, 539,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 536, 537, 249, 591, 223, 563, 215,
	0, 562, 397, 531, 540, 384, 373, 214, 538, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 551, 0, 203, 0, 487,
	552, 592, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 526, 545, 557, 568, 574, 575, 577, 578, 579,
	580, 581, 584, 582, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 549, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 374, 474, 546, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 525,
	304, 211, 212, 213, 502, 503, 504, 505, 560, 561,
	565, 451, 452, 453, 454, 285, 555, 301, 457, 456,
	323, 324, 369, 438, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	0, 194, 216, 358, 0, 443, 281, 589, 559, 554,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 533, 535, 548, 566, 572, 469, 293, 294, 433,
	434, 306, 307, 586, 587, 292, 543, 573, 541, 585,
	567, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	558, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 0, 386, 366, 523, 524, 308, 84, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 530, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 93, 0, 1585, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 527, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 547, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 532, 439, 544, 570,
	571, 256, 395, 556, 500, 564, 588, 221, 253, 409,
	493, 550, 482, 387, 528, 529, 321, 481, 288, 198,
	359, 576, 219, 468, 361, 237, 226, 534, 553, 282,
	445, 583, 208, 495, 542, 234, 472, 0, 0, 590,
	242, 492, 210, 539, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 536, 537, 249,
	591, 223, 563, 215, 0, 562, 397, 531, 540, 384,
	373, 214, 538, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 551,
	0, 203, 0, 487, 552, 592, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 526, 545, 557, 568, 574,
	575, 577, 578, 579, 580, 581, 584, 582, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 549, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 374,
	474, 546, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 525, 304, 211, 212, 213, 502, 503,
	504, 505, 560, 561, 565, 451, 452, 453, 454, 285,
	555, 301, 457, 456, 323, 324, 369, 438, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 0, 194, 216, 358, 92, 443,
	281, 589, 559, 554, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 533, 535, 548, 566, 572,
	469, 293, 294, 433, 434, 306, 307, 586, 587, 292,
	543, 573, 541, 585, 567, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 558, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 523,
	524, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	530, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 93,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 527,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 547, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 532,
	439, 544, 570, 571, 256, 395, 556, 500, 564, 588,
	221, 253, 409, 493, 550, 482, 387, 528, 529, 321,
	481, 288, 198, 359, 576, 219, 468, 361, 237, 226,
	534, 553, 282, 445, 583, 208, 495, 542, 234, 472,
	0, 0, 590, 242, 492, 210, 539, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	536, 537, 249, 591, 223, 563, 215, 0, 562, 397,
	531, 540, 384, 373, 214, 538, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 551, 0, 203, 0, 487, 552, 592, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 526, 545,
	557, 568, 574, 575, 577, 578, 579, 580, 581, 584,
	582, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 549, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 374, 474, 546, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 525, 304, 211, 212,
	213, 502, 503, 504, 505, 560, 561, 565, 451, 452,
	453, 454, 285, 555, 301, 457, 456, 323, 324, 369,
	438, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 0, 194, 216,
	358, 0, 443, 281, 589, 559, 554, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 2183, 0, 0,
	2182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 533, 535,
	548, 566, 572, 469, 293, 294, 433, 434, 306, 307,
	586, 587, 292, 543, 573, 541, 585, 567, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 558, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 523, 524, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 2133, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 530, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 1787, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 527, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	547, 228, 277, 447, 421, 458, 429, 280, 0, 2131,
	459, 362, 532, 439, 544, 570, 571, 256, 395, 556,
	500, 564, 588, 221, 253, 409, 493, 550, 482, 387,
	528, 529, 321, 481, 288, 198, 359, 576, 219, 468,
	361, 237, 226, 534, 553, 282, 445, 583, 208, 495,
	542, 234, 472, 0, 0, 590, 242, 492, 210, 539,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 536, 537, 249, 591, 223, 563, 215,
	0, 562, 397, 531, 540, 384, 373, 214, 538, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 551, 0, 203, 0, 487,
	552, 592, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 526, 545, 557, 568, 574, 575, 577, 578, 579,
	580, 581, 584, 582, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 549, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 374, 474, 546, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 525,
	304, 211, 212, 213, 502, 503, 504, 505, 560, 561,
	565, 451, 452, 453, 454, 285, 555, 301, 457, 456,
	323, 324, 369, 438, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	0, 194, 216, 358, 0, 443, 281, 589, 559, 554,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 533, 535, 548, 566, 572, 469, 293, 294, 433,
	434, 306, 307, 586, 587, 292, 543, 573, 541, 585,
	567, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	558, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 523, 524, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 530, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 527, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 355, 988, 322, 195,
	220, 986, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 547, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 532, 439, 544, 570, 571,
	256, 395, 556, 500, 564, 588, 221, 253, 409, 493,
	550, 482, 387, 528, 529, 321, 481, 288, 198, 359,
	576, 219, 468, 361, 237, 226, 534, 553, 282, 445,
	583, 208, 495, 542, 234, 472, 0, 0, 590, 242,
	492, 210, 539, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 536, 537, 249, 591,
	223, 563, 215, 0, 562, 397, 531, 540, 384, 373,
	214, 538, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 551, 0,
	203, 0, 487, 552, 592, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 526, 545, 557, 568, 574, 575,
	577, 578, 579, 580, 581, 584, 582, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 549, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 374, 474,
	546, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 525, 304, 211, 212, 213, 502, 503, 504,
	505, 560, 561, 565, 451, 452, 453, 454, 285, 555,
	301, 457, 456, 323, 324, 369, 438, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 0, 194, 216, 358, 0, 443, 281,
	589, 559, 554, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 533, 535, 548, 566, 572, 469,
	293, 294, 433, 434, 306, 307, 586, 587, 292, 543,
	573, 541, 585, 567, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 558, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 523, 524,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 2133, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 530,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 1787, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 527, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 547, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 532, 439,
	544, 570, 571, 256, 395, 556, 500, 564, 588, 221,
	253, 409, 493, 550, 482, 387, 528, 529, 321, 481,
	288, 198, 359, 576, 219, 468, 361, 237, 226, 534,
	553, 282, 445, 583, 208, 495, 542, 234, 472, 0,
	0, 590, 242, 492, 210, 539, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 536,
	537, 249, 591, 223, 563, 215, 0, 562, 397, 531,
	540, 384, 373, 214, 538, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 551, 0, 203, 0, 487, 552, 592, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 526, 545, 557,
	568, 574, 575, 577, 578, 579, 580, 581, 584, 582,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	549, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 374, 474, 546, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 525, 304, 211, 212, 213,
	502, 503, 504, 505, 560, 561, 565, 451, 452, 453,
	454, 285, 555, 301, 457, 456, 323, 324, 369, 438,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 0, 194, 216, 358,
	0, 443, 281, 589, 559, 554, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 533, 535, 548,
	566, 572, 469, 293, 294, 433, 434, 306, 307, 586,
	587, 292, 543, 573, 541, 585, 567, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 558, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 523, 524, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 530, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 1585, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 527, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 569, 0, 0, 0, 3565, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 547,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 532, 439, 544, 570, 571, 256, 395, 556, 500,
	564, 588, 221, 253, 409, 493, 550, 482, 387, 528,
	529, 321, 481, 288, 198, 359, 576, 219, 468, 361,
	237, 226, 534, 553, 282, 445, 583, 208, 495, 542,
	234, 472, 0, 0, 590, 242, 492, 210, 539, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 536, 537, 249, 591, 223, 563, 215, 0,
	562, 397, 531, 540, 384, 373, 214, 538, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 551, 0, 203, 0, 487, 552,
	592, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	526, 545, 557, 568, 574, 575, 577, 578, 579, 580,
	581, 584, 582, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 549, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 374, 474, 546, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 525, 304,
	211, 212, 213, 502, 503, 504, 505, 560, 561, 565,
	451, 452, 453, 454, 285, 555, 301, 457, 456, 323,
	324, 369, 438, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 0,
	194, 216, 358, 0, 443, 281, 589, 559, 554, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	533, 535, 548, 566, 572, 469, 293, 294, 433, 434,
	306, 307, 586, 587, 292, 543, 573, 541, 585, 567,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 558,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 523, 524, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 530, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 1944, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 527, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 547, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 532, 439, 544, 570, 571, 256,
	395, 556, 500, 564, 588, 221, 253, 409, 493, 550,
	482, 387, 528, 529, 321, 481, 288, 198, 359, 576,
	219, 468, 361, 237, 226, 534, 553, 282, 445, 583,
	208, 495, 542, 234, 472, 0, 0, 590, 242, 492,
	210, 539, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 536, 537, 249, 591, 223,
	563, 215, 0, 562, 397, 531, 540, 384, 373, 214,
	538, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 551, 0, 203,
	0, 487, 552, 592, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 526, 545, 557, 568, 574, 575, 577,
	578, 579, 580, 581, 584, 582, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 549, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 374, 474, 546,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 525, 304, 211, 212, 213, 502, 503, 504, 505,
	560, 561, 565, 451, 452, 453, 454, 285, 555, 301,
	457, 456, 323, 324, 369, 438, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 0, 194, 216, 358, 0, 443, 281, 589,
	559, 554, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 533, 535, 548, 566, 572, 469, 293,
	294, 433, 434, 306, 307, 586, 587, 292, 543, 573,
	541, 585, 567, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 558, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 523, 524, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 530, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	2580, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 527, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 547, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 532, 439, 544,
	570, 571, 256, 395, 556, 500, 564, 588, 221, 253,
	409, 493, 550, 482, 387, 528, 529, 321, 481, 288,
	198, 359, 576, 219, 468, 361, 237, 226, 534, 553,
	282, 445, 583, 208, 495, 542, 234, 472, 0, 0,
	590, 242, 492, 210, 539, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 536, 537,
	249, 591, 223, 563, 215, 0, 562, 397, 531, 540,
	384, 373, 214, 538, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	551, 0, 203, 0, 487, 552, 592, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 526, 545, 557, 568,
	574, 575, 577, 578, 579, 580, 581, 584, 582, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 549,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	374, 474, 546, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 525, 304, 211, 212, 213, 502,
	503, 504, 505, 560, 561, 565, 451, 452, 453, 454,
	285, 555, 301, 457, 456, 323, 324, 369, 438, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 0, 194, 216, 358, 0,
	443, 281, 589, 559, 554, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 533, 535, 548, 566,
	572, 469, 293, 294, 433, 434, 306, 307, 586, 587,
	292, 543, 573, 541, 585, 567, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 558, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	523, 524, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 530, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 2565,
	0, 0, 0, 0, 233, 0, 0, 240, 2566, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	527, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 547, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	532, 439, 544, 570, 571, 256, 395, 556, 500, 564,
	588, 221, 253, 409, 493, 550, 482, 387, 528, 529,
	321, 481, 288, 198, 359, 576, 219, 468, 361, 237,
	226, 534, 553, 282, 445, 583, 208, 495, 542, 234,
	472, 0, 0, 590, 242, 492, 210, 539, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 536, 537, 249, 591, 223, 563, 215, 0, 562,
	397, 531, 540, 384, 373, 214, 538, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 551, 0, 203, 0, 487, 552, 592,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 526,
	545, 557, 568, 574, 575, 577, 578, 579, 580, 581,
	584, 582, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 549, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 374, 474, 546, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 525, 304, 211,
	212, 213, 502, 503, 504, 505, 560, 561, 565, 451,
	452, 453, 454, 285, 555, 301, 457, 456, 323, 324,
	369, 438, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 0, 194,
	216, 358, 0, 443, 281, 589, 559, 554, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 533,
	535, 548, 566, 572, 469, 293, 294, 433, 434, 306,
	307, 586, 587, 292, 543, 573, 541, 585, 567, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 558, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 523, 524, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 1627, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 530, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 1626, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 527, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 547, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 532, 439, 544, 570, 571, 256, 395,
	556, 500, 564, 588, 221, 253, 409, 493, 550, 482,
	387, 528, 529, 321, 481, 288, 198, 359, 576, 219,
	468, 361, 237, 226, 534, 553, 282, 445, 583, 208,
	495, 542, 234, 472, 0, 0, 590, 242, 492, 210,
	539, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 536, 537, 249, 591, 223, 563,
	215, 0, 562, 397, 531, 540, 384, 373, 214, 538,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 551, 0, 203, 0,
	487, 552, 592, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 526, 545, 557, 568, 574, 575, 577, 578,
	579, 580, 581, 584, 582, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 549, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 374, 474, 546, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	525, 304, 211, 212, 213, 502, 503, 504, 505, 560,
	561, 565, 451, 452, 453, 454, 285, 555, 301, 457,
	456, 323, 324, 369, 438, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 0, 194, 216, 358, 0, 443, 281, 589, 559,
	554, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 533, 535, 548, 566, 572, 469, 293, 294,
	433, 434, 306, 307, 586, 587, 292, 543, 573, 541,
	585, 567, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 558, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 523, 524, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 530, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	661, 662, 663, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 527, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 547, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 532, 439, 544, 570,
	571, 256, 395, 556, 500, 564, 588, 221, 253, 409,
	493, 550, 482, 387, 528, 529, 321, 481, 288, 198,
	359, 576, 219, 468, 361, 237, 226, 534, 553, 282,
	445, 583, 208, 495, 542, 234, 472, 0, 0, 590,
	242, 492, 210, 539, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 536, 537, 249,
	591, 223, 563, 215, 0, 562, 397, 531, 540, 384,
	373, 214, 538, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 551,
	0, 203, 0, 487, 552, 592, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 526, 545, 557, 568, 574,
	575, 577, 578, 579, 580, 581, 584, 582, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 549, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 374,
	474, 546, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 525, 304, 211, 212, 213, 502, 503,
	504, 505, 560, 561, 565, 451, 452, 453, 454, 285,
	555, 301, 457, 456, 323, 324, 369, 438, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 0, 194, 216, 358, 0, 443,
	281, 589, 559, 554, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 533, 535, 548, 566, 572,
	469, 293, 294, 433, 434, 306, 307, 586, 587, 292,
	543, 573, 541, 585, 567, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 558, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 523,
	524, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	530, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 527,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 569, 0, 0, 0, 3689, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 547, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 532,
	439, 544, 570, 571, 256, 395, 556, 500, 564, 588,
	221, 253, 409, 493, 550, 482, 387, 528, 529, 321,
	481, 288, 198, 359, 576, 219, 468, 361, 237, 226,
	534, 553, 282, 445, 583, 208, 495, 542, 234, 472,
	0, 0, 590, 242, 492, 210, 539, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	536, 537, 249, 591, 223, 563, 215, 0, 562, 397,
	531, 540, 384, 373, 214, 538, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 551, 0, 203, 0, 487, 552, 592, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 526, 545,
	557, 568, 574, 575, 577, 578, 579, 580, 581, 584,
	582, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 549, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 374, 474, 546, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 525, 304, 211, 212,
	213, 502, 503, 504, 505, 560, 561, 565, 451, 452,
	453, 454, 285, 555, 301, 457, 456, 323, 324, 369,
	438, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 0, 194, 216,
	358, 0, 443, 281, 589, 559, 554, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 533, 535,
	548, 566, 572, 469, 293, 294, 433, 434, 306, 307,
	586, 587, 292, 543, 573, 541, 585, 567, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 558, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 523, 524, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 530, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 1787, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 527, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	547, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 532, 439, 544, 570, 571, 256, 395, 556,
	500, 564, 588, 221, 253, 409, 493, 550, 482, 387,
	528, 529, 321, 481, 288, 198, 359, 576, 219, 468,
	361, 237, 226, 534, 553, 282, 445, 583, 208, 495,
	542, 234, 472, 0, 0, 590, 242, 492, 210, 539,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 536, 537, 249, 591, 223, 563, 215,
	0, 562, 397, 531, 540, 384, 373, 214, 538, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 551, 0, 203, 0, 487,
	552, 592, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 526, 545, 557, 568, 574, 575, 577, 578, 579,
	580, 581, 584, 582, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 549, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 374, 474, 546, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 525,
	304, 211, 212, 213, 502, 503, 504, 505, 560, 561,
	565, 451, 452, 453, 454, 285, 555, 301, 457, 456,
	323, 324, 369, 438, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	0, 194, 216, 358, 0, 443, 281, 589, 559, 554,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 533, 535, 548, 566, 572, 469, 293, 294, 433,
	434, 306, 307, 586, 587, 292, 543, 573, 541, 585,
	567, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	558, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 523, 524, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 530, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 527, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 569, 0,
	0, 0, 3565, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 547, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 532, 439, 544, 570, 571,
	256, 395, 556, 500, 564, 588, 221, 253, 409, 493,
	550, 482, 387, 528, 529, 321, 481, 288, 198, 359,
	576, 219, 468, 361, 237, 226, 534, 553, 282, 445,
	583, 208, 495, 542, 234, 472, 0, 0, 590, 242,
	492, 210, 539, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 536, 537, 249, 591,
	223, 563, 215, 0, 562, 397, 531, 540, 384, 373,
	214, 538, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 551, 0,
	203, 0, 487, 552, 592, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 526, 545, 557, 568, 574, 575,
	577, 578, 579, 580, 581, 584, 582, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 549, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 374, 474,
	546, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 525, 304, 211, 212, 213, 502, 503, 504,
	505, 560, 561, 565, 451, 452, 453, 454, 285, 555,
	301, 457, 456, 323, 324, 369, 438, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 0, 194, 216, 358, 0, 443, 281,
	589, 559, 554, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 533, 535, 548, 566, 572, 469,
	293, 294, 433, 434, 306, 307, 586, 587, 292, 543,
	573, 541, 585, 567, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 558, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 523, 524,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 530,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 527, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 547, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 532, 439,
	544, 570, 571, 256, 395, 556, 500, 564, 588, 221,
	253, 409, 493, 550, 482, 387, 528, 529, 321, 481,
	288, 198, 359, 576, 219, 468, 361, 237, 226, 534,
	553, 282, 445, 583, 208, 495, 542, 234, 472, 0,
	0, 590, 242, 492, 210, 539, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 536,
	537, 249, 591, 223, 563, 215, 0, 562, 397, 531,
	540, 384, 373, 214, 538, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 551, 0, 203, 0, 487, 552, 592, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 526, 545, 557,
	568, 574, 575, 577, 578, 579, 580, 581, 584, 582,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	549, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 374, 474, 546, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 525, 304, 211, 212, 213,
	502, 503, 504, 505, 560, 561, 565, 451, 452, 453,
	454, 285, 555, 301, 457, 456, 323, 324, 369, 438,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 0, 194, 216, 358,
	0, 443, 281, 589, 559, 554, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 533, 535, 548,
	566, 572, 469, 293, 294, 433, 434, 306, 307, 586,
	587, 292, 543, 573, 541, 585, 567, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 558, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 523, 524, 308, 506, 0, 0, 0, 0, 2184,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 530, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 527, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 547,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 532, 439, 544, 570, 571, 256, 395, 556, 500,
	564, 588, 221, 253, 409, 493, 550, 482, 387, 528,
	529, 321, 481, 288, 198, 359, 576, 219, 468, 361,
	237, 226, 534, 553, 282, 445, 583, 208, 495, 542,
	234, 472, 0, 0, 590, 242, 492, 210, 539, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 536, 537, 249, 591, 223, 563, 215, 0,
	562, 397, 531, 540, 384, 373, 214, 538, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 551, 0, 203, 0, 487, 552,
	592, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	526, 545, 557, 568, 574, 575, 577, 578, 579, 580,
	581, 584, 582, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 549, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 374, 474, 546, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 525, 304,
	211, 212, 213, 502, 503, 504, 505, 560, 561, 565,
	451, 452, 453, 454, 285, 555, 301, 457, 456, 323,
	324, 369, 438, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 0,
	194, 216, 358, 0, 443, 281, 589, 559, 554, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	533, 535, 548, 566, 572, 469, 293, 294, 433, 434,
	306, 307, 586, 587, 292, 543, 573, 541, 585, 567,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 558,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 523, 524, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 530, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 1608, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 527, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 547, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 532, 439, 544, 570, 571, 256,
	395, 556, 500, 564, 588, 221, 253, 409, 493, 550,
	482, 387, 528, 529, 321, 481, 288, 198, 359, 576,
	219, 468, 361, 237, 226, 534, 553, 282, 445, 583,
	208, 495, 542, 234, 472, 0, 0, 590, 242, 492,
	210, 539, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 536, 537, 249, 591, 223,
	563, 215, 0, 562, 397, 531, 540, 384, 373, 214,
	538, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 551, 0, 203,
	0, 487, 552, 592, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 526, 545, 557, 568, 574, 575, 577,
	578, 579, 580, 581, 584, 582, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 549, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 374, 474, 546,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 525, 304, 211, 212, 213, 502, 503, 504, 505,
	560, 561, 565, 451, 452, 453, 454, 285, 555, 301,
	457, 456, 323, 324, 369, 438, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 0, 194, 216, 358, 0, 443, 281, 589,
	559, 554, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 533, 535, 548, 566, 572, 469, 293,
	294, 433, 434, 306, 307, 586, 587, 292, 543, 573,
	541, 585, 567, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 558, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 523, 524, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 530, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 527, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 547, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 532, 439, 544,
	570, 571, 256, 395, 556, 500, 564, 588, 221, 253,
	409, 493, 550, 482, 387, 528, 529, 321, 481, 288,
	198, 359, 576, 219, 468, 361, 237, 226, 534, 553,
	282, 445, 583, 208, 495, 542, 234, 472, 0, 0,
	590, 242, 492, 210, 539, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 536, 537,
	249, 591, 223, 563, 215, 0, 562, 397, 531, 540,
	384, 373, 214, 538, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	551, 0, 203, 0, 487, 552, 592, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 526, 545, 557, 568,
	574, 575, 577, 578, 579, 580, 581, 584, 582, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 549,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	374, 474, 546, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 525, 304, 211, 212, 213, 502,
	503, 504, 505, 560, 561, 565, 451, 452, 453, 454,
	285, 555, 301, 457, 456, 323, 324, 369, 438, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 0, 194, 216, 358, 1899,
	443, 281, 589, 559, 554, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 533, 535, 548, 566,
	572, 469, 293, 294, 433, 434, 306, 307, 586, 587,
	292, 543, 573, 541, 585, 567, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 558, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	523, 524, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 530, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 1890, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	527, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 547, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	532, 439, 544, 570, 571, 256, 395, 556, 500, 564,
	588, 221, 253, 409, 493, 550, 482, 387, 528, 529,
	321, 481, 288, 198, 359, 576, 219, 468, 361, 237,
	226, 534, 553, 282, 445, 583, 208, 495, 542, 234,
	472, 0, 0, 590, 242, 492, 210, 539, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 536, 537, 249, 591, 223, 563, 215, 0, 562,
	397, 531, 540, 384, 373, 214, 538, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 551, 0, 203, 0, 487, 552, 592,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 526,
	545, 557, 568, 574, 575, 577, 578, 579, 580, 581,
	584, 582, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 549, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 374, 474, 546, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 525, 304, 211,
	212, 213, 502, 503, 504, 505, 560, 561, 565, 451,
	452, 453, 454, 285, 555, 301, 457, 456, 323, 324,
	369, 438, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 0, 194,
	216, 358, 0, 443, 281, 589, 559, 554, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 533,
	535, 548, 566, 572, 469, 293, 294, 433, 434, 306,
	307, 586, 587, 292, 543, 573, 541, 585, 567, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 558, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 523, 524, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	1754, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 530, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 527, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 547, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 532, 439, 544, 570, 571, 256, 395,
	556, 500, 564, 588, 221, 253, 409, 493, 550, 482,
	387, 528, 529, 321, 481, 288, 198, 359, 576, 219,
	468, 361, 237, 226, 534, 553, 282, 445, 583, 208,
	495, 542, 234, 472, 0, 0, 590, 242, 492, 210,
	539, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 536, 537, 249, 591, 223, 563,
	215, 0, 562, 397, 531, 540, 384, 373, 214, 538,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 551, 0, 203, 0,
	487, 552, 592, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 526, 545, 557, 568, 574, 575, 577, 578,
	579, 580, 581, 584, 582, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 549, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 374, 474, 546, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	525, 304, 211, 212, 213, 502, 503, 504, 505, 560,
	561, 565, 451, 452, 453, 454, 285, 555, 301, 457,
	456, 323, 324, 369, 438, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 0, 194, 216, 358, 0, 443, 281, 589, 559,
	554, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 533, 535, 548, 566, 572, 469, 293, 294,
	433, 434, 306, 307, 586, 587, 292, 543, 573, 541,
	585, 567, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 558, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 523, 524, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 1752, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 530, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 527, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 547, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 532, 439, 544, 570,
	571, 256, 395, 556, 500, 564, 588, 221, 253, 409,
	493, 550, 482, 387, 528, 529, 321, 481, 288, 198,
	359, 576, 219, 468, 361, 237, 226, 534, 553, 282,
	445, 583, 208, 495, 542, 234, 472, 0, 0, 590,
	242, 492, 210, 539, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 536, 537, 249,
	591, 223, 563, 215, 0, 562, 397, 531, 540, 384,
	373, 214, 538, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 551,
	0, 203, 0, 487, 552, 592, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 526, 545, 557, 568, 574,
	575, 577, 578, 579, 580, 581, 584, 582, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 549, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 374,
	474, 546, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 525, 304, 211, 212, 213, 502, 503,
	504, 505, 560, 561, 565, 451, 452, 453, 454, 285,
	555, 301, 457, 456, 323, 324, 369, 438, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 0, 194, 216, 358, 0, 443,
	281, 589, 559, 554, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 533, 535, 548, 566, 572,
	469, 293, 294, 433, 434, 306, 307, 586, 587, 292,
	543, 573, 541, 585, 567, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 558, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 523,
	524, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 1750, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	530, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 527,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 547, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 532,
	439, 544, 570, 571, 256, 395, 556, 500, 564, 588,
	221, 253, 409, 493, 550, 482, 387, 528, 529, 321,
	481, 288, 198, 359, 576, 219, 468, 361, 237, 226,
	534, 553, 282, 445, 583, 208, 495, 542, 234, 472,
	0, 0, 590, 242, 492, 210, 539, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	536, 537, 249, 591, 223, 563, 215, 0, 562, 397,
	531, 540, 384, 373, 214, 538, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 551, 0, 203, 0, 487, 552, 592, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 526, 545,
	557, 568, 574, 575, 577, 578, 579, 580, 581, 584,
	582, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 549, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 374, 474, 546, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 525, 304, 211, 212,
	213, 502, 503, 504, 505, 560, 561, 565, 451, 452,
	453, 454, 285, 555, 301, 457, 456, 323, 324, 369,
	438, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 0, 194, 216,
	358, 0, 443, 281, 589, 559, 554, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 533, 535,
	548, 566, 572, 469, 293, 294, 433, 434, 306, 307,
	586, 587, 292, 543, 573, 541, 585, 567, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 558, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 523, 524, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 1748,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 530, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 527, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	547, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 532, 439, 544, 570, 571, 256, 395, 556,
	500, 564, 588, 221, 253, 409, 493, 550, 482, 387,
	528, 529, 321, 481, 288, 198, 359, 576, 219, 468,
	361, 237, 226, 534, 553, 282, 445, 583, 208, 495,
	542, 234, 472, 0, 0, 590, 242, 492, 210, 539,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 536, 537, 249, 591, 223, 563, 215,
	0, 562, 397, 531, 540, 384, 373, 214, 538, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 551, 0, 203, 0, 487,
	552, 592, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 526, 545, 557, 568, 574, 575, 577, 578, 579,
	580, 581, 584, 582, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 549, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 374, 474, 546, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 525,
	304, 211, 212, 213, 502, 503, 504, 505, 560, 561,
	565, 451, 452, 453, 454, 285, 555, 301, 457, 456,
	323, 324, 369, 438, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	0, 194, 216, 358, 0, 443, 281, 589, 559, 554,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 533, 535, 548, 566, 572, 469, 293, 294, 433,
	434, 306, 307, 586, 587, 292, 543, 573, 541, 585,
	567, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	558, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 523, 524, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 1746, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 530, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 527, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 547, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 532, 439, 544, 570, 571,
	256, 395, 556, 500, 564, 588, 221, 253, 409, 493,
	550, 482, 387, 528, 529, 321, 481, 288, 198, 359,
	576, 219, 468, 361, 237, 226, 534, 553, 282, 445,
	583, 208, 495, 542, 234, 472, 0, 0, 590, 242,
	492, 210, 539, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 536, 537, 249, 591,
	223, 563, 215, 0, 562, 397, 531, 540, 384, 373,
	214, 538, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 551, 0,
	203, 0, 487, 552, 592, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 526, 545, 557, 568, 574, 575,
	577, 578, 579, 580, 581, 584, 582, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 549, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 374, 474,
	546, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 525, 304, 211, 212, 213, 502, 503, 504,
	505, 560, 561, 565, 451, 452, 453, 454, 285, 555,
	301, 457, 456, 323, 324, 369, 438, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 0, 194, 216, 358, 0, 443, 281,
	589, 559, 554, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 533, 535, 548, 566, 572, 469,
	293, 294, 433, 434, 306, 307, 586, 587, 292, 543,
	573, 541, 585, 567, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 558, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 523, 524,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 1742, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 530,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 527, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 547, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 532, 439,
	544, 570, 571, 256, 395, 556, 500, 564, 588, 221,
	253, 409, 493, 550, 482, 387, 528, 529, 321, 481,
	288, 198, 359, 576, 219, 468, 361, 237, 226, 534,
	553, 282, 445, 583, 208, 495, 542, 234, 472, 0,
	0, 590, 242, 492, 210, 539, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 536,
	537, 249, 591, 223, 563, 215, 0, 562, 397, 531,
	540, 384, 373, 214, 538, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 551, 0, 203, 0, 487, 552, 592, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 526, 545, 557,
	568, 574, 575, 577, 578, 579, 580, 581, 584, 582,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	549, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 374, 474, 546, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 525, 304, 211, 212, 213,
	502, 503, 504, 505, 560, 561, 565, 451, 452, 453,
	454, 285, 555, 301, 457, 456, 323, 324, 369, 438,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 0, 194, 216, 358,
	0, 443, 281, 589, 559, 554, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 533, 535, 548,
	566, 572, 469, 293, 294, 433, 434, 306, 307, 586,
	587, 292, 543, 573, 541, 585, 567, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 558, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 523, 524, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 1740, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 530, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 527, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 547,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 532, 439, 544, 570, 571, 256, 395, 556, 500,
	564, 588, 221, 253, 409, 493, 550, 482, 387, 528,
	529, 321, 481, 288, 198, 359, 576, 219, 468, 361,
	237, 226, 534, 553, 282, 445, 583, 208, 495, 542,
	234, 472, 0, 0, 590, 242, 492, 210, 539, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 536, 537, 249, 591, 223, 563, 215, 0,
	562, 397, 531, 540, 384, 373, 214, 538, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 551, 0, 203, 0, 487, 552,
	592, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	526, 545, 557, 568, 574, 575, 577, 578, 579, 580,
	581, 584, 582, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 549, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 374, 474, 546, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 525, 304,
	211, 212, 213, 502, 503, 504, 505, 560, 561, 565,
	451, 452, 453, 454, 285, 555, 301, 457, 456, 323,
	324, 369, 438, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 0,
	194, 216, 358, 0, 443, 281, 589, 559, 554, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	533, 535, 548, 566, 572, 469, 293, 294, 433, 434,
	306, 307, 586, 587, 292, 543, 573, 541, 585, 567,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 558,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 523, 524, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 1738, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 530, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 527, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 547, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 532, 439, 544, 570, 571, 256,
	395, 556, 500, 564, 588, 221, 253, 409, 493, 550,
	482, 387, 528, 529, 321, 481, 288, 198, 359, 576,
	219, 468, 361, 237, 226, 534, 553, 282, 445, 583,
	208, 495, 542, 234, 472, 0, 0, 590, 242, 492,
	210, 539, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 536, 537, 249, 591, 223,
	563, 215, 0, 562, 397, 531, 540, 384, 373, 214,
	538, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 551, 0, 203,
	0, 487, 552, 592, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 526, 545, 557, 568, 574, 575, 577,
	578, 579, 580, 581, 584, 582, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 549, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 374, 474, 546,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 525, 304, 211, 212, 213, 502, 503, 504, 505,
	560, 561, 565, 451, 452, 453, 454, 285, 555, 301,
	457, 456, 323, 324, 369, 438, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 0, 194, 216, 358, 0, 443, 281, 589,
	559, 554, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 533, 535, 548, 566, 572, 469, 293,
	294, 433, 434, 306, 307, 586, 587, 292, 543, 573,
	541, 585, 567, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 558, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 523, 524, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 530, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 1713, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 527, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 547, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 532, 439, 544,
	570, 571, 256, 395, 556, 500, 564, 588, 221, 253,
	409, 493, 550, 482, 387, 528, 529, 321, 481, 288,
	198, 359, 576, 219, 468, 361, 237, 226, 534, 553,
	282, 445, 583, 208, 495, 542, 234, 472, 0, 0,
	590, 242, 492, 210, 539, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 536, 537,
	249, 591, 223, 563, 215, 0, 562, 397, 531, 540,
	384, 373, 214, 538, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	551, 0, 203, 0, 487, 552, 592, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 526, 545, 557, 568,
	574, 575, 577, 578, 579, 580, 581, 584, 582, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 549,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	374, 474, 546, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 525, 304, 211, 212, 213, 502,
	503, 504, 505, 560, 561, 565, 451, 452, 453, 454,
	285, 555, 301, 457, 456, 323, 324, 369, 438, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 0, 194, 216, 358, 0,
	443, 281, 589, 559, 554, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 533, 535, 548, 566,
	572, 469, 293, 294, 433, 434, 306, 307, 586, 587,
	292, 543, 573, 541, 585, 567, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 558, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	523, 524, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 1612, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 530, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	527, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 547, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	532, 439, 544, 570, 571, 256, 395, 556, 500, 564,
	588, 221, 253, 409, 493, 550, 482, 387, 528, 529,
	321, 481, 288, 198, 359, 576, 219, 468, 361, 237,
	226, 534, 553, 282, 445, 583, 208, 495, 542, 234,
	472, 0, 0, 590, 242, 492, 210, 539, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 536, 537, 249, 591, 223, 563, 215, 0, 562,
	397, 531, 540, 384, 373, 214, 538, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 551, 0, 203, 0, 487, 552, 592,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 526,
	545, 557, 568, 574, 575, 577, 578, 579, 580, 581,
	584, 582, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 549, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 374, 474, 546, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 525, 304, 211,
	212, 213, 502, 503, 504, 505, 560, 561, 565, 451,
	452, 453, 454, 285, 555, 301, 457, 456, 323, 324,
	369, 438, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 0, 194,
	216, 358, 0, 443, 281, 589, 559, 554, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 533,
	535, 548, 566, 572, 469, 293, 294, 433, 434, 306,
	307, 586, 587, 292, 543, 573, 541, 585, 567, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 558, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 523, 524, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 530, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 93, 0, 0, 0, 855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 527, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 547, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 532, 439, 544, 570, 571, 256, 395,
	556, 500, 564, 588, 221, 253, 409, 493, 550, 482,
	387, 528, 529, 321, 481, 288, 198, 359, 576, 219,
	468, 361, 237, 226, 534, 553, 282, 445, 583, 208,
	495, 542, 234, 472, 0, 0, 590, 242, 492, 210,
	539, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 536, 537, 249, 591, 223, 563,
	215, 0, 562, 397, 531, 540, 384, 373, 214, 538,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 551, 0, 203, 0,
	487, 552, 592, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 526, 545, 557, 568, 574, 575, 577, 578,
	579, 580, 581, 584, 582, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 549, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 374, 474, 546, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	525, 304, 211, 212, 213, 502, 503, 504, 505, 560,
	561, 565, 451, 452, 453, 454, 285, 555, 301, 457,
	456, 323, 324, 369, 438, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 0, 194, 216, 358, 0, 443, 281, 589, 559,
	554, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 533, 535, 548, 566, 572, 469, 293, 294,
	433, 434, 306, 307, 586, 587, 292, 543, 573, 541,
	585, 567, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 558, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 523, 524, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 530, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 527, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 547, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 532, 439, 544, 570,
	571, 256, 395, 556, 500, 564, 588, 221, 253, 409,
	493, 550, 482, 387, 528, 529, 321, 481, 288, 198,
	359, 576, 219, 468, 361, 237, 226, 534, 553, 282,
	445, 583, 208, 495, 542, 234, 472, 0, 0, 590,
	242, 492, 210, 539, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 536, 537, 249,
	591, 223, 563, 215, 0, 562, 397, 531, 540, 384,
	373, 214, 538, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 551,
	0, 203, 0, 487, 552, 592, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 526, 545, 557, 568, 574,
	575, 577, 578, 579, 580, 581, 584, 582, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 549, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 374,
	474, 546, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 525, 304, 211, 212, 213, 502, 503,
	504, 505, 560, 561, 565, 451, 452, 453, 454, 285,
	555, 301, 457, 456, 323, 324, 369, 438, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 0, 194, 216, 358, 0, 443,
	281, 589, 559, 554, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 533, 535, 548, 566, 572,
	469, 293, 294, 433, 434, 306, 307, 586, 587, 1338,
	543, 573, 541, 585, 567, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 558, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 523,
	524, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	530, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 527,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 547, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 532,
	439, 544, 570, 571, 256, 395, 556, 500, 564, 588,
	221, 253, 409, 493, 550, 482, 387, 528, 529, 321,
	481, 288, 198, 359, 576, 219, 468, 361, 237, 226,
	534, 553, 282, 445, 583, 208, 495, 542, 234, 472,
	0, 0, 590, 242, 492, 210, 539, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	536, 537, 249, 591, 223, 563, 215, 0, 562, 397,
	531, 540, 384, 373, 214, 538, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 551, 0, 203, 0, 487, 552, 592, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 526, 545,
	557, 568, 574, 575, 577, 578, 579, 580, 581, 584,
	582, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 549, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 374, 474, 546, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 525, 304, 211, 212,
	213, 502, 503, 504, 505, 560, 561, 565, 451, 452,
	453, 454, 285, 555, 301, 457, 456, 323, 324, 369,
	438, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 0, 194, 216,
	358, 0, 443, 281, 589, 559, 554, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 941, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 533, 535,
	548, 566, 572, 469, 293, 294, 433, 434, 306, 307,
	586, 587, 292, 543, 573, 541, 585, 567, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 558, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 523, 524, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 530, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 527, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 614, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	547, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 532, 439, 544, 570, 571, 256, 395, 556,
	500, 564, 588, 221, 253, 409, 493, 550, 482, 387,
	528, 529, 321, 481, 288, 198, 359, 576, 219, 468,
	361, 237, 226, 534, 553, 282, 445, 583, 208, 495,
	542, 234, 472, 0, 0, 590, 242, 492, 210, 539,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 536, 537, 249, 591, 223, 563, 215,
	0, 562, 397, 531, 540, 384, 373, 214, 538, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 551, 0, 203, 0, 487,
	552, 592, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 526, 545, 557, 568, 574, 575, 577, 578, 579,
	580, 581, 584, 582, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 549, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 374, 474, 546, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 525,
	304, 211, 212, 213, 502, 503, 504, 505, 560, 561,
	565, 451, 452, 453, 454, 285, 555, 301, 457, 456,
	323, 324, 369, 438, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	0, 194, 216, 358, 0, 443, 281, 589, 559, 554,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 533, 535, 548, 566, 572, 469, 293, 294, 433,
	434, 306, 307, 586, 587, 292, 543, 573, 541, 585,
	567, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	558, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 523, 524, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 530, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 527, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 547, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 532, 439, 544, 570, 571,
	256, 395, 556, 500, 564, 588, 221, 253, 409, 493,
	550, 482, 387, 528, 529, 321, 481, 288, 198, 359,
	576, 219, 468, 361, 237, 226, 534, 553, 282, 445,
	583, 208, 495, 542, 234, 472, 0, 0, 590, 242,
	492, 210, 539, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 536, 537, 249, 591,
	223, 563, 215, 0, 562, 397, 531, 540, 384, 373,
	214, 538, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 551, 0,
	203, 0, 487, 552, 592, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 526, 545, 557, 568, 574, 575,
	577, 578, 579, 580, 581, 584, 582, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 549, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 374, 474,
	546, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 525, 304, 211, 212, 213, 502, 503, 504,
	505, 560, 561, 565, 451, 452, 453, 454, 285, 555,
	301, 457, 456, 323, 324, 369, 438, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 0, 194, 216, 358, 0, 443, 281,
	589, 559, 554, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	3697, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 533, 535, 548, 566, 572, 469,
	293, 294, 433, 434, 306, 307, 586, 587, 292, 543,
	573, 541, 585, 567, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 558, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 523, 524,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 530,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 527, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 547, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 532, 439,
	544, 570, 571, 256, 395, 556, 500, 564, 588, 221,
	253, 409, 493, 550, 482, 387, 528, 529, 321, 481,
	288, 198, 359, 576, 219, 468, 361, 237, 226, 534,
	553, 282, 445, 583, 208, 495, 542, 234, 472, 0,
	0, 590, 242, 492, 210, 539, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 536,
	537, 249, 591, 223, 563, 215, 0, 562, 397, 531,
	540, 384, 373, 214, 538, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 551, 0, 203, 0, 487, 552, 592, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 526, 545, 557,
	568, 574, 575, 577, 578, 579, 580, 581, 584, 582,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	549, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 374, 474, 546, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 525, 304, 211, 212, 213,
	502, 503, 504, 505, 560, 561, 565, 451, 452, 453,
	454, 285, 555, 301, 457, 456, 323, 324, 369, 438,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 0, 194, 216, 358,
	0, 443, 281, 589, 559, 554, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 533, 535, 548,
	566, 572, 469, 293, 294, 433, 434, 306, 307, 586,
	587, 292, 543, 573, 541, 585, 567, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 558, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 523, 524, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 530, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 527, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 547,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 532, 439, 544, 570, 571, 256, 395, 556, 500,
	564, 588, 221, 253, 409, 493, 550, 482, 387, 528,
	529, 321, 481, 288, 198, 359, 576, 219, 468, 361,
	237, 226, 534, 553, 282, 445, 583, 208, 495, 542,
	234, 472, 0, 0, 590, 242, 492, 210, 539, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 536, 537, 249, 591, 223, 563, 215, 0,
	562, 397, 531, 540, 384, 373, 214, 538, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 551, 0, 203, 0, 487, 552,
	592, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	526, 545, 557, 568, 574, 575, 577, 578, 579, 580,
	581, 584, 582, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 549, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 374, 474, 546, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 525, 304,
	211, 212, 213, 502, 503, 504, 505, 560, 561, 565,
	451, 452, 453, 454, 285, 555, 301, 457, 456, 323,
	324, 369, 438, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 0,
	194, 216, 358, 0, 443, 281, 589, 559, 554, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	533, 535, 548, 566, 572, 469, 293, 294, 433, 434,
	306, 307, 586, 587, 292, 543, 573, 541, 585, 567,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 558,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 523, 524, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 530, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 527, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 547, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 532, 439, 544, 570, 571, 256,
	395, 556, 500, 564, 588, 221, 253, 409, 493, 550,
	482, 387, 528, 529, 321, 481, 288, 198, 359, 576,
	219, 468, 361, 237, 226, 534, 553, 282, 445, 583,
	208, 495, 542, 234, 472, 0, 0, 590, 242, 492,
	210, 539, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 536, 537, 249, 591, 223,
	563, 215, 0, 562, 397, 531, 540, 384, 373, 214,
	538, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 551, 0, 203,
	0, 487, 552, 592, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 526, 545, 557, 568, 574, 575, 577,
	578, 579, 580, 581, 584, 582, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 549, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 374, 474, 546,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 525, 304, 211, 212, 213, 502, 503, 504, 505,
	560, 561, 565, 451, 452, 453, 454, 285, 555, 301,
	457, 456, 323, 324, 369, 438, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 0, 194, 216, 358, 0, 443, 281, 589,
	559, 554, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 533, 535, 548, 566, 572, 469, 293,
	294, 433, 434, 306, 307, 586, 587, 292, 543, 573,
	541, 585, 567, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 558, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 0, 0, 366, 523, 524, 308,
}

var yyPact = [...]int{
	-1000, -1000, 492, -1000, -488, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2303, 2548, -1000, -1000, -1000, -1000, 2587, -1000, 880, 1950,
	-1000, 2309, 430, -1000, 48007, 566, -1000, 45315, 555, 723,
	233, 30509, -1000, 157, -1000, 149, 46661, 159, -1000, -1000,
	-1000, -1000, -379, 19066, 2210, 8, 1, 48007, -1000, -1000,
	-1000, -1000, 2530, 1943, -1000, 354, -1000, -1000, -1000, -1000,
	-1000, -1000, 44642, -1000, 948, -1000, -1000, 2323, 2276, 2591,
	801, 2194, -1000, 2398, 1943, -1000, 19066, 2517, 2364, 18393,
	18393, 489, -1000, -1000, 256, -1000, -1000, 25798, 48007, 33201,
	337, -1000, 2309, -1000, -1000, -1000, 75, -1000, 376, 1863,
	-1000, 1860, -1000, 807, 679, 394, 459, 454, 390, 387,
	380, 373, 348, 338, 331, 330, 401, -1000, 822, 822,
	-206, -213, 3956, 500, 456, 456, 768, 529, 2261, 2259,
	-1000, -1000, 822, 822, 822, 424, 822, 822, 822, 822,
	287, 283, 822, 822, 822, 822, 822, 822, 822, 822,
	822, 822, 822, 822, 822, 822, 822, 822, 822, 369,
	2309, 240, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 48007, 252, 48007, -1000, 701, 48007, -385, 949,
	949, 100, 949, 949, 949, 949, 140, 680, -4, -1000,
	134, 251, 143, 231, 951, 370, -1000, -1000, 212, 951,
	1698, -1000, 805, 224, 103, -1000, 949, 949, -1000, 12311,
	144, 12311, 12311, -1000, 2267, -1000, -1000, -1000, -1000, -1000,
	1241, -1000, -1000, -1000, -1000, -64, 526, -1000, -1000, -1000,
	-1000, 46661, 43969, 249, -1000, -1000, 41, -1000, -1000, 1760,
	1378, 19066, 1405, -1000, 1189, 775, -1000, -1000, -1000, -1000,
	-1000, 607, -1000, 19739, 19739, 19739, 19739, -1000, -1000, 1873,
	43296, 1873, 1873, 19739, 1873, -1000, 19739, 1873, 1873, 1873,
	19066, 1873, 1873, 1873, 1873, -1000, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, -1000, -1000, -1000, -1000,
	1873, 699, 1873, 1873, 1873, 1873, 1873, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1873, 1873, 1873, 1873, 1873,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21758, 1459, 1458, 1457, -1000, 16374,
	1873, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48007, -1000, 1873, 180, 46661, 46661, 384, 2398, 1943,
	-1000, 2530, 2560, 354, -1000, 3536, 2600, 1360, 1303, 1943,
	1840, 48007, -1000, 1879, -1000, -1000, -1000, -1000, 2109, 1349,
	1688, -1000, -1000, -1000, -1000, 2256, 19066, -1000, -1000, 2578,
	-1000, 23105, 690, 2577, 42623, -1000, 489, 489, 1857, 388,
	-14, -1000, -1000, -1000, -1000, 837, 29836, -1000, -1000, -1000,
	-1000, 1732, 48007, -1000, -1000, 5070, 1245, -1000, 1947, -1000,
	1730, -1000, 1907, 19066, 1985, 549, 1245, 535, 533, 532,
	-1000, -95, -1000, -1000, -1000, -1000, -1000, -1000, 822, 822,
	822, -1000, 340, 2516, 430, 4415, -1000, -1000, -1000, 41950,
	1944, 1245, -1000, 1936, -1000, 891, 568, 682, 682, 1245,
	-1000, -1000, 47334, 1245, 888, 887, 1245, 1245, 46661, 46661,
	-1000, 41277, -1000, 40604, 39931, 1199, 46661, 39258, 38585, 37912,
	37239, 36566, -1000, 2271, -1000, 2085, -1000, -1000, -1000, 47334,
	1245, 1245, 47334, 46661, 47334, 48007, 1245, -1000, -1000, 300,
	-1000, -1000, 1195, 1186, 1184, 822, 822, 1077, 1679, 1670,
	1666, 822, 822, 1067, 1661, 31855, 1653, 245, 1065, 1059,
	1058, 1293, 1630, 209, 1612, 1072, 1050, 1057, 46661, 1930,
	48007, -1000, 219, 745, 512, 834, 2309, 2208, 1853, 519,
	540, 1245, 472, 472, 46661, -1000, 14348, -1000, 190, -1000,
	1603, 19066, -1000, 954, 951, 951, -1000, -1000, -1000, -1000,
	-1000, -1000, 949, 48007, 954, -1000, -1000, -1000, 951, 949,
	48007, 949, 949, 949, 949, 951, 951, 951, 949, 48007,
	48007, 48007, 48007, 48007, 48007, 48007, 48007, 48007, 12311, 805,
	949, -387, -1000, 1599, -1000, -1000, 2095, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12311, 12311, -1000, -1000, -1000, -1000, -1000,
	1849, -1000, 145, -37, 156, -1000, 35893, 427, 833, -1000,
	427, -1000, -1000, -1000, 1845, 35220, -1000, -388, -390, -391,
	-394, -1000, -1000, -1000, -396, -409, -1000, -1000, -1000, 19066,
	19066, 19066, 19066, -252, -1000, 883, 19739, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 137, 875, 19739, 19739, 19739, 19739,
	19739, 19739, 19739, 19739, 19739, 19739, 19739, 19739, 19739, 19739,
	19739, -1000, -1000, 27817, 6538, 6538, 775, 775, 775, 775,
	-1000, -174, 1843, 47334, -1000, -1000, -1000, 669, 19066, 19066,
	775, -1000, 1245, 16374, 20412, 18393, 18393, 19066, 842, 1378,
	47334, 19066, -1000, 1303, -1000, -1000, -1000, 969, -1000, 929,
	2292, 2292, 2292, 2292, 19066, 19066, 19066, 19066, 19066, 19066,
	19066, 19066, 19066, 19066, 2292, 46661, 46661, 1469, 19066, 19066,
	19066, 19066, 19066, 19066, 15027, 19066, 19066, 19739, 19066, 19066,
	19066, 1303, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066,
	19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066,
	19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066,
	19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066,
	19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066,
	19066, 1303, 19066, 1389, 19066, 19066, 18393, 13669, 18393, 18393,
	18393, 18393, 18393, -1000, -1000, -1000, -1000, -1000, 19066, 19066,
	19066, 19066, 19066, 19066, 19066, 19066, 1303, 19066, 19066, 19066,
	19066, 19066, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1422, 1425, 1332, 19066, -1000, 1842, -1000, -175,
	25125, 19066, 1578, 2576, 2016, 46661, -1000, -1000, -1000, 2398,
	-1000, 2398, 1422, 2876, 2122, 18393, -1000, -1000, 2876, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1695, -1000, 48007,
	1840, 2357, 46661, 2116, 1576, 571, -1000, 19066, 19066, 1835,
	-1000, 1705, 48007, -1000, -252, -1000, 34547, -1000, -1000, 11632,
	48007, 308, 48007, -1000, 24452, 33874, 242, -1000, -14, 1799,
	-1000, -33, -42, 15700, 751, -1000, -1000, -1000, 3956, 21085,
	1739, 751, 68, -1000, -1000, -1000, 1907, -1000, 1907, 1907,
	1907, 1907, 571, 571, 571, 571, -1000, -1000, -1000, -1000,
	-1000, 1929, 1927, -1000, 1907, 1907, 1907, 1907, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1926, 1926, 1926, 1924, 1924,
	1908, 1908, 441, -1000, 19066, 366, 33201, 2318, 1056, 1629,
	219, 481, 2015, 1245, 1245, 1245, 481, -1000, 1276, 1273,
	1249, -1000, -478, 1834, -1000, -1000, 2506, -1000, -1000, 823,
	917, 916, 752, 46661, 188, 301, -1000, 488, -1000, 33201,
	1245, 886, 682, 1245, -1000, 1245, -1000, -1000, -1000, -1000,
	-1000, 1245, -1000, -1000, 1833, -1000, 1841, 953, 911, 944,
	903, 1833, -1000, -1000, -183, 1833, -1000, 1833, -1000, 1833,
	-1000, 1833, -1000, 1833, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 781, 154, -301, 46661, 188, 506, -1000,
	505, 27817, -1000, -1000, -1000, 27817, 27817, -1000, -1000, -1000,
	-1000, 1567, 1563, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -465, 48007, -1000, 204, 831, 293, 323, 279,
	48007, 404, 2386, 2382, 2376, 2372, 2368, 335, 278, 48007,
	48007, 472, 2064, 48007, 2332, 48007, -1000, -1000, -1000, -1000,
	1550, 1548, -1000, 1378, 48007, -1000, -1000, 949, 949, -1000,
	-1000, 48007, 949, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 949, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48007, -1000, -1000,
	-1000, -1000, -64, 131, -1000, -1000, 46661, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -82, -1000, 155, -39,
	359, -1000, -1000, -1000, -1000, -1000, 2395, -1000, 1378, 869,
	856, -1000, 1873, -1000, -1000, 1005, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 137, 19739, 19739, 19739, 1410, 515, 1454,
	1302, 1149, 1372, 1372, 777, 777, 784, 784, 784, 784,
	784, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1546,
	-1000, 1873, 47334, 1726, 13669, 2420, 1920, 1303, 3998, -1000,
	1611, -1000, 1611, 1633, 846, -1000, 19066, 1303, 3989, -1000,
	-1000, 1303, 1303, 1303, 19066, -1000, -1000, 19066, 19066, 19066,
	19066, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 19066, 1810, 1804, 2575, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2174, 1629, 1629, 1629,
	1629, 1629, 19066, 1793, -1000, -1000, -1000, 1369, 3949, 1207,
	3943, 1629, 1629, -1000, 1629, 3932, 3692, 1303, 1760, 3015,
	3005, 2999, 2978, 2974, 2966, 2960, 2942, 2895, 2873, 2866,
	2835, 2824, 2763, 2742, 2641, 1303, 1803, -1000, 3688, 1629,
	3677, 3667, 3648, 2583, 3615, 3591, 3578, 1629, 1629, 1629,
	2302, 3518, 3447, 3432, 3423, 3392, 3361, 3284, 3280, 3270,
	1629, 1332, 1332, 1332, 1332, 1332, 3259, -254, 1629, 1303,
	-1000, -1000, -1000, -1000, -1000, 3234, 2298, 1303, 1800, 1873,
	666, -1000, -1000, 1611, 1303, 1303, 1611, 1611, 3131, 3106,
	3081, 3076, 3071, 3064, 1629, 1629, -1000, 1629, 3057, 3042,
	2260, 2216, 1303, -1000, 1332, 48007, -1000, -371, -1000, -58,
	710, 1873, -1000, 31855, 1303, -1000, 7007, -1000, 1204, -1000,
	-1000, -1000, -1000, -1000, 29163, 1809, 2876, -1000, -1000, 1873,
	1609, -1000, -1000, 571, 27, 28490, 721, 721, 76, 1378,
	1378, 19066, -1000, -1000, -1000, -1000, -1000, -1000, 616, 2550,
	372, 1873, -1000, 1808, 2295, -1000, -1000, -1000, 2353, 22432,
	-1000, -1000, 1873, 1873, 48007, 1724, 1628, -1000, 612, -1000,
	1295, 1799, -14, -48, -1000, -1000, -1000, -1000, 1378, -1000,
	1240, 311, 3934, -1000, 439, -1000, -1000, -1000, -1000, 2232,
	40, -1000, -1000, -1000, 194, 571, -1000, -1000, -1000, -1000,
	-1000, -1000, 1538, 1538, -1000, -1000, -1000, -1000, -1000, 1044,
	-1000, -1000, -1000, -1000, 1042, -1000, -1000, 1040, -1000, -1000,
	2753, 2005, 366, -1000, -1000, 822, 1513, -1000, -1000, 2247,
	822, 822, 46661, -1000, -1000, 1703, 2318, 204, 48007, 847,
	2059, -1000, 2015, 2015, 2015, 48007, -1000, -1000, -1000, -1000,
	-1000, -1000, -467, 56, 319, -1000, -1000, -1000, 4304, 46661,
	1607, -1000, 183, -1000, 1587, -1000, 46661, -1000, 1586, 1914,
	1245, 1245, -1000, -1000, -1000, 46661, 1873, -1000, -1000, -1000,
	-1000, 502, 2300, 305, -1000, -1000, -274, -1000, -1000, 188,
	183, 47334, 1245, 751, -1000, -1000, -1000, -1000, -1000, -468,
	1584, 513, 195, 274, 48007, 48007, 48007, 48007, 48007, 597,
	-1000, -1000, -15, -1000, -1000, 170, -1000, -1000, -1000, -1000,
	170, -1000, -1000, -1000, -1000, 250, 503, -1000, 48007, 48007,
	677, -1000, -1000, -1000, -1000, -1000, 951, -1000, -1000, 951,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2289, 48007, -44, -430, -1000, -421, 19066, -1000,
	-1000, -1000, -1000, 1362, 499, 1454, 19739, 19739, 19739, -1000,
	-1000, -1000, 1104, 1104, 27817, -1000, 19066, 18393, -1000, -1000,
	19066, 19066, 824, -1000, 19066, 1493, -1000, 19066, -1000, -1000,
	-1000, 1332, 1629, 1629, 1629, 1629, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1832, 19066, 19066, 19066,
	1303, 277, -1000, -1000, -1000, -1000, -1000, 2561, -1000, 19066,
	-1000, 27817, 19066, 19066, 19066, -1000, -1000, -1000, 19066, 19066,
	-1000, -1000, 19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000,
	19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000,
	19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000,
	19066, -1000, 19066, -1000, 19066, 19066, -1000, 19066, 19066, 19066,
	-1000, 19066, 19066, 19066, 19066, -1000, -1000, -1000, -1000, 19066,
	19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, 19066, -1000,
	-1000, -1000, -1000, -1000, -1000, 19066, -1000, 33201, 39, -254,
	1389, 39, 1389, -1000, 18393, 12990, -1000, -1000, -1000, -1000,
	-1000, 19066, 19066, 19066, 19066, 19066, 19066, -1000, -1000, -1000,
	19066, 19066, -1000, 19066, -1000, 19066, -1000, -1000, -1000, -1000,
	-1000, 710, -1000, 682, 682, 682, 46661, -1000, -1000, -1000,
	-1000, 1796, -1000, 2370, -1000, 2148, 2144, 2557, 2550, -1000,
	24452, 2876, -1000, -1000, 46661, -363, -1000, 2204, 2165, 721,
	721, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10953, 2398,
	19066, 2056, 47334, 138, -1000, 23779, 46661, 47334, 24452, 24452,
	24452, 24452, 24452, -1000, 2100, 2099, -1000, 2088, 2082, 2094,
	48007, -1000, 1422, 1582, -1000, 19066, 26471, 1747, 24452, -1000,
	-1000, 24452, 48007, 10274, -1000, -1000, -53, -59, -1000, -1000,
	-1000, -1000, 3956, -1000, -1000, 4137, 2351, 2223, -1000, -1000,
	-1000, -1000, -1000, 1575, -1000, 1572, 1790, 1525, 1521, 154,
	-1000, 1984, 2274, 822, 822, -1000, 1037, -1000, 1245, 1499,
	1497, -1000, -1000, -1000, 501, -1000, 2329, 48007, 2055, 2051,
	2049, -1000, -476, 1021, 1912, 1981, 19066, 1910, 2504, 1772,
	46661, -1000, -1000, 47334, -1000, 211, -1000, 366, 46661, -1000,
	-1000, -1000, 301, 48007, -1000, 7911, -1000, -1000, -1000, 183,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48007, 218, -1000,
	1909, 1219, -1000, -1000, 2010, -1000, -1000, -1000, -1000, 146,
	290, 1494, 167, 1481, 167, -1000, 48007, 674, 2005, 48007,
	-1000, -1000, -1000, 949, 949, -1000, -1000, 2273, -1000, 1245,
	1629, 19739, 19739, -1000, 775, 426, -234, 1907, 1907, -1000,
	1907, 1908, -1000, 1907, 124, 1907, 121, 1907, -1000, -1000,
	1303, 1303, 1332, -1000, 2197, 1738, -1000, 1378, 19066, 3038,
	-1000, -1000, -1000, -1000, -1000, -101, 3034, 3021, 1629, -1000,
	1894, 1891, 19066, 1629, 1303, 2183, 1629, 1629, 1629, 1629,
	2170, 2152, 2135, 2127, 2115, 2108, 2097, 2092, 2087, 2069,
	2011, 1988, 1868, 1861, 1838, 1805, -1000, 1378, 1332, 2982,
	1332, 1629, 1629, 2846, 276, 1629, 1519, 1519, 1519, 1519,
	1519, 1332, 1332, 1332, 1332, 1629, 46661, -1000, -254, -1000,
	-1000, -293, -297, -1000, 1303, -254, 1786, 1303, -1000, 1801,
	1797, 2518, 1734, 1629, 2266, 1629, 1629, 1629, 1728, -1000,
	2388, 2388, 2388, 1507, 1204, 48007, -1000, -1000, -1000, -1000,
	2550, 2543, 1778, -1000, -1000, 27, 381, -1000, 2187, 2165,
	-1000, 2450, 2196, 2439, -1000, -1000, -1000, -1000, -1000, 1378,
	-1000, 2304, 1755, -1000, 829, 1761, -1000, -1000, 17720, 1517,
	2126, 611, 1507, 1795, 2295, 1997, 2047, 2121, -1000, -1000,
	-1000, -1000, 2079, -1000, 2076, -1000, -1000, 1879, -1000, 2201,
	308, 24452, 1780, 1780, -1000, 604, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 936, 5773, 2590, -1000, 1463, -1000, 1236,
	202, 1019, -1000, -1000, 822, 822, -1000, 885, 877, -1000,
	48007, 1889, -1000, 571, 1461, 571, 1010, -1000, -1000, 1007,
	-1000, -1000, -1000, -1000, 1995, 2200, -1000, -1000, -1000, -1000,
	48007, -1000, -1000, 48007, 48007, 48007, 1888, 2438, -1000, 19066,
	1884, 828, 2609, 46661, 46661, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 449, 822, -447, 258,
	246, 822, 822, 822, -477, -1000, -1000, 1480, 1476, -1000,
	-211, -1000, 19066, -1000, -1000, -1000, 1032, 1032, 1459, 1458,
	1457, -1000, 1879, -1000, -1000, -1000, 1526, -1000, -1000, -188,
	46661, 46661, 46661, 46661, -1000, -1000, 977, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 775,
	1303, 280, -190, 1303, -1000, -1000, 571, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19066, -1000, 19066,
	-1000, 1378, 19066, 2398, 1446, 19066, 19066, -1000, 998, 983,
	1629, -1000, -1000, -1000, 19066, -1000, -1000, -1000, -1000, -1000,
	19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000,
	19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000,
	19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000, 19066, -1000,
	19066, -1000, 19066, -1000, -1000, -1000, 19066, 206, 1104, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1303, 306, -1000, -1000, -1000, -1000, 2549, -1000, 1303, 19066,
	-1000, -1000, 19066, -1000, 19066, 19066, -1000, 19066, -1000, 19066,
	-1000, -1000, -1000, -1000, 19066, 1873, 2225, 1873, 1873, 26471,
	-1000, -1000, 2543, 2522, 2422, 2153, 2159, 2159, 2187, -1000,
	2418, 2415, -1000, 1431, 2413, 1428, 863, -1000, 47334, 19066,
	138, -1000, 374, 46661, 138, 46661, -1000, 2520, -1000, -1000,
	19066, 1883, -1000, 19066, -1000, -1000, -1000, -1000, 6538, 2550,
	1780, -1000, -1000, 790, -1000, 19066, -1000, -1000, -1000, 8531,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1426, 1408,
	-1000, -1000, 1880, 19066, -1000, -1000, -1000, 1522, 1508, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1879, -1000, -1000,
	-1000, -1000, 301, -472, 2594, 46661, 982, -1000, 1435, 1772,
	281, 138, 1406, 822, 822, 822, 971, 968, 31855, 1403,
	-1000, 46661, 416, -1000, 301, -1000, -216, -230, 1629, -1000,
	-1000, 2345, -1000, -1000, 12990, -1000, -1000, 1878, 2014, -1000,
	-1000, -1000, -1000, 2110, -177, -200, -1000, -1000, 1629, 1629,
	2179, 1303, -1000, 1629, 1629, 1395, 1338, -1000, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1332, 1715, -1000, 206, 1303,
	2043, -1000, -1000, 6538, -1000, -1000, 2520, 2412, 39, -1000,
	-1000, 189, 39, 1378, 1711, 1629, 1652, 1648, 1629, 1629,
	27144, -1000, 2407, 2400, 32528, 32528, 710, 2522, -263, 19066,
	19066, 2154, 974, -1000, -1000, -1000, -1000, 1390, 1387, -1000,
	1373, -1000, 2589, -1000, 1378, -1000, 138, -1000, 602, 1761,
	-1000, 2398, 1378, 46661, 1378, 26, 2520, -1000, 1629, -1000,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
	1873, 1873, -1000, -1000, 46661, 2441, -1000, -1000, 2341, 1401,
	54, -1000, 1313, 1772, -1000, -1000, 128, -1000, 19066, -1000,
	31855, 1355, 1333, -1000, -1000, -1000, -1000, -477, -1000, -1000,
	-1000, -1000, -1000, -1000, 354, 1770, -1000, 820, 46661, 48007,
	-1000, 2096, -1000, -1000, -1000, 19066, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19066, -1000, 1303, 2037, -1000, -311, -1000, -450, 19066, -254,
	-1000, -1000, -254, -1000, 19066, -1000, -1000, 19066, -1000, 19066,
	-1000, -1000, 1399, -1000, -1000, -1000, -1000, -1000, 1399, 1399,
	-1000, -263, -1000, 1767, -1000, 46661, 1378, 1760, -1000, 973,
	-1000, -1000, -1000, -1000, -1000, 47334, 1761, 46661, -1000, 1394,
	1303, 1873, 2398, -1000, 1366, -1000, 354, -1000, 1877, 1981,
	-1000, -1000, -1000, 17047, -1000, -1000, -1000, -1000, -1000, 175,
	-186, 12990, 9595, 1337, -1000, -185, 1629, 1332, -1000, -411,
	-1000, -1000, -1000, -1000, 125, -1000, -1000, 1760, -1000, -1000,
	1589, 1566, 1562, 31182, -1000, -1000, -1000, -1000, -263, -1000,
	-1000, 2334, -1000, -1000, 1407, -1000, -1000, 26471, 45988, -1000,
	-172, 266, -186, 19066, 1875, 1303, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -20, -1000, -1000, -1000, -1000, -1000,
	2010, -191, -1000, -1000, -1000, 116, -434, -280, -281, -1000,
	-1000, 19739, -1000, 19066, -1000, 19066, -1000, 19066, -1000, -1000,
	-1000, 46661, 1873, -1000, 1312, -1000, 4890, -308, 2036, -1000,
	-108, -1000, -1000, -1000, 926, 1294, -1000, -1000, -1000, -1000,
	-1000, -1000, 2432, 46661, -1000, 428, -1000, -1000, -188, -203,
	852, -1000, -1000, -1000, -1000, -1000, 1503, 1364, 1629, -1000,
	46661, -1000, 45988, -302, 751, 6538, -1000, 2034, 2026, 2571,
	-1000, -1000, -1000, -1000, -1000, -1000, -484, 1307, 207, -1000,
	-1000, 116, -1000, 19066, -1000, 19066, -1000, 1303, -1000, -1000,
	2307, 26, -1000, 2582, -1000, 2572, 647, 647, -1000, 967,
	-484, -1000, -1000, 1629, 1629, -1000, -310, -1000, -1000, -1000,
	-1000, -1000, 422, 1015, -1000, -1000, -1000, -1000, -1000, 6538,
	-1000, -1000, -1000, 239, 239, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3225, 3224, 30, 1, 40, 39, 3221, 47, 108,
	180, 54, 188, 97, 3216, 174, 3214, 3211, 3208, 3204,
	3201, 3200, 2623, 2617, 2609, 3197, 3195, 3192, 3191, 3190,
	3189, 3188, 3186, 3185, 3182, 172, 165, 179, 3178, 3172,
	3171, 115, 261, 89, 91, 263, 3170, 3168, 98, 3167,
	3166, 3165, 187, 186, 181, 868, 3161, 185, 113, 53,
	3158, 3155, 3151, 3150, 3149, 3148, 3142, 3137, 3136, 3134,
	3133, 3132, 3129, 3128, 3127, 3125, 3112, 3111, 342, 3106,
	3100, 23, 3098, 82, 3097, 3095, 3092, 3091, 3090, 12,
	3089, 3086, 16, 43, 3082, 3078, 55, 3077, 3074, 3072,
	3069, 3065, 20, 3064, 24, 3052, 42, 3050, 3047, 125,
	3045, 3043, 3040, 31, 3039, 3033, 3032, 3029, 3027, 3026,
	3022, 158, 3021, 3020, 3018, 167, 182, 3010, 3006, 169,
	110, 122, 3004, 3002, 105, 284, 2997, 120, 2989, 2973,
	2967, 149, 2958, 1012, 2957, 2956, 75, 76, 2953, 28,
	2951, 2950, 11, 86, 73, 9, 8, 10, 2949, 2947,
	69, 132, 2943, 130, 2939, 2938, 106, 68, 2933, 103,
	100, 2932, 2931, 17, 6, 2930, 2, 7, 4, 71,
	2929, 2926, 111, 2925, 2921, 2920, 101, 2918, 2917, 3673,
	2916, 93, 135, 102, 84, 2914, 52, 58, 2911, 2910,
	2909, 2908, 2907, 46, 2906, 2903, 2898, 141, 173, 164,
	2897, 41, 81, 62, 134, 2896, 72, 114, 184, 168,
	2891, 2888, 144, 139, 2887, 2886, 64, 45, 51, 2885,
	96, 128, 119, 32, 94, 129, 2882, 2880, 66, 79,
	2878, 2876, 2875, 2873, 170, 2871, 2866, 78, 2864, 63,
	2862, 160, 2860, 21, 60, 2859, 44, 162, 2857, 80,
	2853, 2845, 70, 99, 77, 34, 2836, 157, 166, 126,
	196, 2834, 2833, 56, 2832, 2815, 2807, 322, 272, 2781,
	2778, 289, 178, 161, 148, 90, 2777, 282, 2774, 2770,
	147, 3325, 5194, 2768, 49, 159, 2764, 2760, 6012, 140,
	59, 27, 2759, 198, 2758, 2755, 2753, 2752, 190, 176,
	123, 163, 74, 2749, 2747, 2745, 19, 2744, 2739, 2738,
	2737, 2734, 2732, 107, 38, 37, 36, 189, 67, 14,
	104, 153, 154, 85, 2731, 2727, 2726, 121, 92, 2723,
	156, 155, 124, 313, 2715, 177, 236, 112, 2714, 676,
	35, 2713, 2712, 2708, 2706, 95, 2699, 2695, 2694, 2692,
	150, 142, 118, 87, 2691, 88, 117, 145, 143, 48,
	2688, 61, 2686, 2678, 33, 254, 29, 2676, 18, 109,
	216, 2673, 4714, 245, 2668, 22, 278, 151, 2667, 2664,
	5, 13, 15, 2662, 2658, 2655, 2652, 137, 2642, 2634,
	2633, 2631, 26, 65, 25, 3, 116, 83, 2625, 2624,
	146, 2616, 2615, 457, 0, 127, 2605, 192,
}

//line sql.y:8231
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	259, 382, 383, 383, 257, 257, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 107, 107, 23, 24,
	24, 24, 24, 415, 415, 184, 184, 182, 182, 183,
	183, 262, 262, 25, 266, 266, 268, 268, 268, 268,
	258, 258, 258, 26, 26, 267, 267, 269, 269, 269,
	272, 272, 272, 272, 311, 311, 311, 27, 27, 27,
	27, 27, 127, 127, 385, 385, 384, 378, 378, 377,
	377, 376, 381, 381, 380, 380, 379, 39, 40, 49,
	49, 49, 49, 50, 51, 386, 386, 351, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 353, 353, 339, 339, 352, 352,
	352, 352, 352, 352, 352, 338, 338, 138, 138, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 401, 401, 401, 400,
	400, 237, 237, 237, 237, 237, 237, 237, 237, 148,
	148, 160, 160, 160, 160, 160, 146, 146, 147, 145,
	145, 145, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 159, 159, 155, 155, 155, 156, 156, 156, 157,
	157, 402, 402, 402, 402, 316, 316, 316, 316, 319,
	319, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	318, 318, 318, 318, 318, 318, 318, 320, 320, 320,
	320, 320, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 322, 322,
	322, 322, 322, 322, 322, 322, 337, 337, 323, 323,
	331, 331, 332, 332, 333, 333, 333, 334, 334, 334,
	335, 335, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 330, 330, 329, 329, 329, 340, 365, 365, 364,
	364, 362, 362, 362, 362, 362, 362, 362, 362, 349,
	349, 359, 359, 359, 359, 359, 348, 348, 344, 344,
	344, 345, 345, 346, 346, 343, 343, 347, 347, 361,
	361, 360, 360, 341, 341, 342, 342, 367, 403, 403,
	403, 403, 403, 404, 404, 368, 393, 395, 395, 395,
	394, 394, 391, 392, 390, 390, 390, 390, 390, 83,
	83, 83, 285, 285, 286, 286, 357, 357, 356, 356,
	356, 358, 358, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 280, 280, 280, 389, 389, 389,
	389, 389, 389, 388, 388, 388, 354, 354, 354, 387,
	387, 58, 58, 217, 217, 406, 406, 407, 407, 407,
	46, 46, 46, 46, 46, 46, 45, 45, 45, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	47, 47, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	109, 109, 110, 110, 110, 110, 112, 112, 112, 370,
	370, 59, 59, 3, 3, 172, 174, 175, 175, 173,
	173, 173, 173, 173, 173, 61, 61, 60, 60, 177,
	176, 178, 178, 178, 1, 1, 2, 2, 4, 4,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 336, 336, 336, 369, 369, 371, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 115, 114,
	114, 113, 116, 116, 116, 116, 116, 116, 116, 116,
	373, 373, 373, 62, 62, 374, 324, 325, 326, 5,
	6, 350, 372, 123, 123, 29, 38, 38, 30, 30,
	30, 30, 31, 31, 63, 66, 66, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 279,
	279, 288, 288, 278, 278, 303, 303, 303, 281, 281,
	281, 282, 282, 399, 399, 399, 275, 275, 65, 65,
	65, 304, 304, 304, 304, 68, 68, 408, 408, 409,
	409, 410, 410, 410, 69, 70, 70, 306, 306, 307,
	307, 71, 72, 84, 84, 84, 84, 84, 84, 84,
	85, 85, 85, 85, 108, 108, 108, 15, 15, 15,
	15, 80, 80, 80, 14, 14, 17, 67, 67, 74,
	396, 396, 397, 398, 398, 398, 398, 75, 77, 32,
	32, 32, 32, 32, 32, 133, 133, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 128,
	128, 128, 122, 122, 416, 78, 79, 79, 126, 126,
	126, 119, 119, 119, 125, 125, 125, 16, 16, 18,
	261, 261, 19, 19, 130, 130, 132, 132, 132, 132,
	132, 134, 134, 134, 134, 134, 134, 134, 129, 129,
	131, 131, 131, 131, 296, 296, 296, 295, 295, 166,
	166, 168, 167, 167, 169, 169, 170, 170, 170, 170,
	215, 215, 192, 192, 254, 254, 255, 255, 253, 253,
	260, 260, 256, 256, 256, 256, 263, 263, 171, 171,
	171, 171, 179, 179, 180, 180, 181, 181, 305, 305,
	301, 301, 301, 300, 300, 185, 185, 185, 187, 186,
	186, 186, 186, 188, 188, 190, 190, 189, 189, 191,
	196, 196, 195, 195, 193, 193, 193, 193, 194, 194,
	194, 194, 197, 197, 143, 143, 143, 143, 143, 143,
	143, 158, 158, 158, 158, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 244, 244, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 152, 220, 220, 219,
	219, 86, 86, 86, 87, 87, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 144, 144, 91, 91,
	90, 90, 210, 210, 293, 293, 92, 93, 93, 96,
	96, 95, 94, 94, 100, 100, 97, 97, 99, 99,
	98, 101, 101, 102, 103, 103, 276, 276, 198, 198,
	206, 206, 206, 206, 199, 199, 199, 199, 199, 199,
	199, 207, 207, 207, 214, 208, 208, 204, 204, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 163,
	163, 163, 163, 225, 225, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	151, 151, 164, 164, 164, 164, 165, 165, 165, 165,
	165, 165, 165, 313, 313, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 417, 417, 327, 327,
	327, 327, 205, 205, 205, 205, 205, 124, 124, 124,
	124, 124, 310, 310, 310, 314, 314, 314, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 315, 315, 223, 223, 120, 120, 221,
	221, 222, 224, 224, 216, 216, 216, 216, 218, 218,
	201, 201, 201, 226, 226, 227, 227, 104, 105, 105,
	106, 106, 228, 228, 230, 229, 229, 231, 232, 232,
	232, 233, 233, 234, 234, 234, 48, 48, 48, 48,
	48, 43, 43, 43, 43, 44, 44, 44, 44, 135,
	135, 135, 135, 137, 137, 136, 136, 81, 81, 82,
	82, 82, 141, 141, 142, 142, 142, 139, 139, 140,
	140, 251, 251, 235, 235, 235, 242, 242, 242, 238,
	238, 240, 240, 240, 241, 241, 241, 239, 248, 248,
	250, 250, 249, 249, 245, 245, 246, 246, 247, 247,
	247, 243, 243, 200, 200, 200, 200, 200, 252, 252,
	252, 252, 264, 264, 211, 211, 213, 213, 212, 212,
	162, 265, 265, 273, 270, 270, 271, 271, 297, 297,
	297, 274, 274, 287, 287, 283, 283, 284, 284, 277,
	277, 289, 289, 289, 76, 209, 209, 366, 366, 363,
	292, 292, 294, 294, 298, 298, 302, 302, 299, 299,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 413, 414, 308,
	309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 1, 3, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	7, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	3, 3, 0, 2, 2, 2, 2, 2, 2, 2,
	4, 4, 3, 0, 1, 4, 3, 4, 4, 3,
	3, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 5, 5, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 2, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	1, 2, 3, 7, 0, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 1, 6, 3, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	4, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	8, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 4, 4, 6, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 4,
	1, 1, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -78, -416, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -107, -34, 33, -39, -49,
	225, -50, -40, 226, -51, 228, 227, 265, 229, 377,
	258, 75, 313, 314, 316, 317, 318, 319, -108, 635,
	263, 264, 231, 37, 46, 34, 35, 38, 235, 271,
	272, 234, -10, -35, 9, -413, 12, 451, 260, 259,
	29, -12, 529, 87, -79, -412, 683, -251, -235, 23,
	34, 30, -234, -230, -126, -235, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -351, -353, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-375, -45, -42, 230, 227, 275, 123, 124, 265, 266,
	267, 229, 249, 264, 268, 263, 284, -41, 82, 34,
	529, 532, -358, 226, 232, 233, 228, 452, 126, 125,
	76, -355, 372, 562, 653, -57, 655, 101, 104, 654,
	45, 239, 656, 657, 658, 569, 659, 248, 660, 661,
	662, 663, 669, 610, 670, 671, 672, 127, 8, -78,
	-302, -298, 91, -291, 526, 251, 560, 561, 300, 82,
	42, 535, 369, 372, 562, 481, 653, 378, 313, 329,
	323, 486, 487, 488, 352, 344, 527, 563, 536, 303,
	252, 288, 647, 342, 135, 655, 307, 564, 266, 379,
	380, 565, 381, 101, 316, 418, 668, 306, 566, 666,
	104, 654, 321, 80, 480, 52, 650, 45, 261, 340,
	234, 336, 656, 289, 567, 538, 282, 126, 123, 675,
	37, 332, 51, 31, 665, 125, 50, 657, 150, 568,
	658, 569, 383, 359, 641, 49, 384, 267, 570, 85,
	272, 531, 310, 649, 385, 500, 333, 386, 299, 664,
	231, 571, 630, 622, 623, 387, 388, 642, 364, 360,
	365, 502, 572, 410, 485, 389, 626, 627, 682, 53,
	573, 574, 643, 124, 575, 79, 659, 81, 327, 328,
	576, 297, 250, 505, 506, 412, 356, 463, 470, 471,
	111, 112, 466, 113, 472, 114, 473, 474, 475, 464,
	115, 108, 465, 476, 477, 357, 358, 116, 478, 110,
	109, 467, 469, 117, 479, 248, 36, 390, 528, 301,
	59, 305, 276, 413, 47, 362, 679, 46, 637, 507,
	577, 640, 355, 351, 460, 54, 578, 579, 580, 581,
	482, 660, 354, 326, 350, 674, 4, 294, 483, 661,
	63, 233, 367, 366, 368, 283, 409, 347, 582, 583,
	584, 255, 83, 585, 337, 22, 586, 587, 391, 290,
	588, 57, 589, 590, 416, 264, 591, 55, 662, 40,
	592, 269, 676, 663, 593, 594, 595, 636, 596, 271,
	597, 393, 598, 624, 625, 392, 361, 363, 508, 278,
	394, 377, 236, 530, 599, 311, 331, 268, 667, 600,
	256, 496, 497, 498, 499, 648, 504, 503, 270, 275,
	263, 417, 257, 601, 602, 603, 604, 605, 304, 621,
	606, 607, 317, 669, 461, 44, 608, 609, 610, 611,
	612, 298, 293, 411, 420, 62, 84, 374, 613, 614,
	646, 325, 322, 291, 615, 314, 56, 670, 671, 672,
	285, 673, 489, 490, 491, 492, 10, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 680, 681, 484, 396, 127, 295, 296,
	48, 348, 277, 616, 308, 617, 338, 339, 353, 324,
	349, 633, 315, 631, 279, 397, 462, 265, 618, 419,
	292, 370, 375, 309, 534, 501, 284, 398, 645, 533,
	493, 494, 346, 343, 286, 495, 619, 635, 399, 240,
	280, 281, 620, 632, 400, 401, 302, 402, 403, 404,
	405, 406, 408, 312, 407, 634, 628, 629, 287, 532,
	320, 341, 376, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 459, 238, -78, 238, -189, -298, 238, 177, -270,
	380, -288, 382, 395, 390, 400, 388, -279, 391, 393,
	278, -399, 410, 238, 397, 225, 383, 392, 401, 402,
	302, 408, 403, 312, 407, 287, 404, 405, 406, -382,
	177, 658, 673, 135, 345, 387, 385, 411, 637, 91,
	-304, 91, 92, 93, -291, 315, -306, 320, -292, -382,
	-291, 318, -78, -78, -308, -308, -128, 637, 639, -208,
	-143, 143, -158, -161, -149, -153, -202, -203, -204, -205,
	-159, -218, -257, 166, 167, 174, 144, -214, -162, 27,
	525, 453, 452, 177, 32, -152, 220, 69, 70, 455,
	146, 58, 12, 428, 429, -160, 423, 430, 425, 480,
	482, 483, 484, 481, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 485, 457, 458, 118, 459, 108,
	110, 109, 460, 461, 462, 342, 507, 508, 502, 505,
	506, 504, 503, 357, 358, 463, 509, 513, 510, 511,
	512, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 464, 465, 111, 112, 113, 114, 115, 116,
	117, 466, 469, 467, 468, 470, 471, 472, 477, 478,
	473, 474, 475, 476, 479, 368, 366, 367, 363, 362,
	361, -88, -100, 551, 550, -101, -150, -151, -164, -165,
	-292, -298, 243, 422, 237, 172, 451, -154, -147, -216,
	107, 92, 93, -8, -212, 421, 426, 427, 431, 424,
	537, 539, 554, 555, 557, 542, 547, 546, 549, 496,
	497, 498, 499, 500, 501, 622, 623, 624, 625, 626,
	627, 628, 629, -382, -291, 91, -156, -155, -198, 94,
	99, 102, 103, 105, -405, 261, 338, 339, 119, -413,
	651, 90, 95, 96, 97, 98, 120, 121, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	45, 396, 396, -189, -78, -78, -78, -78, -228, -126,
	-230, -10, -8, -413, 9, -78, -8, -9, -13, -35,
	-37, 556, -36, -298, 100, -235, -251, 13, 162, 43,
	51, -233, -234, -12, -8, -143, 20, 24, 25, -131,
	168, -143, -298, -131, -277, 242, -78, -78, -266, -311,
	315, -268, 411, 637, 410, -258, -271, 91, -257, -270,
	409, -352, 159, -338, -342, -292, 253, -368, 249, -189,
	-361, -360, -292, -413, -127, -287, 239, 247, 246, 136,
	-386, 139, 295, 422, 237, -52, -53, -54, -270, 176,
	657, -109, 270, 274, 88, 88, -342, -341, -340, -387,
	274, 253, -367, -359, 245, 254, -348, 246, 247, -343,
	239, 137, -387, -343, 244, 254, 249, 253, 274, 274,
	127, 274, 127, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 269, -349, 151, -349, 533, 533, -355, -387,
	249, 239, -387, -387, 245, -289, -343, 241, 26, 241,
	36, 36, -349, -349, -349, -270, 176, -349, -349, -349,
	-349, 282, 282, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	238, -386, -135, 407, 302, 82, -55, 284, -38, -189,
	-287, 239, 240, -386, 271, -189, 221, -189, 640, -281,
	159, 16, -281, -278, 396, 394, 381, 386, -281, -281,
	-281, -281, 285, 379, -344, 239, 36, 250, 396, 285,
	379, 285, 286, 285, 286, 389, 399, 285, -303, 15,
	162, 422, 384, 388, 278, 238, 279, 240, 398, 286,
	-303, 90, -282, 159, 285, 396, 281, -281, -281, -309,
	-413, -294, -292, -290, 230, 24, 142, 26, 28, 145,
	177, 130, 20, 146, 38, 232, 345, 249, 176, 245,
	452, 225, 73, 537, 423, 425, 421, 428, 454, 455,
	422, 382, 32, 14, 539, 29, 259, 25, 39, 170,
	227, 149, 540, 262, 27, 260, 118, 121, 542, 23,
	76, 254, 15, 247, 41, 17, 543, 544, 18, 243,
	242, 162, 239, 71, 12, 220, 30, 158, 67, 545,
	137, 546, 547, 548, 549, 131, 69, 159, 21, 677,
	426, 427, 34, 638, 525, 273, 172, 74, 60, 639,
	143, 424, 550, 551, 119, 552, 122, 77, 644, 139,
	19, 72, 43, 553, 274, 554, 244, 678, 555, 414,
	556, 160, 228, 451, 70, 161, 651, 557, 652, 237,
	395, 9, 456, 33, 258, 246, 129, 68, 558, 238,
	148, 457, 458, 241, 132, 120, 8, 136, 35, 13,
	75, 78, 429, 430, 431, 58, 128, 529, 147, 16,
	559, 415, 141, -382, 640, -309, -309, 33, 92, -408,
	-409, -410, 529, 414, 241, -292, -189, -84, 630, 229,
	-85, 636, 24, 236, -133, 396, -121, 177, 658, 641,
	642, 643, 640, 393, 648, 646, 644, 285, 645, 88,
	139, 141, 142, 4, -143, 158, -199, 151, 152, 153,
	154, 155, 156, 157, 162, 143, 145, 159, -244, 140,
	163, 164, 165, 166, 167, 168, 169, 171, 170, 172,
	173, 160, 161, 176, 223, 224, -153, -153, -153, -153,
	-214, -220, -219, -413, -216, -382, -291, -298, -413, -413,
	-153, -276, -413, -413, -149, -413, -413, -413, -223, -143,
	-413, -413, -417, -413, -417, -417, -327, -413, -327, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, 221, -413, -413,
	-413, -413, -413, -327, -327, -327, -327, -327, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, 103, 99, 102, 94, -218, 105, 90, 90,
	90, 90, -8, -9, -208, -413, -308, -396, -397, -192,
	-189, -413, 302, -292, -292, 271, -233, -12, -8, -228,
	-234, -230, -8, -78, -119, -132, 64, 65, -134, 25,
	39, 68, 66, 24, -414, 89, -414, -251, -414, 88,
	-37, -254, 87, 62, 44, 90, 90, 88, 22, -229,
	-231, -143, 15, -296, 4, -295, 26, -292, 90, 221,
	15, -190, 30, -189, -277, -277, 88, 91, 315, -267,
	-269, 412, 414, 151, -297, -292, 90, 32, 89, 88,
	-189, -316, -319, -321, -320, -322, -317, -318, 342, 343,
	177, 346, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 359, 33, 261, 338, 339, 340, 341, 360, 361,
	362, 363, 365, 366, 367, 368, 323, 344, 527, 324,
	325, 326, 327, 328, 329, 331, 332, 335, 333, 334,
	336, 337, -383, -382, 87, 89, 88, -323, 87, -143,
	-135, 238, -382, 239, 239, 239, -78, 451, -349, -349,
	-349, 269, 20, -45, -42, -375, 19, -41, -42, 230,
	123, 124, 227, 87, -338, 87, -347, -383, -382, 87,
	137, 244, 136, -346, -343, -346, -347, -382, -216, -382,
	137, 137, -382, -382, -263, -292, -263, -263, 24, -263,
	24, -263, 24, 96, -292, -263, 24, -263, 24, -263,
	24, -263, 24, -263, 24, 32, 79, 80, 81, 32,
	83, 84, 85, -216, -382, -382, -216, -338, -216, -189,
	-382, -270, 96, 96, 96, -349, -349, 96, 90, 90,
	90, -349, -349, 96, 90, -300, -298, 90, 90, -388,
	255, 299, 301, 96, 96, 96, 96, 32, 90, -389,
	32, 665, 664, 666, 667, 668, 90, 96, 32, 96,
	32, 96, -292, 87, -189, -141, 289, 225, 227, 230,
	77, 90, 305, 306, 303, 308, 309, 151, 45, 88,
	241, 238, -382, -283, 243, -283, -292, -299, -298, -290,
	241, 378, 90, -143, -345, 15, 162, -303, -303, -281,
	-189, -345, -303, -281, -189, -281, -281, -281, -281, -303,
	-303, -303, -281, -298, -298, -189, -189, -189, -189, -189,
	-189, -189, -309, -282, -281, 640, 90, -275, 15, 77,
	-309, -309, 88, 321, 415, 416, -307, 318, -80, -292,
	90, -15, -11, -23, -22, -24, 151, -15, 88, 529,
	-182, -189, 640, 640, 640, 640, 640, 640, -143, -143,
	-143, -143, 552, -206, 119, 143, 120, 121, -161, -207,
	-212, -214, 106, 162, 145, 159, -244, -149, -153, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -149, -310, -292, 90, 177, -157, -156, 105, -405,
	-157, 526, 88, -219, 221, -143, -143, -382, -143, -292,
	-129, -131, -129, -143, -221, -222, 147, -216, -143, -414,
	-414, 96, 105, 168, -125, 25, 39, -125, -125, -125,
	-125, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -125, -292, -292, -118, -117, 433, 434, 435, 436,
	438, 439, 440, 443, 444, 448, 449, 432, 450, 437,
	442, 445, 446, 447, 441, 341, -143, -143, -143, -143,
	-143, -143, -86, -143, 130, 131, 132, -208, -143, -149,
	-143, -143, -143, -414, -143, -143, -143, -209, -208, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -381, -380, -379, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -208, -208, -208, -208, -208, -143, -414, -143, -163,
	-147, 96, -259, 105, 92, -143, -143, -130, -129, -294,
	-299, -290, -291, -129, -130, -130, -129, -129, -143, -143,
	-143, -143, -143, -143, -143, -143, -414, -143, -143, -143,
	-143, -143, -251, -414, -208, 88, -398, 414, 415, 638,
	-301, 274, -300, 26, -209, 90, 15, -261, 78, -292,
	-233, -233, 64, 65, 60, -129, -134, -414, -36, 26,
	-253, -292, 63, 90, -328, -270, 369, 370, 177, -143,
	-143, 88, -232, 28, 29, -189, -295, 168, -299, -189,
	-262, 274, -189, -167, -169, -170, -171, -192, -215, -413,
	-172, -8, 548, 545, 15, -182, -183, -191, -298, -268,
	-311, -267, 88, 413, 415, 416, 77, 122, -143, -329,
	176, -357, -356, -355, -338, -340, -341, -342, 89, -329,
	-334, 375, 374, -323, -323, -323, -323, -323, -328, -328,
	-328, -328, 87, 87, -323, -323, -323, -323, -331, 87,
	-331, -331, -332, -331, 87, -332, -333, 87, -333, -368,
	-143, -365, -364, -362, -363, 248, 101, 620, 576, 529,
	569, 610, 78, -360, -232, 96, -414, -141, -284, 243,
	-366, -363, -382, -382, -382, -284, 91, 90, 91, 90,
	91, 90, -110, -59, -1, 677, 678, 679, 88, 20,
	-339, -338, -58, 299, -371, -372, 274, -367, -361, -347,
	137, -346, -347, -347, -382, 88, 30, 127, 127, 127,
	127, 529, 227, 33, -285, 568, 143, 620, 576, -338,
	-58, 241, 241, -310, -310, -310, 90, 90, -280, 673,
	-182, -137, 291, 151, 280, 280, 238, 238, 293, -189,
	304, 307, 305, 306, 303, 308, 309, 24, 24, 24,
	24, 24, 292, 294, 296, 282, -189, -189, -283, 77,
	-184, -189, 27, -298, 90, 90, -189, -281, -281, -189,
	-281, -281, -189, -410, 322, -292, 356, 631, 632, 634,
	633, -121, 414, 88, 529, 23, -122, 23, -413, 119,
	120, 121, -207, -149, -153, -149, 142, 262, -413, -216,
	-414, -294, 26, 88, 78, -414, 88, 88, -414, -414,
	88, 15, -224, -222, 149, -143, -414, 88, -414, -414,
	-414, -208, -143, -143, -143, -143, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -208, 88, 88, 15,
	-314, 26, -414, -414, -414, -414, -414, -223, -414, 15,
	-414, 78, 88, 162, 88, -414, -414, -414, 88, 88,
	-414, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, 88, -414, 88, 88, 88,
	-414, 88, 88, 88, 88, -414, -414, -414, -414, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, -414,
	-414, -414, -414, -414, -414, 88, -93, 553, -414, -414,
	88, -414, 88, -414, -413, 221, -414, -414, -414, -414,
	-414, 88, 88, 88, 88, 88, 88, -414, -414, -414,
	88, 88, -414, 88, -414, 88, -414, -397, 637, 415,
	-196, -195, -193, 75, 242, 76, -413, -300, -414, -157,
	-259, -260, -259, -201, -292, 96, 105, -235, -166, -168,
	15, -134, -214, 89, 88, -328, -239, -245, -278, -292,
	90, 177, -330, 177, -330, 369, 370, -231, 221, -197,
	16, -200, 33, 58, -11, -413, -413, 33, 88, -185,
	-187, -186, -188, 67, 71, 73, 68, 69, 70, 74,
	-305, 26, -8, -167, -8, -413, -189, -182, -415, 15,
	78, -415, 88, 221, -269, -272, 417, 414, 420, -382,
	90, -109, 88, -355, -342, -236, -138, 41, -335, 376,
	-328, 536, -328, -337, 90, -337, 96, 96, 96, 89,
	-48, -43, -44, 34, 82, -362, -349, 90, 40, -349,
	-349, -292, 89, -232, -137, -189, 143, 77, -366, -366,
	-366, -298, -2, 676, 682, 137, 87, 381, 19, -253,
	88, 89, -217, 300, 89, -111, -292, 89, 87, -347,
	-347, -292, -413, 238, 32, 32, 620, 576, 568, -58,
	-217, -216, -382, -329, 675, 674, 89, 240, 298, -142,
	428, -139, 90, 91, -189, -189, -189, -189, -189, 230,
	227, 404, -406, 310, -406, 283, 241, -182, -189, 88,
	-83, 257, 252, -303, -303, 34, -189, 414, 649, 647,
	-143, 142, 262, -161, -153, -149, -312, 177, 342, 261,
	340, 336, 356, 347, 374, 338, 375, 333, 332, 331,
	-312, -310, -208, -131, -143, -143, 150, -143, 148, -143,
	-414, -414, -414, -414, -414, -228, -143, -143, -143, -414,
	177, 342, 15, -143, -310, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -379, -143, -208, -143,
	-208, -143, -143, -143, -143, -143, -380, -380, -380, -380,
	-380, -208, -208, -208, -208, -143, -413, -292, -96, -95,
	-94, 603, 242, -93, -163, -96, -163, -130, -294, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -193,
	-343, -343, -343, -263, 88, -274, 23, 15, 58, 58,
	-166, -197, -167, -134, -292, -242, 630, -248, 47, -246,
	-247, 48, -243, 49, 57, -330, -330, 168, -233, -143,
	-264, 77, -265, -273, -216, -211, -213, -212, -413, -252,
	-414, -292, -263, -265, -169, -170, -170, -169, -170, 67,
	67, 67, 72, 67, 72, 67, -186, -298, -414, -143,
	-301, 78, -167, -167, -191, -298, 168, 414, 418, 419,
	-355, -404, 119, 143, 32, 77, 372, 101, -402, 176,
	565, 615, 620, 576, 569, 610, -403, 244, 136, 137,
	256, 26, 42, 89, 88, 89, 88, 89, 89, 88,
	-286, -285, -44, -43, -349, -349, 96, -382, 90, 90,
	240, 27, -189, 77, 77, 77, -112, 680, 96, 87,
	-3, 82, -143, 87, 20, -338, -216, -373, -324, -374,
	-325, -326, -5, -6, -350, -115, 58, 101, -62, 45,
	239, 660, 661, 127, -413, 673, -365, -253, -369, -371,
	-189, -146, -413, -145, -147, -154, 166, 167, 261, 338,
	339, -217, -189, -136, 289, 297, 87, -140, 92, -385,
	78, 280, 372, 280, 90, -407, 311, 90, -407, -189,
	-83, -48, -189, -281, -281, 34, -382, -414, -161, -153,
	-124, 162, 529, -315, 535, -323, -323, -323, -333, -323,
	328, -323, 328, -323, -414, -414, -414, 88, -414, 23,
	-414, -143, 88, -120, 456, 88, 88, -414, 87, 87,
	-143, -414, -414, -414, 88, -414, -414, -414, -414, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, -414, -414, 88, -313, 621, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-92, -293, -292, -93, 585, 585, -414, -93, -225, 88,
	-414, -414, 88, -414, 88, 88, -414, 88, -414, 88,
	-414, -414, -414, -414, 88, -194, 23, -194, -194, -414,
	-259, -189, -197, -226, 17, -239, 52, 348, -250, -249,
	56, 48, -247, 20, 50, 20, 31, -264, 88, 151,
	88, -414, -414, 88, 58, 221, -414, -197, -180, -179,
	77, 78, -181, 77, -179, 67, 67, -254, 88, -262,
	-167, -197, -197, 221, 119, -413, -148, -160, -146, 13,
	90, 90, -382, -401, 664, 665, 32, 96, -349, -349,
	137, 137, -189, 87, -328, 90, -328, 96, 96, 32,
	83, 84, 85, 32, 79, 80, 81, -189, -189, -189,
	-189, -370, 87, 20, -143, 87, 151, 89, -253, -253,
	276, 162, -349, 658, 282, 282, -349, -349, -349, -114,
	-113, 680, 89, -414, 88, -336, 529, 532, -143, -155,
	-155, -254, 89, -378, 529, -384, -292, -292, -292, -292,
	96, 98, -414, 527, 74, 530, -414, -328, -143, -143,
	-143, -233, 90, -143, -143, 96, 96, -414, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -208, -143, -414, -177, -176,
	-178, 641, 119, 32, -312, -414, -210, 274, -99, -98,
	-97, 15, -414, -143, -143, -143, -143, -143, -143, -143,
	-413, 67, 19, 17, -413, -413, -301, -226, -227, 18,
	20, -240, 54, -238, 53, -238, -249, 20, 20, 90,
	20, 90, 137, -273, -143, -213, 58, -11, -292, -211,
	-292, -228, -143, 87, -143, -157, -197, -197, -143, -203,
	480, 482, 483, 484, 481, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 485, 459, 108, 110, 109,
	460, 461, 462, 342, 507, 508, 502, 505, 506, 504,
	503, 357, 358, 463, 509, 513, 510, 511, 512, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	464, 465, 111, 112, 113, 114, 115, 116, 117, 466,
	469, 467, 470, 471, 472, 477, 478, 473, 474, 475,
	476, 479, 368, 366, 367, 363, 362, 361, 496, 497,
	498, 499, 500, 501, 622, 623, 624, 625, 626, 627,
	628, 629, 90, 90, 87, -143, 89, 89, -254, -369,
	-59, 89, -255, -253, 96, 89, 277, -212, -413, 90,
	-349, -349, -349, 96, 96, -300, -414, 88, -292, -403,
	-371, 533, 533, -414, 26, -377, -376, -294, 87, 78,
	63, 528, 531, -414, -414, 88, -414, -414, -414, 89,
	89, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	88, -414, -176, -178, -414, 77, -157, -228, 20, -96,
	299, 301, -96, -414, 88, -414, -414, 88, -414, 88,
	-414, -414, -256, -414, -292, 244, 20, 20, -256, -256,
	-196, -227, -106, -105, -104, 559, -143, -208, -241, 55,
	77, 122, 90, 90, 90, 13, -211, 221, -233, -253,
	-174, 381, -228, -414, -253, 89, 26, 89, 682, 137,
	89, -212, -123, -413, 273, -300, 90, 90, -113, -116,
	-11, 88, 151, -253, -189, 63, -143, -208, -414, 77,
	540, 641, -91, -90, -87, 652, 678, -208, -93, -93,
	-143, -143, -143, 88, -414, -414, -414, -106, 88, -103,
	-102, -292, 77, 122, -265, -292, 89, -414, -413, -233,
	89, -237, -11, 87, -3, 273, -324, -374, -325, -326,
	-5, -6, -350, -81, 529, -376, -354, -294, 90, 96,
	89, 529, -414, -414, -89, 145, 650, 618, -144, -155,
	-152, 220, -414, 88, -414, 88, -414, 88, -292, 244,
	-104, 88, 26, -301, -175, -173, -292, 582, -394, -393,
	525, -404, -400, 119, 143, 101, -402, 620, 576, 128,
	129, -81, -143, 87, -414, -82, 288, 637, -385, 530,
	-89, 651, 596, 571, 596, 571, -143, -143, -143, -102,
	-413, -414, 88, 23, -316, -61, 593, -391, -392, 77,
	-395, 387, 592, 613, 119, 90, 89, -253, 249, -378,
	531, 142, -414, 88, -414, 88, -414, -92, -173, 589,
	-329, -157, -392, 77, -391, 77, 14, 13, -4, 681,
	89, 290, -89, -143, -143, -414, -60, 27, -174, -390,
	257, 252, 255, 33, -390, 96, -4, -414, -414, 593,
	251, 32, 119, -157, -177, -176, -176,
}

var yyDef = [...]int{
	874, -2, -2, 876, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 874, 874, 874, 0, 874, 0, 0,
	874, -2, -2, 874, 1536, 0, 874, 0, 0, 0,
	-2, 789, 795, 0, 804, -2, 0, 0, 874, 874,
	2109, 2109, 869, 0, 0, 0, 0, 0, 874, 874,
	874, 874, 1402, 51, 874, 0, 86, 87, 824, 825,
	826, 66, 0, 2107, 875, 1, 3, 72, 76, 0,
	0, 0, 59, 1411, 0, 79, 0, 0, 878, 0,
	0, 1519, 874, 874, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 600, 523,
	575, 521, 560, -2, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 399, 399,
	0, 0, -2, 509, 509, 509, 1521, 0, 0, 0,
	557, 461, 399, 399, 399, 0, 399, 399, 399, 399,
	0, 0, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 1429,
	166, 1537, 1534, 1535, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 0, 1513, 0, 713, 977, 0, 0, 778,
	778, 0, 778, 778, 778, 778, 0, 0, 0, 727,
	0, 0, 0, 0, 775, 0, 743, 744, 0, 775,
	0, 750, 781, 0, 0, 756, 778, 778, 759, 2110,
	0, 2110, 2110, 1504, 0, 772, 770, 784, 785, 41,
	788, 791, 792, 793, 794, 797, 0, 808, 811, 1530,
	1531, 0, 813, 820, 837, 838, 0, 870, 871, 46,
	1125, 0, 999, 1004, 1015, 1030, 1031, 1032, 1033, 1034,
	1036, 1037, 1038, 0, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 1106, 1052, 0, 0, 0, 0,
	1375, 0, 0, 1336, 1336, 1140, 1336, 1338, 1338, 1739,
	1875, 1883, 2020, 1700, 1706, 1707, 1708, 1997, 1998, 1999,
	2000, 2055, 2056, 2060, 1799, 0, 0, 0, 2106, 1836,
	1844, 1845, 1869, 1969, 2041, 1718, 1864, 1933, 1796, 1818,
	1819, 1951, 1952, 1840, 1841, 1822, 2002, 2006, 2003, 2004,
	2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 1834, 1837, 1825, 1826, 1828, 1830, 1835, 1842,
	1848, 1827, 1847, 1846, 0, 1823, 1824, 1829, 1839, 1843,
	1831, 1832, 1833, 1838, 1849, 1889, 1888, 1887, 1932, 1860,
	1931, 0, 0, 0, 0, 0, 1275, 1276, 1277, 1278,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 1388,
	1389, 44, 45, 1124, 1500, 1338, 1338, 1338, 1338, 1338,
	1066, 1067, 1068, 1069, 1070, 1094, 1095, 1101, 1102, 1946,
	1947, 1948, 1949, 1780, 2050, 1788, 1789, 1928, 1929, 1801,
	1802, 2081, 2082, -2, -2, -2, 232, 233, 234, 235,
	236, 237, 238, 239, 0, 1743, 2031, 2032, 228, 0,
	0, 296, 297, 293, 294, 295, 1108, 1109, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 285, 286, 287, 288, 289, 290,
	2109, 0, 847, 0, 0, 0, 0, 0, 1411, 0,
	1403, 1402, 64, 0, 874, -2, 0, 0, 0, 0,
	48, 0, 53, 934, 877, 78, 77, 1451, 0, 0,
	0, 60, 1412, 68, 70, 1413, 0, 879, 880, 0,
	910, 914, 0, 0, 0, 1520, 1519, 1519, 103, 0,
	0, 104, 124, 125, 126, 0, 0, 110, 111, 1506,
	1507, 0, 0, 178, 179, 0, 42, 426, 0, 174,
	0, 419, 358, 0, 1429, 0, 0, 0, 0, 0,
	874, 0, 1514, 155, 156, 163, 164, 165, 399, 399,
	399, 572, 0, 0, 166, 166, 530, 531, 532, 0,
	0, -2, 424, 0, 510, 0, 0, 413, 413, 417,
	415, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 661, 0, 400, 0, 570, 571, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 1523, 0,
	547, 548, 0, 0, 0, 399, 399, 0, 0, 0,
	0, 399, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 1442, 0, 0, 0, -2, 0, 705, 0,
	0, 0, 1515, 1515, 0, 712, 0, 714, 0, 717,
	0, 0, 718, 0, 775, 775, 773, 774, 720, 721,
	722, 723, 778, 0, 0, 408, 409, 410, 775, 778,
	0, 778, 778, 778, 778, 775, 775, 775, 778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2110, 781,
	778, 0, 751, 0, 752, 753, 754, 757, 758, 760,
	2111, 2112, 1532, 1533, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 2110, 2110, 764, 768, 1505, 790, 796,
	798, 799, 0, 0, 809, 812, 831, 50, 1787, 819,
	50, 821, 822, 823, 849, 850, 855, 0, 0, 0,
	0, 861, 862, 863, 0, 0, 866, 867, 868, 0,
	0, 0, 0, 0, 997, 0, 0, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1016, 1017, 0, 0, 0, 1039, 1040, 1041, 1042,
	1045, 0, 1057, 0, 1059, 1384, -2, 0, 0, 0,
	1050, 1051, 0, 0, 0, 0, 0, 0, 0, 1376,
	0, 0, 1138, 0, 1139, 1141, 1142, 0, 1143, 884,
	884, 884, 884, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 894,
	894, 0, 0, 221, 222, 223, 224, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 241, 242, 243, 244, 245, 298, 246,
	247, 248, 1124, 0, 0, 0, 47, 839, 840, 0,
	960, 1525, 0, 0, 890, 0, 58, 67, 69, 1411,
	62, 1411, 0, 896, 0, 0, -2, -2, 897, 903,
	904, 905, 906, 907, 55, 2108, 56, 0, 75, 0,
	49, 0, 0, 0, 0, 372, 1454, 0, 0, 1404,
	1405, 1408, 0, 911, 1881, 915, 0, 917, 918, 0,
	0, 101, 0, 976, 0, 0, 0, 112, 0, 114,
	115, 0, 0, 0, 383, 1508, 1509, 1510, -2, 406,
	0, 383, 367, 306, 307, 308, 358, 310, 358, 358,
	358, 358, 372, 372, 372, 372, 341, 342, 343, 344,
	345, 0, 0, 327, 358, 358, 358, 358, 348, 349,
	350, 351, 352, 353, 354, 355, 311, 312, 313, 314,
	315, 316, 317, 318, 319, 360, 360, 360, 360, 360,
	364, 364, 0, 43, 0, 387, 0, 1408, 0, 0,
	1442, 1517, 1527, 0, 0, 0, 1517, 133, 0, 0,
	0, 573, 611, 524, 561, 574, 0, 527, 528, -2,
	0, 0, 509, 0, 511, 0, 407, 0, -2, 0,
	417, 0, 413, 417, 414, 417, 405, 418, 551, 552,
	553, 0, 555, 556, 641, 946, 0, 0, 0, 0,
	0, 647, 648, 649, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 0, 0, 0, 511, 0, 558,
	0, 0, 463, 464, 465, 0, 0, 468, 469, 470,
	471, 0, 0, 474, 475, 476, 963, 964, 477, 478,
	503, 504, 505, 479, 480, 481, 482, 483, 484, 485,
	497, 498, 499, 500, 501, 502, 486, 487, 488, 489,
	490, 491, 494, 0, 148, 1433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 893, 978, 1538, 1539,
	0, 0, 779, 780, 0, 411, 412, 778, 778, 724,
	765, 0, 778, 728, 766, 729, 731, 730, 732, 745,
	746, 778, 735, 776, 777, 736, 737, 738, 739, 740,
	741, 742, 761, 747, 748, 749, 782, 0, 786, 787,
	762, 763, 0, 0, 802, 803, 0, 810, 834, 832,
	833, 835, 827, 828, 829, 830, 0, 836, 0, 0,
	852, 97, 857, 858, 859, 860, 872, 865, 1126, 994,
	995, 996, 0, 998, 1001, 0, 1110, 1112, 1003, 1005,
	1121, 1122, 1123, 0, 0, 0, 0, 0, 1009, 1013,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1035, 1352, 1353, 1354, 1054, 299, 300, 0,
	1055, 0, 0, 0, 0, 0, 0, 0, 1125, 1056,
	0, 908, 0, 0, 1382, 1379, 0, 0, 0, 1337,
	1339, 0, 0, 0, 0, 885, 886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1355, 0, 0, 0,
	0, 0, 1375, 0, 1061, 1062, 1063, 0, 0, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 1280, 1281, 1282, 40, 0, 0, 0, 895, 1386,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 842, 843, 845, 0,
	980, 0, 961, 0, 0, 848, 0, 889, 0, 892,
	61, 63, 901, 902, 0, 919, 898, 57, 52, 0,
	0, 938, 1452, 372, 1474, 0, 381, 381, 378, 1414,
	1415, 0, 1407, 1409, 1410, 80, 916, 912, 0, 992,
	0, 0, 975, 0, 922, 924, 925, 926, 958, 0,
	929, 930, 0, 0, 0, 0, 0, 99, 977, 105,
	0, 113, 0, 0, 118, 119, 106, 107, 108, 109,
	0, 600, -2, 458, 180, 182, 183, 184, 175, -2,
	370, 368, 369, 309, 372, 372, 335, 336, 337, 338,
	339, 340, 0, 0, 328, 329, 330, 331, 320, 0,
	321, 322, 323, 362, 0, 324, 325, 0, 326, 425,
	0, 1416, 388, 389, 391, 399, 0, 394, 395, 0,
	399, 399, 0, 420, 421, 0, 1408, 1433, 0, 0,
	0, 1528, 1527, 1527, 1527, 0, 168, 169, 170, 171,
	172, 173, 636, 0, 0, 612, 634, 635, 166, 0,
	0, 176, 513, 512, 0, 668, 0, 423, 0, 0,
	417, 417, 402, 403, 554, 0, 0, 643, 644, 645,
	646, 0, 0, 0, 540, 452, 0, 541, 542, 511,
	513, 0, 0, 383, 466, 467, 472, 473, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	587, 588, 589, 592, 594, 515, 598, 591, 593, 595,
	515, 599, 1430, 1431, 1432, 0, 0, 706, 0, 0,
	449, 95, 1516, 711, 715, 716, 775, 734, 767, 775,
	726, 733, 755, 800, 801, 806, 814, 815, 816, 817,
	818, 856, 0, 0, 0, 0, 864, 0, 0, 1002,
	1111, 1113, 1006, 0, 1010, 1014, 0, 0, 0, 1060,
	1058, 1386, 0, 0, 0, 1107, 0, 0, 1129, 1130,
	0, 0, 0, 1380, 0, 0, 1136, 0, 1340, 1341,
	1144, 0, 0, 0, 0, 0, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1402, 0, 0, 0,
	0, 0, 1165, 1166, 1167, 1168, 1169, 0, 1171, 0,
	1172, 0, 0, 0, 0, 1179, 1180, 1182, 0, 0,
	1185, 1186, 0, 1189, 0, 1192, 0, 1195, 0, 1198,
	0, 1201, 0, 1204, 0, 1207, 0, 1210, 0, 1213,
	0, 1216, 0, 1219, 0, 1222, 0, 1225, 0, 1228,
	0, 1231, 0, 1234, 0, 0, 1235, 0, 0, 0,
	1239, 0, 0, 0, 0, 1248, 1249, 1250, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	1263, 1264, 1265, 1266, 1267, 0, 1269, 0, 1089, 0,
	0, 1089, 0, 1127, 894, 0, 1342, 1343, 1344, 1345,
	1346, 0, 0, 0, 0, 0, 0, 1302, 1303, 1305,
	0, 0, 1308, 0, 1310, 0, 1499, 841, 844, 846,
	932, 981, 982, 0, 0, 0, 0, 962, 1524, 887,
	888, 891, 940, 0, 1390, 0, 0, 919, 992, 920,
	0, 899, 54, 935, 0, 1456, 1455, 1468, 1481, 381,
	381, 375, 376, 382, 377, 379, 380, 1406, 0, 1411,
	0, 1492, 0, 0, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 968, 0, 0, 0,
	0, 959, 930, 0, 931, 0, -2, 0, 0, 93,
	94, 0, 0, 0, 116, 117, 0, 0, 123, 384,
	385, 157, 166, 460, 181, 433, 0, 0, 305, 371,
	332, 333, 334, 0, 356, 0, 0, 0, 0, 454,
	129, 1420, 1419, 399, 399, 390, 0, 393, 0, 0,
	0, 1529, 359, 422, 0, 147, 0, 0, 0, 0,
	0, 153, 606, 0, 0, 613, 0, 0, 0, 522,
	0, 533, 534, 0, 640, -2, 702, 387, 0, 401,
	404, 947, 0, 0, 535, 0, 538, 539, 453, 513,
	544, 545, 559, 546, 495, 496, 493, 0, 0, 1443,
	1444, 1449, 1447, 1448, 134, 580, 582, 581, 585, 0,
	0, 0, 517, 0, 517, 578, 0, 449, 1416, 0,
	710, 450, 451, 778, 778, 851, 98, 0, 854, 0,
	0, 0, 0, 1007, 1011, 1347, 1373, 358, 358, 1360,
	358, 364, 1363, 358, 1365, 358, 1368, 358, 1371, 1372,
	0, 0, 0, 909, 0, 0, 1135, 1383, 0, 0,
	1145, 1146, 1147, 1148, 1149, 1377, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 146, 0, 0,
	0, 0, 0, 0, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1084, 1088, 0, 1090,
	1091, 0, 0, 1271, 0, 0, 1283, 0, 1387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	988, 988, 988, 0, 0, 0, 1511, 1512, 1391, 1392,
	992, 1393, 921, 900, 939, 1474, 0, 1467, 0, -2,
	1476, 0, 0, 0, 1482, 373, 374, 913, 81, 993,
	84, 0, 1492, 1501, 0, 1483, 1494, 1496, 0, 0,
	0, 1488, 0, 992, 923, 954, 956, 0, 951, 966,
	967, 969, 0, 971, 0, 973, 974, 934, 928, 0,
	101, 0, 992, 992, 100, 0, 979, 120, 121, 122,
	459, 185, 190, 0, 0, 0, 195, 0, 197, 0,
	0, 0, 202, 203, 399, 399, 434, 0, 302, 304,
	0, 0, 188, 372, 0, 372, 0, 363, 365, 0,
	435, 455, 1417, 1418, 0, 0, 392, 396, 397, 398,
	0, 1518, 149, 0, 0, 0, 609, 0, 637, 0,
	0, 0, 0, 0, 0, 177, 514, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 0, 399, 0, 0,
	0, 399, 399, 399, 0, 694, 386, 0, 0, 665,
	662, 536, 0, 226, 227, 229, 0, 0, 0, 0,
	0, 543, 934, 1434, 1435, 1436, 0, 1446, 1450, 137,
	0, 0, 0, 0, 590, 596, 0, 516, 597, 707,
	708, 709, 96, 719, 725, 853, 873, 1000, 1008, 1012,
	0, 0, 0, 0, 1374, 1358, 372, 1361, 1362, 1364,
	1366, 1367, 1369, 1370, 1048, 1049, 1053, 0, 1132, 0,
	1134, 1381, 0, 1411, 0, 0, 0, 1163, 0, 0,
	0, 1174, 1173, 1175, 0, 1177, 1178, 1183, 1184, 1187,
	0, 1190, 0, 1193, 0, 1196, 0, 1199, 0, 1202,
	0, 1205, 0, 1208, 0, 1211, 0, 1214, 0, 1217,
	0, 1220, 0, 1223, 0, 1226, 0, 1229, 0, 1232,
	0, 1236, 0, 1238, 1240, 1241, 0, 0, 0, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1268,
	0, 1082, 1085, 1270, 1092, 1093, 1098, 1273, 0, 0,
	1128, 1285, 0, 1290, 0, 0, 1296, 0, 1300, 0,
	1306, 1307, 1309, 1311, 0, 0, 0, 0, 0, 960,
	941, 65, 1393, 1395, 0, 1461, 1459, 1459, 1469, 1470,
	0, 0, 1477, 0, 0, 0, 0, 85, 0, 0,
	0, 1497, 0, 0, 0, 0, 102, 1402, 948, 955,
	0, 0, 949, 0, 950, 970, 972, 927, 0, 992,
	992, 91, 92, 0, 191, 0, 193, 219, 220, 0,
	196, 198, 199, 200, 206, 207, 208, 201, 0, 0,
	301, 303, 0, 0, 346, 357, 347, 0, 0, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 934, 150, 151,
	152, 601, 0, 611, 0, 936, 0, 604, 0, 525,
	0, 0, 0, 399, 399, 399, 0, 0, 0, 0,
	679, 0, 0, 642, 0, 650, 0, 0, 0, 230,
	231, 0, 1445, 579, 0, 135, 136, 0, 0, 584,
	518, 519, 1046, 0, 0, 0, 1047, 1359, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 1170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 0, 0,
	0, 631, 632, 0, 1314, 1087, 1402, 0, 1089, 1099,
	1100, 0, 1089, 1284, 0, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 980, 1395, 1400, 0,
	0, 1464, 0, 1457, 1460, 1458, 1471, 0, 0, 1478,
	0, 1480, 0, 1502, 1503, 1495, 0, 1487, 1490, 1486,
	1489, 1411, 952, 0, 957, 0, 1402, 90, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 205, 0, 0, 361, 366, 0, 0,
	0, 602, 0, 937, 614, 605, 0, 692, 0, 696,
	0, 0, 0, 699, 700, 701, 678, 0, 682, 427,
	666, 663, 664, 537, 0, 138, 139, 0, 0, 0,
	1348, 0, 1351, 1131, 1133, 0, 1160, 1161, 1162, 1356,
	1357, 1176, 1188, 1191, 1194, 1197, 1200, 1203, 1206, 1209,
	1212, 1215, 1218, 1221, 1224, 1227, 1230, 1233, 1237, 1242,
	0, 1245, 0, 0, 1246, 0, 633, 1078, 0, 0,
	1096, 1097, 0, 1286, 0, 1291, 1292, 0, 1297, 0,
	1301, 1312, 0, 985, 942, 943, 990, 991, 0, 0,
	933, 1400, 83, 1401, 1398, 0, 1396, 1394, 1453, 0,
	1462, 1463, 1472, 1473, 1479, 0, 1485, 0, 88, 0,
	0, 0, 1411, 192, 0, 211, 0, 610, 0, 613,
	603, 690, 691, 0, 703, 695, 697, 698, 680, -2,
	1437, 0, 0, 0, 586, 1349, 0, 0, 1247, 0,
	629, 630, 1086, 1079, 0, 1064, 1065, 1083, 1272, 1274,
	0, 0, 0, 0, 984, 986, 987, 82, 0, 1397,
	1104, 0, 1465, 1466, 1493, 1491, 953, 960, 0, 89,
	440, 433, 1437, 0, 0, 0, 683, 684, 685, 686,
	687, 688, 689, 576, 1439, 140, 141, 506, 507, 508,
	134, 0, 1137, 1243, 1080, 0, 0, 0, 0, 1076,
	1077, 0, 1287, 0, 1293, 0, 1298, 0, 944, 945,
	1399, 0, 0, 615, 0, 617, 0, -2, 428, 441,
	0, 186, 212, 213, 0, 0, 216, 217, 218, 209,
	210, 130, 0, 0, 704, 0, 1440, 1441, 137, 0,
	0, 1071, 1072, 1073, 1074, 1075, 0, 0, 0, 1105,
	1084, 616, 0, 0, 383, 0, 626, 429, 430, 0,
	436, 437, 438, 439, 214, 215, 638, 0, 0, 583,
	1350, 0, 1288, 0, 1294, 0, 1299, 0, 618, 619,
	627, 0, 431, 0, 432, 0, 0, 0, 607, 0,
	638, 1438, 1081, 0, 0, 1103, 0, 628, 624, 442,
	444, 445, 0, 0, 443, 639, 608, 1289, 1295, 0,
	446, 447, 448, 620, 621, 622, 623,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 683,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:606
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:619
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:624
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:662
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:668
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:674
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:683
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:689
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:693
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:705
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:711
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:724
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:734
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:740
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:814
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:865
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:899
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:907
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:911
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:941
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:945
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:979
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:989
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:993
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:999
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1012
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1018
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1024
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1028
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1034
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1038
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1042
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1046
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1052
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1056
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1060
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1066
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1070
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1076
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1086
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1090
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1118
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1122
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1126
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1132
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1138
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1145
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1154
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1158
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1165
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1169
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1174
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1189
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1194
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1200
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1211
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1220
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1226
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1242
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1249
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1256
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1261
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1266
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1271
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1278
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1285
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1296
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1307
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1313
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1317
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1321
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1339
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1343
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1349
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1353
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1359
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1373
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1379
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1383
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1389
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1399
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1404
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1437
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1446
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1468
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1532
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1554
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1558
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1562
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1568
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1572
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1577
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1586
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1608
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1614
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1637
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1655
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Utf8Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf8Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1918
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1922
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1926
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1940
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1957
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1961
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1965
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1969
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2105
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2218
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2223
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2227
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2247
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2257
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2265
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2269
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2273
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2308
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2323
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2329
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2333
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2352
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2361
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2367
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2377
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2381
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2386
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2398
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2422
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2426
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2430
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2434
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2438
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2443
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = yyDollar[2].str
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = "key"
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = yyDollar[1].str
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2505
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2509
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2515
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2519
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2525
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2529
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2535
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2539
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2545
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2551
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2555
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2559
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2563
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2582
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2588
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2594
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2598
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2602
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2617
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2623
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2629
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2633
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2637
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2641
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2664
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2673
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2686
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2692
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2700
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2706
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2716
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2720
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2724
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2728
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2841
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2887
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2891
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2896
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2900
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2918
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2922
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2931
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2935
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2939
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2953
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2967
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2971
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3095
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3109
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3224
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3362
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3371
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3379
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3388
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3395
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3407
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3416
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3431
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3445
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3449
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3455
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3461
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3467
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3477
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3481
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3487
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3493
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3499
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3505
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3529
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3535
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3541
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3545
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3549
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3555
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3559
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3564
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3568
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3573
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3577
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3583
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3587
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3591
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3595
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3599
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3603
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3607
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3611
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3615
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3619
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3623
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3627
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3631
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3635
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3639
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3686
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3690
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3701
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3705
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3710
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3715
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3720
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3725
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3736
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3742
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3747
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3753
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3759
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3769
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3774
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3778
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3783
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3788
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3793
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3798
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3804
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3810
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3817
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3824
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3831
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3839
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3843
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3849
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3855
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3861
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3867
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3873
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3879
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3891
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3913
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3917
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = "extended "
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4195
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4215
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4233
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4237
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4247
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4253
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4324
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4330
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4340
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4344
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4348
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4361
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4365
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4370
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4392
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4396
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4400
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4404
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4408
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4412
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4416
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4421
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4425
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4429
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4433
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4453
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4494
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4500
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4504
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4516
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4520
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4526
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4532
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4536
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4540
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4544
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4550
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4556
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4566
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4598
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4602
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4647
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4651
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4669
		{
			setAllowComments(yylex, true)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4679
		{
			yyVAL.strs = nil
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = SQLCacheStr
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4729
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4733
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4743
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4752
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4758
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4762
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4771
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4776
		{
			yyVAL.strs = nil
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4784
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4792
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.str = SQLCacheStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = DistinctStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = DistinctStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = StraightJoinHint
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4828
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4838
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4842
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4846
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4850
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4855
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4859
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4863
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4875
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4879
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4885
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4891
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4905
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4909
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4913
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4917
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4923
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4927
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4933
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4937
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4946
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4955
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4961
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4971
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4981
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4985
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4989
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4999
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5003
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5016
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5020
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5024
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5028
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5034
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5036
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5040
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5046
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5048
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5051
		{
			yyVAL.empty = struct{}{}
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.empty = struct{}{}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5056
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5077
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5081
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5085
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5091
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5097
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5101
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5109
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5115
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5119
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5133
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5143
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5149
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5158
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5164
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5168
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5174
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5178
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5182
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5186
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5191
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5195
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5199
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5203
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5314
		{
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5493
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5497
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5503
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5513
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5517
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5521
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5527
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5531
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5538
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5542
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5546
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5550
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5554
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5560
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5564
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5568
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5572
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5576
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5595
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5601
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5605
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5614
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5619
		{
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5628
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5634
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5638
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5650
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5656
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5660
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5666
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5670
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5676
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5680
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5692
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5698
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5702
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5708
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5714
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5724
		{
			yyVAL.str = ""
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5734
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5738
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5745
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5749
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5753
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5757
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5763
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5767
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5771
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5775
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5779
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5783
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5787
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5793
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5797
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5801
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5808
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5814
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geomfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geomfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geomfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometryfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometryfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometryfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geomcollfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geomcollfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geomcollfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometrycollectionfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometrycollectionfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometrycollectionfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometrycollfromtxt", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometrycollfromtxt", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &GeomFromTextExpr{Type: "geometrycollfromtxt", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &GeomFromTextExpr{Type: "linestringfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &GeomFromTextExpr{Type: "linestringfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &GeomFromTextExpr{Type: "linestringfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &GeomFromTextExpr{Type: "linefromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &GeomFromTextExpr{Type: "linefromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &GeomFromTextExpr{Type: "linefromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multilinestringfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multilinestringfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multilinestringfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mlinefromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mlinefromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mlinefromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mpointfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mpointfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mpointfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multipointfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multipointfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multipointfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mpolyfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mpolyfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &GeomFromTextExpr{Type: "mpolyfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multipolygonfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multipolygonfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &GeomFromTextExpr{Type: "multipolygonfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &GeomFromTextExpr{Type: "pointfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &GeomFromTextExpr{Type: "pointfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &GeomFromTextExpr{Type: "pointfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &GeomFromTextExpr{Type: "polyfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &GeomFromTextExpr{Type: "polyfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &GeomFromTextExpr{Type: "polyfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &GeomFromTextExpr{Type: "polygonfromtext", WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &GeomFromTextExpr{Type: "polygonfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &GeomFromTextExpr{Type: "polygonfromtext", WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6596
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6602
		{
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6604
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6608
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6612
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6616
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6620
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6624
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6628
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6632
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6636
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6640
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6644
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6650
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6654
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6658
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6662
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6666
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6670
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6674
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6678
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6682
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6737
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6741
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6745
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6749
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6753
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6759
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6763
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6767
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6777
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6781
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6787
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6791
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6795
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6799
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6803
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6809
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6813
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6817
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6821
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6825
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6829
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6833
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6837
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6841
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6845
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6851
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6855
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6869
		{
			yyVAL.str = string("")
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6873
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6879
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6883
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6889
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6898
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6904
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6908
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6912
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6916
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6922
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6926
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6932
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6941
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6955
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6964
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6970
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6976
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6980
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6989
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6998
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7004
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7010
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7014
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7020
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7025
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7029
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7033
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7042
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7048
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7052
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7056
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7065
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7069
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7073
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7077
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7084
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7088
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7092
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7096
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7102
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7106
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7110
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7114
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7119
		{
			yyVAL.str = ""
		}
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7123
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7127
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7131
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7136
		{
			yyVAL.str = ""
		}
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7140
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7150
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7155
		{
			yyVAL.str = ""
		}
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7159
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7164
		{
			yyVAL.str = "cascaded"
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7172
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7181
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7187
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7193
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7199
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7208
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7212
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7217
		{
			yyVAL.str = ""
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7221
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7227
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7231
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7237
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7241
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7245
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7250
		{
			yyVAL.str = ""
		}
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7254
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7258
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7263
		{
			yyVAL.str = ""
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7267
		{
			yyVAL.str = " header"
		}
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7272
		{
			yyVAL.str = ""
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7276
		{
			yyVAL.str = " manifest on"
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7280
		{
			yyVAL.str = " manifest off"
		}
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7285
		{
			yyVAL.str = ""
		}
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7289
		{
			yyVAL.str = " overwrite on"
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7293
		{
			yyVAL.str = " overwrite off"
		}
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7299
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7304
		{
			yyVAL.str = ""
		}
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7308
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7314
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7318
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7324
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7328
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7333
		{
			yyVAL.str = ""
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7337
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7343
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7347
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7353
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7357
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7361
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7366
		{
			yyVAL.str = ""
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7370
		{
			yyVAL.str = " optionally"
		}
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7383
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7387
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7391
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7395
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7399
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7405
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7409
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7413
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7417
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7426
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7432
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7436
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7442
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7446
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7452
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7456
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7461
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7471
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7475
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7481
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7488
		{
			yyVAL.str = "charset"
		}
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7498
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7502
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7506
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7515
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7517
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7530
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7535
		{
			yyVAL.empty = struct{}{}
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7537
		{
			yyVAL.empty = struct{}{}
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7539
		{
			yyVAL.empty = struct{}{}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7543
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7552
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7559
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7563
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7569
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7573
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7580
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7586
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7590
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7596
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7600
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7607
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8201
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8210
		{
			decNesting(yylex)
		}
	case 2109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8215
		{
			skipToEnd(yylex)
		}
	case 2110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8220
		{
			skipToEnd(yylex)
		}
	case 2111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8224
		{
			skipToEnd(yylex)
		}
	case 2112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8228
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
