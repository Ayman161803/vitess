// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const ASSIGNMENT_OPT = 57497
const SHIFT_LEFT = 57498
const SHIFT_RIGHT = 57499
const DIV = 57500
const MOD = 57501
const UNARY = 57502
const COLLATE = 57503
const BINARY = 57504
const UNDERSCORE_ARMSCII8 = 57505
const UNDERSCORE_ASCII = 57506
const UNDERSCORE_BIG5 = 57507
const UNDERSCORE_BINARY = 57508
const UNDERSCORE_CP1250 = 57509
const UNDERSCORE_CP1251 = 57510
const UNDERSCORE_CP1256 = 57511
const UNDERSCORE_CP1257 = 57512
const UNDERSCORE_CP850 = 57513
const UNDERSCORE_CP852 = 57514
const UNDERSCORE_CP866 = 57515
const UNDERSCORE_CP932 = 57516
const UNDERSCORE_DEC8 = 57517
const UNDERSCORE_EUCJPMS = 57518
const UNDERSCORE_EUCKR = 57519
const UNDERSCORE_GB18030 = 57520
const UNDERSCORE_GB2312 = 57521
const UNDERSCORE_GBK = 57522
const UNDERSCORE_GEOSTD8 = 57523
const UNDERSCORE_GREEK = 57524
const UNDERSCORE_HEBREW = 57525
const UNDERSCORE_HP8 = 57526
const UNDERSCORE_KEYBCS2 = 57527
const UNDERSCORE_KOI8R = 57528
const UNDERSCORE_KOI8U = 57529
const UNDERSCORE_LATIN1 = 57530
const UNDERSCORE_LATIN2 = 57531
const UNDERSCORE_LATIN5 = 57532
const UNDERSCORE_LATIN7 = 57533
const UNDERSCORE_MACCE = 57534
const UNDERSCORE_MACROMAN = 57535
const UNDERSCORE_SJIS = 57536
const UNDERSCORE_SWE7 = 57537
const UNDERSCORE_TIS620 = 57538
const UNDERSCORE_UCS2 = 57539
const UNDERSCORE_UJIS = 57540
const UNDERSCORE_UTF16 = 57541
const UNDERSCORE_UTF16LE = 57542
const UNDERSCORE_UTF32 = 57543
const UNDERSCORE_UTF8 = 57544
const UNDERSCORE_UTF8MB4 = 57545
const UNDERSCORE_UTF8MB3 = 57546
const INTERVAL = 57547
const WINDOW_EXPR = 57548
const JSON_EXTRACT_OP = 57549
const JSON_UNQUOTE_EXTRACT_OP = 57550
const CREATE = 57551
const ALTER = 57552
const DROP = 57553
const RENAME = 57554
const ANALYZE = 57555
const ADD = 57556
const FLUSH = 57557
const CHANGE = 57558
const MODIFY = 57559
const DEALLOCATE = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const FLOAT4_TYPE = 57660
const FLOAT8_TYPE = 57661
const DECIMAL_TYPE = 57662
const NUMERIC = 57663
const TIME = 57664
const TIMESTAMP = 57665
const DATETIME = 57666
const YEAR = 57667
const CHAR = 57668
const VARCHAR = 57669
const BOOL = 57670
const CHARACTER = 57671
const VARBINARY = 57672
const NCHAR = 57673
const TEXT = 57674
const TINYTEXT = 57675
const MEDIUMTEXT = 57676
const LONGTEXT = 57677
const BLOB = 57678
const TINYBLOB = 57679
const MEDIUMBLOB = 57680
const LONGBLOB = 57681
const JSON = 57682
const JSON_SCHEMA_VALID = 57683
const JSON_SCHEMA_VALIDATION_REPORT = 57684
const ENUM = 57685
const GEOMETRY = 57686
const POINT = 57687
const LINESTRING = 57688
const POLYGON = 57689
const GEOMCOLLECTION = 57690
const GEOMETRYCOLLECTION = 57691
const MULTIPOINT = 57692
const MULTILINESTRING = 57693
const MULTIPOLYGON = 57694
const ASCII = 57695
const UNICODE = 57696
const NULLX = 57697
const AUTO_INCREMENT = 57698
const APPROXNUM = 57699
const SIGNED = 57700
const UNSIGNED = 57701
const ZEROFILL = 57702
const PURGE = 57703
const BEFORE = 57704
const CODE = 57705
const COLLATION = 57706
const COLUMNS = 57707
const DATABASES = 57708
const ENGINES = 57709
const EVENT = 57710
const EXTENDED = 57711
const FIELDS = 57712
const FULL = 57713
const FUNCTION = 57714
const GTID_EXECUTED = 57715
const KEYSPACES = 57716
const OPEN = 57717
const PLUGINS = 57718
const PRIVILEGES = 57719
const PROCESSLIST = 57720
const SCHEMAS = 57721
const TABLES = 57722
const TRIGGERS = 57723
const USER = 57724
const VGTID_EXECUTED = 57725
const VITESS_KEYSPACES = 57726
const VITESS_METADATA = 57727
const VITESS_MIGRATIONS = 57728
const VITESS_REPLICATION_STATUS = 57729
const VITESS_SHARDS = 57730
const VITESS_TABLETS = 57731
const VITESS_TARGET = 57732
const VSCHEMA = 57733
const VITESS_THROTTLED_APPS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const CURRENT_TIMESTAMP = 57747
const DATABASE = 57748
const CURRENT_DATE = 57749
const CURDATE = 57750
const NOW = 57751
const CURTIME = 57752
const CURRENT_TIME = 57753
const LOCALTIME = 57754
const LOCALTIMESTAMP = 57755
const CURRENT_USER = 57756
const UTC_DATE = 57757
const UTC_TIME = 57758
const UTC_TIMESTAMP = 57759
const SYSDATE = 57760
const DAY = 57761
const DAY_HOUR = 57762
const DAY_MICROSECOND = 57763
const DAY_MINUTE = 57764
const DAY_SECOND = 57765
const HOUR = 57766
const HOUR_MICROSECOND = 57767
const HOUR_MINUTE = 57768
const HOUR_SECOND = 57769
const MICROSECOND = 57770
const MINUTE = 57771
const MINUTE_MICROSECOND = 57772
const MINUTE_SECOND = 57773
const MONTH = 57774
const QUARTER = 57775
const SECOND = 57776
const SECOND_MICROSECOND = 57777
const YEAR_MONTH = 57778
const WEEK = 57779
const REPLACE = 57780
const CONVERT = 57781
const CAST = 57782
const SUBSTR = 57783
const SUBSTRING = 57784
const SEPARATOR = 57785
const TIMESTAMPADD = 57786
const TIMESTAMPDIFF = 57787
const WEIGHT_STRING = 57788
const LTRIM = 57789
const RTRIM = 57790
const TRIM = 57791
const JSON_ARRAY = 57792
const JSON_OBJECT = 57793
const JSON_QUOTE = 57794
const JSON_DEPTH = 57795
const JSON_TYPE = 57796
const JSON_LENGTH = 57797
const JSON_VALID = 57798
const JSON_ARRAY_APPEND = 57799
const JSON_ARRAY_INSERT = 57800
const JSON_INSERT = 57801
const JSON_MERGE = 57802
const JSON_MERGE_PATCH = 57803
const JSON_MERGE_PRESERVE = 57804
const JSON_REMOVE = 57805
const JSON_REPLACE = 57806
const JSON_SET = 57807
const JSON_UNQUOTE = 57808
const COUNT = 57809
const AVG = 57810
const MAX = 57811
const MIN = 57812
const SUM = 57813
const GROUP_CONCAT = 57814
const BIT_AND = 57815
const BIT_OR = 57816
const BIT_XOR = 57817
const STD = 57818
const STDDEV = 57819
const STDDEV_POP = 57820
const STDDEV_SAMP = 57821
const VAR_POP = 57822
const VAR_SAMP = 57823
const VARIANCE = 57824
const REGEXP_INSTR = 57825
const REGEXP_LIKE = 57826
const REGEXP_REPLACE = 57827
const REGEXP_SUBSTR = 57828
const ExtractValue = 57829
const UpdateXML = 57830
const GET_LOCK = 57831
const RELEASE_LOCK = 57832
const RELEASE_ALL_LOCKS = 57833
const IS_FREE_LOCK = 57834
const IS_USED_LOCK = 57835
const LOCATE = 57836
const POSITION = 57837
const ST_GeometryCollectionFromText = 57838
const ST_GeometryFromText = 57839
const ST_LineStringFromText = 57840
const ST_MultiLineStringFromText = 57841
const ST_MultiPointFromText = 57842
const ST_MultiPolygonFromText = 57843
const ST_PointFromText = 57844
const ST_PolygonFromText = 57845
const ST_GeometryCollectionFromWKB = 57846
const ST_GeometryFromWKB = 57847
const ST_LineStringFromWKB = 57848
const ST_MultiLineStringFromWKB = 57849
const ST_MultiPointFromWKB = 57850
const ST_MultiPolygonFromWKB = 57851
const ST_PointFromWKB = 57852
const ST_PolygonFromWKB = 57853
const ST_AsBinary = 57854
const ST_AsText = 57855
const ST_Dimension = 57856
const ST_Envelope = 57857
const ST_IsSimple = 57858
const ST_IsEmpty = 57859
const ST_GeometryType = 57860
const ST_X = 57861
const ST_Y = 57862
const ST_Latitude = 57863
const ST_Longitude = 57864
const ST_EndPoint = 57865
const ST_IsClosed = 57866
const ST_Length = 57867
const ST_NumPoints = 57868
const ST_StartPoint = 57869
const ST_PointN = 57870
const ST_Area = 57871
const ST_Centroid = 57872
const ST_ExteriorRing = 57873
const ST_InteriorRingN = 57874
const ST_NumInteriorRings = 57875
const ST_NumGeometries = 57876
const ST_GeometryN = 57877
const ST_LongFromGeoHash = 57878
const ST_PointFromGeoHash = 57879
const ST_LatFromGeoHash = 57880
const ST_GeoHash = 57881
const ST_AsGeoJSON = 57882
const ST_GeomFromGeoJSON = 57883
const MATCH = 57884
const AGAINST = 57885
const BOOLEAN = 57886
const LANGUAGE = 57887
const WITH = 57888
const QUERY = 57889
const EXPANSION = 57890
const WITHOUT = 57891
const VALIDATION = 57892
const UNUSED = 57893
const ARRAY = 57894
const BYTE = 57895
const CUME_DIST = 57896
const DESCRIPTION = 57897
const DENSE_RANK = 57898
const EMPTY = 57899
const EXCEPT = 57900
const FIRST_VALUE = 57901
const GROUPING = 57902
const GROUPS = 57903
const JSON_TABLE = 57904
const LAG = 57905
const LAST_VALUE = 57906
const LATERAL = 57907
const LEAD = 57908
const NTH_VALUE = 57909
const NTILE = 57910
const OF = 57911
const OVER = 57912
const PERCENT_RANK = 57913
const RANK = 57914
const RECURSIVE = 57915
const ROW_NUMBER = 57916
const SYSTEM = 57917
const WINDOW = 57918
const ACTIVE = 57919
const ADMIN = 57920
const AUTOEXTEND_SIZE = 57921
const BUCKETS = 57922
const CLONE = 57923
const COLUMN_FORMAT = 57924
const COMPONENT = 57925
const DEFINITION = 57926
const ENFORCED = 57927
const ENGINE_ATTRIBUTE = 57928
const EXCLUDE = 57929
const FOLLOWING = 57930
const GET_MASTER_PUBLIC_KEY = 57931
const HISTOGRAM = 57932
const HISTORY = 57933
const INACTIVE = 57934
const INVISIBLE = 57935
const LOCKED = 57936
const MASTER_COMPRESSION_ALGORITHMS = 57937
const MASTER_PUBLIC_KEY_PATH = 57938
const MASTER_TLS_CIPHERSUITES = 57939
const MASTER_ZSTD_COMPRESSION_LEVEL = 57940
const NESTED = 57941
const NETWORK_NAMESPACE = 57942
const NOWAIT = 57943
const NULLS = 57944
const OJ = 57945
const OLD = 57946
const OPTIONAL = 57947
const ORDINALITY = 57948
const ORGANIZATION = 57949
const OTHERS = 57950
const PARTIAL = 57951
const PATH = 57952
const PERSIST = 57953
const PERSIST_ONLY = 57954
const PRECEDING = 57955
const PRIVILEGE_CHECKS_USER = 57956
const PROCESS = 57957
const RANDOM = 57958
const REFERENCE = 57959
const REQUIRE_ROW_FORMAT = 57960
const RESOURCE = 57961
const RESPECT = 57962
const RESTART = 57963
const RETAIN = 57964
const REUSE = 57965
const ROLE = 57966
const SECONDARY = 57967
const SECONDARY_ENGINE = 57968
const SECONDARY_ENGINE_ATTRIBUTE = 57969
const SECONDARY_LOAD = 57970
const SECONDARY_UNLOAD = 57971
const SIMPLE = 57972
const SKIP = 57973
const SRID = 57974
const THREAD_PRIORITY = 57975
const TIES = 57976
const UNBOUNDED = 57977
const VCPU = 57978
const VISIBLE = 57979
const RETURNING = 57980
const FORMAT_BYTES = 57981
const FORMAT_PICO_TIME = 57982
const PS_CURRENT_THREAD_ID = 57983
const PS_THREAD_ID = 57984
const GTID_SUBSET = 57985
const GTID_SUBTRACT = 57986
const WAIT_FOR_EXECUTED_GTID_SET = 57987
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57988
const FORMAT = 57989
const TREE = 57990
const VITESS = 57991
const TRADITIONAL = 57992
const VTEXPLAIN = 57993
const VEXPLAIN = 57994
const PLAN = 57995
const LOCAL = 57996
const LOW_PRIORITY = 57997
const NO_WRITE_TO_BINLOG = 57998
const LOGS = 57999
const ERROR = 58000
const GENERAL = 58001
const HOSTS = 58002
const OPTIMIZER_COSTS = 58003
const USER_RESOURCES = 58004
const SLOW = 58005
const CHANNEL = 58006
const RELAY = 58007
const EXPORT = 58008
const CURRENT = 58009
const ROW = 58010
const ROWS = 58011
const AVG_ROW_LENGTH = 58012
const CONNECTION = 58013
const CHECKSUM = 58014
const DELAY_KEY_WRITE = 58015
const ENCRYPTION = 58016
const ENGINE = 58017
const INSERT_METHOD = 58018
const MAX_ROWS = 58019
const MIN_ROWS = 58020
const PACK_KEYS = 58021
const PASSWORD = 58022
const FIXED = 58023
const DYNAMIC = 58024
const COMPRESSED = 58025
const REDUNDANT = 58026
const COMPACT = 58027
const ROW_FORMAT = 58028
const STATS_AUTO_RECALC = 58029
const STATS_PERSISTENT = 58030
const STATS_SAMPLE_PAGES = 58031
const STORAGE = 58032
const MEMORY = 58033
const DISK = 58034
const PARTITIONS = 58035
const LINEAR = 58036
const RANGE = 58037
const LIST = 58038
const SUBPARTITION = 58039
const SUBPARTITIONS = 58040
const HASH = 58041

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"NOW",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 159,
	717, 159,
	-2, 167,
	-1, 53,
	135, 167,
	177, 167,
	346, 167,
	-2, 523,
	-1, 61,
	36, 772,
	240, 772,
	251, 772,
	286, 786,
	287, 786,
	-2, 774,
	-1, 66,
	242, 810,
	-2, 808,
	-1, 122,
	239, 1560,
	-2, 133,
	-1, 124,
	1, 160,
	717, 160,
	-2, 167,
	-1, 135,
	136, 408,
	245, 408,
	-2, 512,
	-1, 154,
	135, 167,
	177, 167,
	346, 167,
	-2, 532,
	-1, 717,
	163, 41,
	-2, 45,
	-1, 919,
	87, 1577,
	-2, 1431,
	-1, 920,
	87, 1578,
	222, 1582,
	-2, 1432,
	-1, 921,
	222, 1581,
	-2, 42,
	-1, 1001,
	60, 884,
	-2, 899,
	-1, 1090,
	250, 43,
	255, 43,
	-2, 419,
	-1, 1175,
	1, 580,
	717, 580,
	-2, 167,
	-1, 1478,
	222, 1582,
	-2, 1432,
	-1, 1681,
	60, 885,
	-2, 904,
	-1, 1682,
	60, 886,
	-2, 905,
	-1, 1734,
	135, 167,
	177, 167,
	346, 167,
	-2, 458,
	-1, 1815,
	136, 408,
	245, 408,
	-2, 512,
	-1, 1824,
	250, 44,
	255, 44,
	-2, 420,
	-1, 2236,
	222, 1586,
	-2, 1580,
	-1, 2237,
	222, 1582,
	-2, 1578,
	-1, 2338,
	135, 167,
	177, 167,
	346, 167,
	-2, 459,
	-1, 2345,
	26, 188,
	-2, 190,
	-1, 2789,
	78, 98,
	88, 98,
	-2, 963,
	-1, 2858,
	692, 696,
	-2, 670,
	-1, 3055,
	50, 1528,
	-2, 1522,
	-1, 3848,
	692, 696,
	-2, 684,
	-1, 3937,
	90, 628,
	95, 628,
	105, 628,
	179, 628,
	180, 628,
	181, 628,
	182, 628,
	183, 628,
	184, 628,
	185, 628,
	186, 628,
	187, 628,
	188, 628,
	189, 628,
	190, 628,
	191, 628,
	192, 628,
	193, 628,
	194, 628,
	195, 628,
	196, 628,
	197, 628,
	198, 628,
	199, 628,
	200, 628,
	201, 628,
	202, 628,
	203, 628,
	204, 628,
	205, 628,
	206, 628,
	207, 628,
	208, 628,
	209, 628,
	210, 628,
	211, 628,
	212, 628,
	213, 628,
	214, 628,
	215, 628,
	216, 628,
	217, 628,
	218, 628,
	219, 628,
	220, 628,
	-2, 1942,
}

const yyPrivate = 57344

const yyLast = 53165

var yyAct = [...]int{
	935, 3525, 4021, 86, 930, 3524, 4010, 3526, 3935, 739,
	923, 3205, 3914, 3829, 3902, 1242, 3978, 922, 2052, 3979,
	3107, 2335, 3114, 3813, 3156, 1240, 3068, 3333, 3742, 3165,
	2265, 3170, 3167, 3166, 3164, 3169, 3168, 3811, 1737, 3463,
	2267, 1943, 3185, 2689, 2409, 3879, 3122, 3014, 3184, 3476,
	1998, 721, 3069, 5, 3372, 3072, 3559, 3366, 2918, 2290,
	3056, 2749, 884, 883, 749, 2372, 888, 3187, 1696, 42,
	3066, 2309, 716, 1793, 2823, 3211, 2903, 2855, 2397, 2377,
	2306, 1052, 3392, 2824, 715, 999, 2825, 86, 163, 2440,
	2323, 1020, 2774, 41, 2755, 43, 996, 2311, 1840, 1683,
	2725, 2232, 2741, 2192, 2310, 1098, 1122, 999, 2224, 2048,
	2067, 1011, 2895, 149, 2418, 2396, 2298, 2457, 2379, 2816,
	1085, 1822, 1062, 1726, 1080, 2791, 1706, 2071, 2313, 1663,
	2285, 2191, 718, 1490, 104, 1417, 2762, 2025, 1402, 105,
	1939, 1829, 1059, 3358, 2394, 3071, 1921, 100, 1056, 1091,
	731, 998, 1060, 1002, 2368, 1086, 1087, 1725, 3554, 1711,
	1037, 1088, 726, 3801, 2723, 1039, 1008, 1474, 99, 1450,
	1997, 2142, 1231, 1022, 2369, 1950, 2079, 2233, 994, 167,
	1003, 127, 1004, 125, 126, 1788, 2291, 1814, 1019, 1005,
	107, 132, 84, 133, 719, 1171, 1032, 1006, 92, 885,
	725, 706, 97, 1217, 1238, 4011, 2411, 2412, 2413, 1499,
	1494, 3464, 3153, 3864, 2411, 106, 83, 2878, 2877, 2455,
	2846, 3456, 1027, 1031, 1418, 3962, 2910, 2911, 3860, 3859,
	2012, 3419, 128, 2262, 2263, 1906, 2011, 2010, 1659, 3865,
	1053, 134, 1102, 1127, 3529, 2009, 2008, 1013, 651, 2007,
	1981, 1187, 709, 2502, 710, 2721, 3052, 3956, 1124, 3018,
	3982, 4031, 3977, 4001, 1135, 3338, 3337, 2871, 2444, 1014,
	2442, 1141, 1142, 1143, 707, 1146, 1147, 1148, 1149, 1046,
	94, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1101, 995,
	1188, 997, 1069, 1047, 128, 1021, 1076, 3838, 1075, 1074,
	2, 2848, 2443, 711, 1413, 1077, 3814, 1128, 1131, 1132,
	691, 3175, 94, 3175, 2751, 889, 2690, 3966, 94, 685,
	3860, 3528, 1428, 2017, 3172, 3230, 3964, 3738, 1434, 3737,
	3469, 2028, 1064, 3470, 691, 1126, 1125, 3992, 3748, 3960,
	3488, 190, 3965, 1404, 1144, 111, 112, 113, 3529, 116,
	2868, 3963, 122, 94, 685, 191, 3477, 3903, 645, 3911,
	2437, 1078, 128, 3747, 2057, 129, 85, 3173, 3940, 3173,
	704, 705, 3250, 1803, 3104, 3105, 85, 2722, 172, 3487,
	990, 991, 992, 993, 2330, 2331, 1001, 3103, 939, 940,
	941, 1990, 1991, 3179, 1727, 3179, 1728, 682, 2909, 939,
	940, 941, 1045, 1049, 887, 1690, 1073, 2508, 1180, 1181,
	2329, 1224, 85, 1226, 3945, 1034, 1035, 2510, 2894, 1235,
	2800, 2805, 1207, 2799, 988, 3572, 2801, 987, 3830, 1208,
	1424, 1201, 3943, 1416, 169, 3528, 2765, 170, 1195, 1946,
	1183, 3949, 3950, 1196, 94, 667, 685, 2812, 3915, 3124,
	3125, 1223, 1225, 2952, 94, 3207, 3944, 3843, 665, 3238,
	189, 2766, 1195, 1431, 1071, 1432, 1433, 1196, 2348, 2347,
	3236, 1212, 1213, 2758, 2759, 1194, 2500, 1193, 1989, 2388,
	2264, 697, 1698, 699, 1170, 685, 85, 685, 3983, 87,
	94, 1403, 1993, 3212, 703, 1723, 2856, 2896, 662, 1667,
	2419, 1418, 2382, 3789, 1896, 3790, 3176, 677, 3176, 3984,
	3200, 1451, 2881, 3921, 2458, 4013, 1922, 1414, 3201, 1210,
	1211, 1228, 672, 1209, 3921, 1202, 2463, 1145, 1233, 1176,
	686, 1216, 675, 3227, 1234, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1460, 1459, 1461, 1462, 2898, 3208, 1897, 3722,
	1898, 2503, 2504, 2506, 2505, 3458, 3457, 1221, 3123, 2481,
	1151, 1222, 1150, 3209, 94, 686, 2460, 1670, 1081, 2849,
	3126, 1227, 1082, 173, 2462, 1214, 1947, 2885, 2886, 2422,
	1807, 2464, 179, 2120, 2478, 1215, 2479, 1111, 2480, 3533,
	2307, 1072, 3454, 3126, 1082, 1220, 1120, 1119, 1121, 4032,
	652, 1118, 654, 668, 1117, 688, 1116, 687, 658, 1428,
	656, 660, 669, 661, 1115, 655, 2461, 666, 2953, 1114,
	657, 670, 671, 674, 678, 679, 680, 676, 673, 3957,
	664, 689, 1057, 1113, 1108, 1057, 3369, 1094, 3989, 1055,
	1057, 1940, 1130, 3017, 1465, 1093, 2866, 3146, 1093, 2395,
	2381, 1033, 1129, 2899, 2448, 2447, 1936, 686, 1405, 1138,
	2880, 1801, 1800, 1799, 1045, 1049, 887, 1937, 1797, 3958,
	649, 644, 1239, 98, 1239, 1239, 3826, 2112, 2101, 2102,
	2103, 2104, 2114, 2105, 2106, 2107, 2119, 2115, 2108, 2109,
	2116, 2117, 2118, 2110, 2111, 2113, 686, 3406, 686, 2470,
	2466, 2468, 2469, 2467, 2471, 2472, 164, 3453, 685, 2756,
	1423, 1420, 1421, 1422, 1427, 1429, 1426, 1424, 1425, 2441,
	1724, 1048, 1042, 1040, 999, 1475, 1480, 1481, 1419, 1484,
	2914, 1485, 1487, 1488, 1489, 1112, 1492, 1493, 1495, 1495,
	3388, 1495, 1495, 1500, 1500, 1500, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1486, 2850, 1229, 3486, 1620, 936, 1622,
	1623, 1624, 1625, 1626, 1472, 1079, 3837, 3527, 1396, 1397,
	2847, 1500, 1500, 1500, 1500, 1500, 1500, 3417, 3418, 1038,
	690, 1908, 1907, 1909, 1910, 1911, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	936, 683, 1468, 1469, 1470, 1471, 936, 1395, 2883, 686,
	93, 1465, 1482, 3948, 1476, 1109, 684, 1660, 2870, 165,
	93, 1174, 88, 3370, 3228, 1698, 177, 1828, 1182, 1068,
	2726, 2728, 1070, 1191, 3917, 1197, 1198, 1199, 1200, 1496,
	1412, 1497, 1498, 1501, 1502, 3917, 2893, 2509, 1100, 2892,
	3177, 3178, 3177, 3178, 2385, 1205, 93, 3947, 1192, 1236,
	1237, 1689, 2869, 3181, 2919, 3181, 3916, 185, 1179, 3321,
	1666, 2796, 1041, 1048, 1042, 1040, 999, 3916, 2439, 685,
	999, 3527, 1657, 2902, 1100, 1100, 999, 1423, 1420, 1421,
	1422, 1427, 1429, 1426, 2386, 1425, 1100, 2522, 1466, 1467,
	1926, 2384, 4025, 2761, 1927, 1419, 685, 2698, 124, 1658,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 2060, 2294, 1100, 1715, 1621, 184, 186, 187, 188,
	93, 1073, 1185, 1065, 1137, 2387, 1827, 1462, 650, 2336,
	1067, 1066, 1673, 1465, 3102, 2383, 1677, 1445, 2921, 2294,
	1016, 1099, 998, 1232, 3851, 1123, 1218, 1093, 1096, 1097,
	1951, 1057, 2080, 1110, 3449, 1090, 1094, 1190, 3382, 2459,
	1675, 2002, 119, 1658, 104, 1676, 2081, 1073, 1169, 105,
	1627, 1628, 1629, 1630, 1631, 1632, 1089, 1099, 1099, 1071,
	2905, 1933, 1103, 1093, 1729, 2904, 1664, 1105, 2727, 1099,
	2938, 1106, 1104, 2072, 3993, 1093, 1096, 1097, 2072, 1057,
	2539, 1651, 1433, 1090, 1094, 2019, 2021, 2022, 2931, 2930,
	2929, 2839, 1107, 2923, 3568, 2927, 1099, 2922, 1434, 2920,
	107, 1103, 1093, 2436, 2925, 3424, 1105, 3423, 2426, 2020,
	1106, 1104, 1173, 2924, 120, 1100, 1837, 1434, 2905, 1923,
	1820, 1924, 1692, 2904, 1925, 1836, 1674, 1432, 1433, 1204,
	1826, 2926, 2928, 1671, 1804, 1805, 1806, 2434, 1661, 1434,
	1206, 2299, 2300, 2438, 1672, 1891, 1111, 1109, 1813, 3985,
	2536, 1945, 1830, 1830, 3407, 1695, 1010, 1842, 3881, 1843,
	686, 1845, 1847, 995, 1873, 1851, 1853, 1855, 1857, 1859,
	1832, 1175, 997, 1219, 3819, 4027, 2078, 1952, 1239, 3730,
	1189, 1720, 1721, 2431, 2292, 2293, 1072, 686, 1930, 1831,
	1928, 1929, 4023, 1931, 1932, 4024, 3729, 4022, 2431, 2030,
	3720, 1881, 1882, 3882, 1041, 4033, 3986, 1887, 1888, 1796,
	3499, 2292, 2293, 2031, 1463, 1464, 2029, 1172, 1099, 3820,
	1136, 1810, 2435, 2535, 1133, 1811, 1823, 1809, 1434, 939,
	940, 941, 1072, 1431, 3498, 1432, 1433, 2433, 1451, 1434,
	3431, 1447, 2940, 1448, 3430, 3110, 2514, 2515, 2516, 1690,
	1434, 1834, 1431, 3420, 1432, 1433, 2077, 1449, 1463, 1464,
	1446, 1678, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460,
	1459, 1461, 1462, 1941, 1431, 1877, 1432, 1433, 1869, 3154,
	1434, 1872, 3142, 1874, 1457, 1458, 1460, 1459, 1461, 1462,
	3111, 1451, 4034, 2913, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1460, 1459, 1461, 1462, 128, 3483, 1076, 3484, 1075,
	1074, 1916, 3997, 1690, 3113, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1460, 1459, 1461, 1462, 2821, 2820, 2819, 1957,
	1802, 2229, 3108, 2391, 3995, 1690, 190, 1455, 1456, 1457,
	1458, 1460, 1459, 1461, 1462, 1239, 1239, 1953, 1954, 3124,
	3125, 1979, 1914, 1917, 2529, 1901, 3109, 1900, 1899, 86,
	129, 1958, 86, 1431, 2528, 1432, 1433, 1451, 1965, 1966,
	1967, 1889, 1434, 172, 1431, 1915, 1432, 1433, 1451, 1883,
	2521, 1434, 1978, 1880, 2814, 1431, 1903, 1432, 1433, 2577,
	3115, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1459,
	1461, 1462, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460,
	1459, 1461, 1462, 1451, 1879, 1431, 1913, 1432, 1433, 1434,
	1878, 2055, 2055, 1849, 3204, 42, 1399, 1434, 42, 169,
	691, 1700, 170, 1723, 2053, 2053, 2056, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1460, 1459, 1461, 1462, 3414, 691,
	1902, 3846, 1955, 2803, 691, 189, 3927, 1690, 3123, 1959,
	2023, 1961, 1962, 1963, 1964, 3925, 1690, 1690, 1968, 3845,
	3126, 2407, 2406, 3823, 1434, 2405, 2404, 1701, 2006, 3822,
	1980, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1459, 1461,
	1462, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1436, 3839,
	1434, 2229, 1657, 3923, 1690, 2226, 1434, 1431, 3821, 1432,
	1433, 3798, 1690, 1434, 2228, 2575, 1431, 3725, 1432, 1433,
	1434, 2403, 2402, 3709, 2573, 1430, 1690, 3756, 934, 1658,
	1434, 2033, 2003, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 3708, 2027, 84, 1986,
	1987, 84, 2565, 3567, 1431, 1434, 1432, 1433, 3796, 1690,
	101, 3565, 1431, 101, 1432, 1433, 3495, 2032, 173, 1656,
	103, 102, 2747, 4012, 102, 1434, 1655, 179, 1654, 1434,
	3973, 1690, 1430, 1690, 3793, 1690, 3112, 2236, 1434, 110,
	3779, 1690, 1434, 2059, 2034, 2747, 3910, 2234, 1690, 3755,
	109, 1434, 108, 3428, 3357, 1690, 110, 2747, 3889, 1431,
	1434, 1432, 1433, 2235, 2134, 2066, 2068, 109, 3413, 108,
	2747, 3885, 3872, 1690, 3713, 1476, 1690, 1434, 103, 1690,
	2225, 2082, 2083, 2084, 2085, 1431, 3213, 1432, 1433, 3350,
	1690, 1431, 2073, 1432, 1433, 2096, 3467, 3836, 1431, 3210,
	1432, 1433, 2227, 3733, 1690, 1431, 1434, 1432, 1433, 3347,
	1690, 2747, 3721, 3345, 1690, 1431, 3145, 1432, 1433, 3144,
	1690, 2315, 3313, 1690, 3712, 2239, 2240, 1690, 3467, 1690,
	3475, 2236, 2747, 3465, 2857, 3311, 1690, 1690, 2431, 1690,
	1431, 2234, 1432, 1433, 3307, 1690, 3386, 1690, 103, 104,
	2830, 164, 2657, 1690, 105, 3135, 3134, 2304, 1434, 2345,
	1431, 3751, 1432, 1433, 1431, 2817, 1432, 1433, 2132, 104,
	3132, 3133, 2026, 1431, 105, 1432, 1433, 1431, 2143, 1432,
	1433, 3130, 3131, 2281, 1434, 1653, 1431, 2317, 1432, 1433,
	3304, 1690, 1434, 1062, 2792, 1431, 2491, 1432, 1433, 2490,
	2238, 1434, 2453, 2241, 2242, 3130, 3129, 1690, 2354, 2355,
	2356, 2357, 1431, 2452, 1432, 1433, 2349, 2340, 2350, 2351,
	2352, 2353, 2289, 2339, 2771, 1690, 1062, 2257, 2270, 1434,
	1698, 2879, 2835, 2321, 2360, 2361, 2362, 2363, 2269, 1982,
	1013, 1431, 3401, 1432, 1433, 1792, 2860, 2344, 2216, 2217,
	2218, 2219, 2220, 2374, 2853, 2854, 2343, 2793, 2280, 1434,
	2792, 2283, 3116, 2275, 2420, 2276, 3120, 2795, 3302, 1690,
	2380, 1948, 2302, 3119, 1912, 1434, 3300, 1690, 3245, 1434,
	2747, 2746, 2327, 2326, 1904, 1046, 3987, 3381, 2325, 2743,
	1894, 2342, 2341, 1431, 1890, 1432, 1433, 1704, 1434, 2259,
	1886, 2417, 2532, 1690, 103, 2143, 1885, 3121, 1884, 1047,
	2390, 1702, 3117, 3298, 1690, 2058, 1690, 3118, 1434, 1431,
	1230, 1432, 1433, 2793, 1102, 1792, 1791, 1431, 2763, 1432,
	1433, 1735, 1734, 1698, 1830, 2763, 1431, 2375, 1432, 1433,
	2371, 3067, 109, 2393, 1690, 2389, 2770, 2401, 2425, 1430,
	2432, 2428, 3381, 2429, 2445, 1434, 2364, 2366, 2367, 3296,
	1690, 1434, 2532, 1703, 1431, 3097, 1432, 1433, 2424, 3383,
	2427, 1434, 2375, 2423, 165, 1698, 3877, 1434, 3850, 2747,
	1101, 177, 3294, 1690, 2771, 1691, 1693, 2449, 2446, 3342,
	3132, 2450, 2451, 2527, 1431, 1434, 1432, 1433, 3040, 2328,
	2771, 2771, 3292, 1690, 2532, 2657, 2562, 3381, 2431, 2561,
	1431, 1430, 1432, 1433, 1431, 1434, 1432, 1433, 2513, 1434,
	2431, 2414, 185, 85, 44, 45, 87, 2297, 1694, 2260,
	2058, 2456, 2004, 1431, 1434, 1432, 1433, 1988, 1434, 3290,
	1690, 1935, 1722, 91, 1434, 3288, 1690, 48, 76, 77,
	1434, 74, 78, 1431, 1434, 1432, 1433, 1698, 2523, 1434,
	75, 3286, 1690, 1000, 1434, 166, 171, 168, 174, 175,
	176, 178, 180, 181, 182, 183, 2236, 1434, 2484, 3284,
	1690, 184, 186, 187, 188, 1434, 2526, 1084, 1083, 62,
	1431, 94, 1432, 1433, 3953, 3892, 1431, 3744, 1432, 1433,
	3834, 94, 2235, 3282, 1690, 1697, 1431, 3432, 1432, 1433,
	1434, 3710, 1431, 3579, 1432, 1433, 3448, 3157, 3280, 1690,
	3445, 3206, 3278, 1690, 3426, 1434, 3255, 2499, 3276, 1690,
	1431, 3254, 1432, 1433, 3274, 1690, 1794, 3745, 3260, 1690,
	2507, 94, 3854, 3243, 1690, 2373, 1434, 2827, 2718, 1690,
	1431, 3202, 1432, 1433, 1431, 3159, 1432, 1433, 3433, 3434,
	3435, 2716, 1690, 2518, 3155, 2520, 1865, 2517, 1434, 1431,
	3717, 1432, 1433, 1431, 2861, 1432, 1433, 2370, 2365, 1431,
	2027, 1432, 1433, 2359, 2358, 1431, 1434, 1432, 1433, 1431,
	1919, 1432, 1433, 1174, 1431, 3450, 1432, 1433, 2538, 1431,
	1825, 1432, 1433, 1821, 1790, 121, 2388, 1434, 2273, 2695,
	1690, 1699, 1431, 1434, 1432, 1433, 4007, 1866, 1867, 1868,
	1431, 4005, 1432, 1433, 2826, 3980, 2519, 1434, 3393, 3394,
	2672, 1690, 1984, 1434, 3858, 2697, 3784, 3396, 3151, 3150,
	51, 54, 57, 56, 59, 1431, 73, 1432, 1433, 82,
	79, 3149, 2664, 1690, 2493, 2494, 1434, 3067, 2524, 2496,
	1431, 2571, 1432, 1433, 2840, 2485, 3436, 2729, 2497, 1434,
	2655, 1690, 2827, 61, 90, 89, 2055, 3399, 71, 72,
	58, 1431, 1434, 1432, 1433, 999, 80, 81, 1434, 2053,
	2732, 2653, 1690, 3398, 1985, 3089, 3746, 2640, 1690, 1434,
	3090, 2288, 3549, 1431, 3548, 1432, 1433, 2768, 2769, 2730,
	3086, 2638, 1690, 3437, 3438, 3439, 2315, 3352, 2545, 999,
	2788, 1431, 3087, 1432, 1433, 3085, 2279, 3088, 63, 64,
	1434, 65, 66, 67, 68, 2560, 3091, 1434, 2780, 2781,
	2636, 1690, 1431, 3818, 1432, 1433, 1434, 3387, 1431, 2748,
	1432, 1433, 3547, 2634, 1690, 2026, 2733, 2767, 2735, 3045,
	3044, 1434, 1431, 3558, 1432, 1433, 2632, 1690, 1431, 1434,
	1432, 1433, 3348, 42, 3560, 1434, 1934, 3377, 3374, 3054,
	986, 2744, 2785, 2630, 1690, 2787, 3373, 2786, 2757, 1664,
	2720, 1431, 60, 1432, 1433, 1861, 2776, 2779, 2780, 2781,
	2777, 1434, 2778, 2782, 1431, 1434, 1432, 1433, 3128, 1658,
	2813, 2815, 1140, 2810, 2628, 1690, 1434, 1431, 2831, 1432,
	1433, 2626, 1690, 1431, 2760, 1432, 1433, 2806, 2740, 1139,
	2624, 1690, 2790, 2865, 1431, 2745, 1432, 1433, 1434, 3221,
	3057, 3059, 1862, 1863, 1864, 2622, 1690, 1434, 2794, 3060,
	1017, 2826, 2797, 2620, 1690, 101, 2080, 2380, 1018, 2618,
	1690, 2807, 2804, 1434, 2908, 1431, 102, 1432, 1433, 88,
	2081, 2876, 1431, 1434, 1432, 1433, 2867, 2075, 1434, 2818,
	1398, 1431, 2076, 1432, 1433, 2616, 1690, 1434, 2829, 2614,
	1690, 103, 129, 2832, 2833, 1434, 1431, 2828, 1432, 1433,
	2612, 1690, 3379, 4019, 1431, 3147, 1432, 1433, 2488, 2836,
	1431, 2837, 1432, 1433, 2841, 2842, 2843, 2138, 3932, 101,
	1434, 3835, 2610, 1690, 2873, 1434, 103, 3740, 1813, 1434,
	102, 2608, 1690, 1434, 2299, 2300, 1431, 3127, 1432, 1433,
	1431, 2784, 1432, 1433, 1434, 2284, 2852, 3319, 2862, 2863,
	2477, 1431, 1434, 1432, 1433, 1025, 1026, 2606, 1690, 2476,
	2872, 3043, 2601, 1690, 108, 2475, 2474, 1434, 2473, 3042,
	3359, 2597, 1690, 1431, 2512, 1432, 1433, 93, 3806, 2595,
	1690, 1434, 1431, 109, 1432, 1433, 3805, 2932, 1434, 2897,
	3787, 3566, 1434, 3564, 2915, 3563, 2900, 2222, 1431, 3556,
	1432, 1433, 3446, 3378, 2588, 1690, 3376, 3160, 1431, 3315,
	1432, 1433, 2415, 1431, 2822, 1432, 1433, 2586, 1690, 1808,
	110, 1024, 1431, 2251, 1432, 1433, 3555, 1434, 3252, 2763,
	1431, 109, 1432, 1433, 3367, 3537, 3251, 4009, 4008, 2933,
	1691, 2258, 2743, 2935, 1434, 2954, 2563, 2874, 1434, 2271,
	1716, 3248, 1708, 1434, 4009, 1431, 2917, 1432, 1433, 4008,
	1431, 3824, 1432, 1433, 1431, 2714, 1432, 1433, 1431, 3412,
	1432, 1433, 2713, 1015, 2282, 110, 2709, 114, 115, 1431,
	3, 1432, 1433, 70, 1434, 2956, 109, 1431, 108, 1432,
	1433, 3012, 2001, 96, 1, 10, 2906, 103, 1999, 2907,
	1401, 9, 1431, 40, 1432, 1433, 2000, 1688, 1684, 8,
	1400, 2708, 3416, 3942, 1434, 663, 1431, 2916, 1432, 1433,
	110, 2261, 1685, 1431, 3024, 1432, 1433, 1431, 2707, 1432,
	1433, 109, 2706, 108, 1662, 3981, 3019, 2705, 3938, 2947,
	3939, 1905, 3021, 1895, 2315, 3478, 1434, 2277, 2278, 1687,
	2190, 1686, 1434, 3741, 3163, 2421, 2225, 3444, 2225, 2378,
	1092, 2992, 1431, 154, 1432, 1433, 2337, 3074, 2704, 86,
	2934, 2338, 2315, 2315, 2315, 2315, 2315, 2392, 2227, 1431,
	2227, 1432, 1433, 1431, 3905, 1432, 1433, 3024, 1431, 118,
	1432, 1433, 2315, 1050, 117, 2315, 1095, 3079, 2693, 3023,
	1203, 2416, 3020, 3468, 3022, 3002, 3003, 3004, 3005, 3006,
	2317, 1434, 1945, 2811, 2346, 3048, 1741, 1739, 1434, 1431,
	3096, 1432, 1433, 1434, 1740, 3035, 1738, 1743, 3039, 1434,
	2688, 1742, 3036, 3037, 3038, 1002, 2681, 1434, 2317, 2317,
	2317, 2317, 2317, 3046, 3049, 1434, 3229, 3061, 3062, 1431,
	2564, 1432, 1433, 1434, 3320, 1992, 698, 2783, 2317, 3180,
	1434, 2317, 1003, 3098, 1004, 692, 3099, 192, 3078, 3188,
	3081, 3082, 1730, 3084, 1709, 3092, 3080, 104, 3047, 3083,
	3334, 1431, 105, 1432, 1433, 1434, 3100, 1431, 1134, 1432,
	1433, 653, 3136, 2454, 3106, 2680, 659, 1434, 1483, 2994,
	1983, 2996, 2679, 3041, 2798, 1044, 1036, 2678, 2272, 3139,
	2734, 3138, 3137, 2677, 1043, 3718, 1434, 3007, 3008, 3009,
	3010, 2676, 3075, 3371, 3053, 3055, 1434, 2750, 3058, 2675,
	3051, 3190, 3191, 3140, 3141, 3161, 3817, 2674, 3557, 2380,
	3182, 3890, 2808, 1434, 2673, 1705, 1431, 1434, 1432, 1433,
	3197, 3064, 1434, 1431, 3341, 1432, 1433, 2537, 1431, 1434,
	1432, 1433, 2070, 1473, 1431, 3070, 1432, 1433, 2314, 2667,
	3070, 3532, 1431, 3214, 1432, 1433, 3217, 3216, 2018, 723,
	1431, 2666, 1432, 1433, 722, 720, 3224, 2736, 1431, 3234,
	1432, 1433, 3183, 3231, 3232, 1431, 3233, 1432, 1433, 3235,
	2665, 3237, 2764, 3239, 1437, 2776, 2779, 2780, 2781, 2777,
	2662, 2778, 2782, 924, 2724, 3393, 3394, 1717, 2775, 2773,
	1431, 2772, 1432, 1433, 2486, 2322, 3395, 2661, 3391, 3934,
	2316, 2660, 1431, 2312, 1432, 1433, 2658, 2742, 875, 874,
	732, 2525, 724, 2651, 714, 2530, 873, 872, 2533, 3409,
	2534, 1431, 3189, 1432, 1433, 2541, 3162, 3918, 3336, 2543,
	2544, 1431, 2882, 1432, 1433, 3340, 3203, 2884, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 1431, 2809,
	1432, 1433, 1431, 712, 1432, 1433, 3199, 1431, 1415, 1432,
	1433, 1680, 3073, 708, 1431, 1063, 1432, 1433, 2315, 3226,
	3841, 2511, 3249, 1679, 2566, 2567, 2568, 2569, 2570, 3225,
	2572, 3408, 2099, 3368, 2574, 2100, 3375, 3848, 2579, 2580,
	3171, 2581, 3462, 3152, 2584, 3363, 2585, 2587, 2589, 2590,
	2591, 2592, 2593, 2594, 2596, 2598, 2599, 2600, 2602, 3380,
	2604, 2605, 2607, 2609, 2611, 2613, 2615, 2617, 2619, 2621,
	2623, 2625, 2627, 2629, 2631, 2633, 2635, 2637, 2639, 2641,
	2642, 2643, 3400, 2645, 2317, 2647, 3397, 2649, 2650, 3403,
	2652, 2654, 2656, 3190, 3191, 3410, 2659, 3402, 3411, 2858,
	2663, 3360, 3361, 3365, 2668, 2669, 2670, 2671, 2408, 3427,
	69, 3429, 1023, 46, 3812, 1029, 1029, 2682, 2683, 2684,
	2685, 2686, 2687, 3472, 3473, 2691, 2692, 3219, 3220, 1434,
	937, 3878, 2229, 2694, 2696, 938, 3390, 871, 1688, 1684,
	2699, 2700, 2701, 2702, 2703, 2054, 868, 3421, 3422, 3534,
	3535, 2710, 2711, 1685, 2712, 3404, 3405, 2715, 2717, 2282,
	3536, 2719, 3015, 3016, 3861, 3862, 867, 3863, 2127, 1411,
	1408, 2731, 3955, 1994, 95, 36, 35, 1434, 1681, 1682,
	1687, 1434, 1686, 34, 33, 1434, 32, 3474, 26, 25,
	1434, 24, 23, 22, 1434, 29, 19, 21, 20, 1434,
	3455, 18, 3174, 3976, 3459, 3460, 3461, 1434, 4018, 123,
	3451, 3452, 3490, 2648, 1434, 55, 52, 50, 131, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 2646, 130, 53, 1431, 2644, 1432, 1433, 49, 2603,
	1177, 1434, 47, 31, 2583, 30, 17, 16, 2582, 3546,
	15, 3550, 3551, 2578, 14, 13, 12, 11, 7, 6,
	39, 2576, 38, 28, 37, 27, 4, 2845, 2542, 2410,
	3530, 0, 0, 0, 3074, 0, 86, 0, 3074, 0,
	0, 0, 1431, 3552, 1432, 1433, 1431, 0, 1432, 1433,
	1431, 0, 1432, 1433, 0, 1431, 2055, 1432, 1433, 1431,
	0, 1432, 1433, 0, 1431, 0, 1432, 1433, 0, 2053,
	3581, 0, 1431, 3553, 1432, 1433, 3562, 3561, 0, 1431,
	0, 1432, 1433, 0, 3569, 2531, 3573, 0, 3494, 3571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 3724, 0, 0, 0, 0,
	0, 0, 0, 0, 3585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 0, 1432, 1433,
	0, 3716, 0, 0, 3715, 0, 0, 0, 0, 0,
	0, 0, 3731, 3743, 0, 0, 0, 0, 0, 3714,
	3736, 0, 3735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3781, 2942, 2943, 2944,
	2945, 2946, 3782, 3575, 2055, 0, 0, 0, 0, 3582,
	3583, 0, 0, 0, 0, 0, 2951, 2053, 3785, 0,
	0, 0, 0, 0, 3521, 0, 0, 0, 0, 0,
	0, 0, 0, 3726, 3727, 3728, 0, 0, 0, 3577,
	0, 0, 0, 3074, 0, 0, 0, 0, 0, 3719,
	0, 3070, 3788, 0, 0, 0, 3791, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 3073,
	3828, 3786, 3810, 3073, 3807, 3808, 0, 3809, 3825, 0,
	0, 0, 0, 3842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	3076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3831, 0, 0, 0, 0, 3827, 3844, 3094, 0,
	0, 0, 0, 3847, 0, 0, 0, 0, 0, 0,
	3723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3849, 0, 0, 0, 3816, 0, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 3887, 3867, 0, 0, 3868, 86, 0, 0, 0,
	0, 3833, 0, 0, 0, 0, 0, 0, 3876, 0,
	0, 3883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3893, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3920, 3919, 3852, 3743, 3907, 3896, 3904,
	3901, 3898, 3897, 3895, 3900, 3899, 3891, 0, 0, 0,
	0, 0, 0, 0, 3223, 0, 0, 0, 3073, 0,
	0, 3930, 42, 0, 0, 0, 3951, 0, 0, 0,
	0, 3941, 0, 3946, 3240, 3241, 3242, 3933, 3244, 3246,
	0, 0, 3959, 1758, 0, 3920, 3919, 0, 3961, 0,
	0, 0, 3253, 3971, 0, 0, 0, 3257, 3258, 3259,
	3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270,
	3271, 3272, 3273, 3275, 3277, 3279, 3281, 3283, 3285, 3287,
	3289, 3291, 3293, 3295, 3297, 3299, 3301, 3303, 3305, 3306,
	3308, 3309, 3310, 3312, 1945, 3975, 3314, 3970, 3316, 3317,
	3318, 2055, 4000, 3322, 3323, 3324, 3325, 3326, 3327, 3328,
	3329, 3330, 3331, 3332, 2053, 4003, 4006, 4002, 4004, 3999,
	3990, 0, 3339, 3920, 3919, 3343, 4014, 3344, 3346, 3991,
	3349, 3351, 4026, 3353, 3354, 3355, 3356, 4020, 3856, 4028,
	3888, 3362, 0, 3974, 3070, 0, 3866, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 2055, 4037, 4038, 0,
	0, 4036, 0, 0, 3782, 0, 0, 0, 3840, 2053,
	4035, 0, 0, 0, 1486, 0, 3384, 3385, 0, 0,
	3389, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3485, 0,
	0, 3489, 0, 0, 1772, 1775, 1776, 1777, 1778, 1779,
	1780, 0, 1781, 1782, 1784, 1785, 1783, 1786, 1787, 1760,
	1761, 1762, 1763, 1744, 1745, 1773, 0, 1747, 3500, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 0, 0,
	1757, 1764, 1765, 1766, 1767, 0, 1768, 1769, 1770, 1771,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 937, 0, 0, 0, 0, 938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2054, 0, 0, 0,
	0, 0, 3523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3531, 0, 0, 0, 0,
	0, 0, 0, 3538, 1772, 1775, 1776, 1777, 1778, 1779,
	1780, 0, 1781, 1782, 1784, 1785, 1783, 1786, 1787, 1760,
	1761, 1762, 1763, 1744, 1745, 1773, 0, 1747, 0, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 0, 0,
	1757, 1764, 1765, 1766, 1767, 0, 1768, 1769, 1770, 1771,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3732, 0, 0, 0, 0, 0,
	0, 1774, 0, 3739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3749, 3750, 0, 3752, 0, 3753, 3754,
	0, 0, 0, 3757, 3758, 3759, 3760, 3761, 3762, 3763,
	3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773,
	3774, 3775, 3776, 3777, 3778, 0, 3780, 3783, 0, 0,
	0, 0, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 3792, 3794, 3795, 3797, 3799, 3800, 3802, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 2061, 2062, 3832, 0, 0, 2064,
	0, 1029, 1029, 2069, 0, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 0, 0, 0, 0, 2121, 2122, 2123, 2124,
	2125, 2126, 2128, 0, 2133, 0, 2135, 2136, 2137, 0,
	2139, 2140, 2141, 0, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 0, 0, 0, 0, 0, 2221, 0,
	2223, 0, 2230, 2231, 1029, 0, 1029, 1029, 1029, 1029,
	1029, 0, 0, 0, 0, 0, 0, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 0, 2252, 2253, 2254, 2255,
	2256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3857, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3873, 0, 0, 920, 2295, 2296, 3874,
	3875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3886, 0, 2334, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3912, 3913, 0,
	0, 0, 195, 0, 0, 195, 129, 0, 151, 696,
	0, 3922, 3924, 3926, 702, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 2376, 0, 3954, 0, 0, 0,
	195, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 195, 702, 0,
	0, 0, 0, 0, 0, 169, 3972, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1665, 0, 0, 138, 139, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 3994,
	3996, 3998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 4029, 4030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1012, 0, 0, 0, 0, 0, 0,
	0, 155, 136, 158, 143, 135, 0, 156, 157, 0,
	0, 0, 0, 0, 173, 1058, 0, 0, 0, 0,
	0, 0, 0, 179, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 145,
	140, 141, 142, 146, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2546, 2547, 2548, 2549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 94, 0,
	0, 937, 0, 0, 0, 925, 938, 939, 940, 941,
	926, 0, 0, 927, 928, 0, 929, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	934, 942, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3192, 3193,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	153, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 195, 0, 0, 195, 0, 0, 0,
	3195, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 0,
	702, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 0, 0, 0, 0, 0, 184, 186, 187,
	188, 1478, 0, 890, 0, 0, 0, 894, 0, 0,
	891, 892, 0, 0, 0, 893, 895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 1184, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 2936,
	2937, 0, 0, 2939, 0, 0, 2941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 2948, 2949, 2950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2955, 0, 0,
	2957, 2958, 2959, 0, 0, 0, 2960, 2961, 0, 0,
	2962, 0, 2963, 0, 0, 0, 0, 0, 0, 2964,
	0, 2965, 0, 0, 0, 2966, 0, 2967, 0, 0,
	2968, 0, 2969, 0, 2970, 0, 2971, 0, 2972, 0,
	2973, 0, 2974, 0, 2975, 0, 2976, 0, 2977, 0,
	2978, 0, 2979, 0, 2980, 0, 2981, 1478, 2982, 0,
	2983, 0, 2984, 0, 2985, 0, 0, 0, 2986, 0,
	2987, 0, 2988, 0, 0, 2989, 0, 2990, 0, 2991,
	0, 2193, 2993, 0, 0, 2995, 0, 0, 2997, 2998,
	2999, 3000, 0, 0, 0, 0, 3001, 2193, 2193, 2193,
	2193, 2193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3011, 0, 195, 0, 0, 0, 702, 702,
	0, 1029, 0, 0, 0, 0, 0, 0, 3025, 3026,
	3027, 3028, 3029, 3030, 195, 0, 0, 3031, 3032, 0,
	3033, 0, 3034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 3065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3095, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 702, 702, 0, 702, 0, 702,
	702, 190, 702, 702, 702, 702, 702, 702, 0, 0,
	0, 0, 2851, 0, 0, 1478, 0, 0, 1478, 702,
	1478, 195, 0, 0, 0, 129, 0, 151, 0, 0,
	0, 0, 0, 3158, 0, 0, 0, 0, 172, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 702, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 162,
	702, 0, 195, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 195,
	0, 0, 0, 0, 169, 0, 195, 170, 0, 0,
	0, 0, 0, 0, 0, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 702, 0, 1816, 1817, 161, 160,
	189, 0, 0, 0, 3247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1920, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 1818, 158, 0, 1815, 0, 156, 157, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 1956, 0, 0,
	0, 0, 179, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 919, 0, 3447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1478, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 3471, 702, 0, 0, 0, 0, 0, 1478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 681,
	0, 0, 0, 0, 0, 701, 702, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3491, 0, 3492,
	0, 0, 3493, 0, 0, 3496, 3497, 0, 0, 0,
	0, 0, 0, 0, 3501, 0, 0, 0, 0, 159,
	0, 1012, 0, 0, 0, 0, 0, 701, 3502, 701,
	3503, 0, 3504, 0, 3505, 0, 3506, 0, 3507, 0,
	3508, 0, 3509, 0, 3510, 0, 3511, 0, 3512, 0,
	3513, 0, 3514, 0, 3515, 0, 3516, 0, 3517, 0,
	0, 3518, 0, 0, 0, 3519, 0, 3520, 0, 0,
	0, 0, 0, 3522, 0, 0, 0, 0, 2237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3539, 0, 0, 3540,
	0, 3541, 3542, 0, 3543, 0, 3544, 0, 0, 0,
	0, 3545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 152, 702, 0, 153,
	0, 0, 0, 0, 0, 0, 3570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3578, 0, 0,
	3580, 195, 0, 0, 702, 195, 0, 0, 0, 165,
	0, 0, 3584, 0, 0, 195, 177, 0, 0, 702,
	0, 0, 2237, 195, 0, 195, 0, 195, 195, 0,
	3711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 0, 0, 0, 0, 0, 184, 186, 187, 188,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2287, 0, 0, 0, 0, 0, 3815,
	0, 0, 0, 2301, 0, 0, 0, 0, 0, 0,
	0, 2305, 0, 2308, 0, 0, 1012, 0, 0, 702,
	0, 0, 0, 0, 702, 0, 0, 0, 702, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 937, 0, 0, 195, 925, 938, 939,
	940, 941, 926, 195, 0, 927, 928, 0, 929, 0,
	0, 0, 195, 195, 0, 0, 195, 0, 195, 0,
	0, 0, 934, 942, 943, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	3192, 3193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 0, 3855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1478, 0, 2237, 0, 0,
	0, 0, 0, 0, 1012, 0, 0, 0, 0, 0,
	0, 2465, 0, 0, 0, 0, 0, 0, 0, 0,
	2482, 2483, 0, 0, 2487, 3194, 0, 3869, 0, 0,
	3870, 0, 3871, 0, 0, 2492, 0, 0, 0, 0,
	0, 0, 2495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2498, 701,
	1394, 701, 701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3195, 3196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1477, 0, 0, 0, 3952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3967, 0, 3968,
	0, 3969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 4015,
	0, 4016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1477, 0,
	0, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 0, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	701, 0, 0, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 195, 195,
	195, 195, 0, 0, 0, 2789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 195, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 1824, 2838,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 1477,
	1835, 0, 0, 1838, 1839, 701, 701, 0, 701, 0,
	701, 701, 0, 701, 701, 701, 701, 701, 701, 0,
	0, 0, 702, 0, 0, 0, 1477, 1870, 1871, 1477,
	701, 1477, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2887, 2888, 2889, 2890, 2891,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1938, 1012,
	2901, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 0,
	0, 0, 1478, 0, 0, 702, 702, 1478, 195, 195,
	195, 195, 195, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 195, 0, 195, 0,
	0, 195, 195, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 195, 0, 0,
	0, 0, 701, 701, 0, 0, 1812, 0, 0, 0,
	702, 0, 0, 1478, 0, 701, 0, 0, 702, 129,
	0, 151, 193, 195, 0, 648, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 195,
	1009, 0, 0, 162, 0, 648, 0, 0, 0, 150,
	0, 0, 0, 701, 0, 0, 0, 0, 1030, 1030,
	0, 0, 0, 1477, 0, 0, 0, 648, 169, 876,
	0, 170, 2063, 0, 701, 0, 0, 0, 0, 0,
	1477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 1817, 161, 160, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	0, 3186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 3215, 0, 0, 3218, 0, 1054,
	0, 1061, 0, 0, 155, 1818, 158, 0, 1815, 0,
	156, 157, 0, 0, 0, 0, 0, 173, 0, 701,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 701, 195, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 702, 702, 0, 0,
	701, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 3364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 702, 702, 702, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 0, 2398, 2399, 2400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 3425, 0, 701, 1833, 0, 0, 1833, 0, 1833,
	0, 0, 0, 159, 0, 2430, 0, 0, 0, 0,
	0, 3440, 0, 0, 3441, 3442, 3443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 701, 0, 0, 0, 701,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 702, 0, 702, 0, 0, 0, 0,
	152, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 648, 0, 648, 0, 0, 648, 0, 195, 0,
	0, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1477, 0, 701, 0,
	0, 648, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 0, 0, 0,
	184, 186, 187, 188, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 702, 0, 0, 0, 702, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 1241, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 701,
	0, 702, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 0, 1009, 0, 0, 0, 0, 0,
	0, 1478, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 648,
	0, 0, 0, 0, 0, 0, 0, 702, 2237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 701, 0, 0, 0, 0, 0, 702,
	701, 0, 0, 0, 1833, 1833, 0, 0, 0, 701,
	0, 0, 0, 195, 702, 0, 0, 0, 0, 0,
	3853, 0, 0, 0, 0, 1477, 2875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1668, 1669, 0, 0, 0, 0, 0, 702, 0,
	0, 0, 0, 0, 0, 1479, 0, 0, 1479, 0,
	1479, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 0, 195, 0, 0, 0, 1713,
	0, 1892, 0, 0, 0, 0, 0, 0, 702, 0,
	702, 0, 0, 0, 1731, 0, 648, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 0, 0, 648, 0, 1054, 0,
	0, 0, 0, 701, 0, 1969, 1970, 648, 648, 648,
	648, 648, 648, 648, 0, 0, 0, 1841, 1841, 0,
	1841, 0, 1841, 1841, 0, 1850, 1841, 1841, 1841, 1841,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 1477, 0, 0, 701, 701, 1477, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3143,
	0, 0, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1030, 1030, 0, 0, 0, 1479,
	0, 701, 0, 0, 1477, 0, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1030, 1944, 1030,
	1030, 1030, 1030, 1030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2097,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1009, 0, 0, 0, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	0, 0, 1944, 648, 0, 648, 0, 648, 2324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2274, 0, 0, 0, 0, 0, 0, 701, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 701, 701, 701, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1061, 0, 0, 0, 648, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 648, 0, 0, 648, 0, 2489, 1054,
	0, 0, 0, 0, 0, 1061, 0, 648, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 2049, 0, 0,
	0, 2049, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 701, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1479, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2501, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 701, 0, 0, 0, 701, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 0, 0, 2844, 2737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1479, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 648, 648, 648,
	648, 648, 1477, 0, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 648, 0, 0, 0, 0, 0, 701, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2834, 0,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 2286, 0, 0, 0, 0,
	0, 0, 2859, 0, 0, 0, 0, 0, 0, 0,
	0, 2864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1030, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 1479, 648, 648,
	648, 648, 648, 0, 0, 0, 0, 0, 0, 0,
	3093, 0, 0, 0, 0, 0, 1892, 0, 648, 0,
	0, 648, 3101, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3013, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 1479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 3050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 3077, 1841,
	0, 0, 0, 0, 0, 0, 648, 0, 0, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	0, 2286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 3335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 648, 648, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2286,
	2286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3479, 3480, 3481, 3482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3574, 0, 3576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3803, 0, 0, 0,
	3803, 3803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 0, 0, 0, 0,
	2286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3906, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3884, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 3335, 0, 3936, 1377, 1361, 508, 0, 1304, 1380,
	1273, 1292, 1390, 1295, 1298, 1340, 1251, 1318, 407, 1289,
	1244, 1277, 1246, 1284, 1247, 1275, 1306, 265, 1272, 1363,
	1322, 1379, 358, 262, 1253, 1278, 421, 1294, 202, 1342,
	477, 249, 369, 366, 562, 277, 268, 264, 247, 311,
	377, 419, 498, 413, 1386, 362, 1328, 0, 487, 392,
	0, 0, 0, 1308, 1367, 1316, 1354, 1303, 1341, 1261,
	1327, 1381, 1290, 1337, 1382, 317, 245, 319, 201, 404,
	488, 281, 0, 0, 0, 0, 3908, 921, 0, 0,
	0, 0, 3909, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 343, 352, 351, 332, 333, 335,
	337, 342, 349, 355, 1286, 1334, 1376, 1287, 1336, 260,
	315, 267, 259, 559, 1387, 1366, 1250, 1315, 1375, 0,
	0, 226, 1378, 1310, 0, 1339, 0, 1393, 1245, 1330,
	0, 1248, 1252, 1389, 1371, 1281, 270, 0, 0, 0,
	0, 0, 0, 0, 1307, 1317, 1351, 1355, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 1326,
	0, 0, 0, 1257, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 1260, 0, 1280, 1352, 0, 1243, 292, 1254,
	393, 252, 0, 444, 1359, 1370, 1302, 601, 1374, 1300,
	1299, 1346, 1258, 1365, 1293, 357, 1256, 324, 197, 222,
	0, 1291, 403, 452, 464, 1364, 1276, 1285, 250, 1283,
	462, 417, 579, 230, 279, 449, 423, 460, 431, 282,
	1325, 1344, 461, 364, 564, 441, 576, 602, 603, 258,
	397, 588, 502, 596, 620, 223, 255, 411, 495, 582,
	484, 389, 560, 561, 323, 483, 290, 200, 361, 608,
	221, 470, 363, 239, 228, 566, 585, 284, 447, 615,
	210, 497, 574, 236, 474, 0, 0, 622, 244, 494,
	212, 571, 493, 385, 320, 321, 211, 0, 448, 263,
	288, 0, 0, 253, 406, 568, 569, 251, 623, 225,
	595, 217, 1255, 594, 399, 563, 572, 386, 375, 216,
	570, 384, 374, 328, 347, 348, 275, 301, 438, 367,
	439, 300, 302, 395, 394, 396, 204, 583, 0, 205,
	0, 489, 584, 624, 443, 209, 231, 232, 234, 1271,
	274, 278, 286, 289, 297, 298, 307, 359, 410, 437,
	433, 442, 1360, 558, 577, 589, 600, 606, 607, 609,
	610, 611, 612, 613, 616, 614, 398, 305, 485, 327,
	365, 1349, 1392, 416, 463, 237, 581, 486, 1265, 1270,
	1263, 0, 1331, 1266, 1264, 1320, 1321, 1267, 1383, 1384,
	1385, 1368, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 1353, 1259, 0, 1268, 1269, 1362, 1372, 1373, 643,
	376, 476, 578, 329, 341, 344, 334, 353, 0, 354,
	330, 331, 336, 338, 339, 340, 345, 346, 350, 356,
	246, 207, 382, 390, 557, 306, 213, 214, 215, 504,
	505, 506, 507, 592, 593, 597, 453, 454, 455, 456,
	287, 587, 303, 459, 458, 325, 326, 371, 440, 520,
	522, 533, 537, 539, 541, 547, 550, 521, 523, 534,
	538, 540, 542, 548, 551, 510, 512, 514, 516, 529,
	528, 525, 553, 554, 531, 536, 515, 527, 532, 545,
	552, 549, 509, 513, 517, 526, 544, 543, 524, 535,
	546, 530, 518, 511, 519, 1324, 196, 218, 360, 1388,
	445, 283, 621, 591, 586, 203, 220, 1262, 257, 1274,
	1282, 0, 1288, 1296, 1297, 1309, 1311, 1312, 1313, 1314,
	1332, 1333, 1335, 1343, 1345, 1348, 1350, 1357, 1369, 1391,
	198, 199, 206, 219, 229, 233, 240, 256, 271, 273,
	280, 293, 304, 312, 313, 316, 322, 372, 378, 379,
	380, 381, 400, 401, 402, 405, 408, 409, 412, 414,
	415, 418, 422, 426, 427, 428, 430, 432, 434, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 565, 567, 580, 598,
	604, 471, 295, 296, 435, 436, 308, 309, 618, 619,
	294, 575, 605, 573, 617, 599, 429, 370, 1323, 1329,
	373, 276, 299, 314, 1338, 590, 492, 224, 457, 285,
	248, 1356, 1358, 208, 243, 227, 254, 269, 272, 318,
	383, 391, 420, 425, 291, 266, 241, 450, 238, 475,
	499, 500, 501, 503, 387, 261, 424, 1319, 1347, 368,
	555, 556, 310, 388, 0, 0, 0, 1377, 1361, 508,
	0, 1304, 1380, 1273, 1292, 1390, 1295, 1298, 1340, 1251,
	1318, 407, 1289, 1244, 1277, 1246, 1284, 1247, 1275, 1306,
	265, 1272, 1363, 1322, 1379, 358, 262, 1253, 1278, 421,
	1294, 202, 1342, 477, 249, 369, 366, 562, 277, 268,
	264, 247, 311, 377, 419, 498, 413, 1386, 362, 1328,
	0, 487, 392, 0, 0, 0, 1308, 1367, 1316, 1354,
	1303, 1341, 1261, 1327, 1381, 1290, 1337, 1382, 317, 245,
	319, 201, 404, 488, 281, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 343, 352, 351,
	332, 333, 335, 337, 342, 349, 355, 1286, 1334, 1376,
	1287, 1336, 260, 315, 267, 259, 559, 1387, 1366, 1250,
	1315, 1375, 0, 0, 226, 1378, 1310, 0, 1339, 0,
	1393, 1245, 1330, 0, 1248, 1252, 1389, 1371, 1281, 270,
	0, 0, 0, 0, 0, 0, 0, 1307, 1317, 1351,
	1355, 1301, 0, 0, 0, 0, 0, 0, 3102, 0,
	1279, 0, 1326, 0, 0, 0, 1257, 1249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 1260, 0, 1280, 1352, 0,
	1243, 292, 1254, 393, 252, 0, 444, 1359, 1370, 1302,
	601, 1374, 1300, 1299, 1346, 1258, 1365, 1293, 357, 1256,
	324, 197, 222, 0, 1291, 403, 452, 464, 1364, 1276,
	1285, 250, 1283, 462, 417, 579, 230, 279, 449, 423,
	460, 431, 282, 1325, 1344, 461, 364, 564, 441, 576,
	602, 603, 258, 397, 588, 502, 596, 620, 223, 255,
	411, 495, 582, 484, 389, 560, 561, 323, 483, 290,
	200, 361, 608, 221, 470, 363, 239, 228, 566, 585,
	284, 447, 615, 210, 497, 574, 236, 474, 0, 0,
	622, 244, 494, 212, 571, 493, 385, 320, 321, 211,
	0, 448, 263, 288, 0, 0, 253, 406, 568, 569,
	251, 623, 225, 595, 217, 1255, 594, 399, 563, 572,
	386, 375, 216, 570, 384, 374, 328, 347, 348, 275,
	301, 438, 367, 439, 300, 302, 395, 394, 396, 204,
	583, 0, 205, 0, 489, 584, 624, 443, 209, 231,
	232, 234, 1271, 274, 278, 286, 289, 297, 298, 307,
	359, 410, 437, 433, 442, 1360, 558, 577, 589, 600,
	606, 607, 609, 610, 611, 612, 613, 616, 614, 398,
	305, 485, 327, 365, 1349, 1392, 416, 463, 237, 581,
	486, 1265, 1270, 1263, 0, 1331, 1266, 1264, 1320, 1321,
	1267, 1383, 1384, 1385, 1368, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 1353, 1259, 0, 1268, 1269, 1362,
	1372, 1373, 643, 376, 476, 578, 329, 341, 344, 334,
	353, 0, 354, 330, 331, 336, 338, 339, 340, 345,
	346, 350, 356, 246, 207, 382, 390, 557, 306, 213,
	214, 215, 504, 505, 506, 507, 592, 593, 597, 453,
	454, 455, 456, 287, 587, 303, 459, 458, 325, 326,
	371, 440, 520, 522, 533, 537, 539, 541, 547, 550,
	521, 523, 534, 538, 540, 542, 548, 551, 510, 512,
	514, 516, 529, 528, 525, 553, 554, 531, 536, 515,
	527, 532, 545, 552, 549, 509, 513, 517, 526, 544,
	543, 524, 535, 546, 530, 518, 511, 519, 1324, 196,
	218, 360, 1388, 445, 283, 621, 591, 586, 203, 220,
	1262, 257, 1274, 1282, 0, 1288, 1296, 1297, 1309, 1311,
	1312, 1313, 1314, 1332, 1333, 1335, 1343, 1345, 1348, 1350,
	1357, 1369, 1391, 198, 199, 206, 219, 229, 233, 240,
	256, 271, 273, 280, 293, 304, 312, 313, 316, 322,
	372, 378, 379, 380, 381, 400, 401, 402, 405, 408,
	409, 412, 414, 415, 418, 422, 426, 427, 428, 430,
	432, 434, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 565,
	567, 580, 598, 604, 471, 295, 296, 435, 436, 308,
	309, 618, 619, 294, 575, 605, 573, 617, 599, 429,
	370, 1323, 1329, 373, 276, 299, 314, 1338, 590, 492,
	224, 457, 285, 248, 1356, 1358, 208, 243, 227, 254,
	269, 272, 318, 383, 391, 420, 425, 291, 266, 241,
	450, 238, 475, 499, 500, 501, 503, 387, 261, 424,
	1319, 1347, 368, 555, 556, 310, 388, 0, 0, 0,
	1377, 1361, 508, 0, 1304, 1380, 1273, 1292, 1390, 1295,
	1298, 1340, 1251, 1318, 407, 1289, 1244, 1277, 1246, 1284,
	1247, 1275, 1306, 265, 1272, 1363, 1322, 1379, 358, 262,
	1253, 1278, 421, 1294, 202, 1342, 477, 249, 369, 366,
	562, 277, 268, 264, 247, 311, 377, 419, 498, 413,
	1386, 362, 1328, 0, 487, 392, 0, 0, 0, 1308,
	1367, 1316, 1354, 1303, 1341, 1261, 1327, 1381, 1290, 1337,
	1382, 317, 245, 319, 201, 404, 488, 281, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	343, 352, 351, 332, 333, 335, 337, 342, 349, 355,
	1286, 1334, 1376, 1287, 1336, 260, 315, 267, 259, 559,
	1387, 1366, 1250, 1315, 1375, 0, 0, 226, 1378, 1310,
	0, 1339, 0, 1393, 1245, 1330, 0, 1248, 1252, 1389,
	1371, 1281, 270, 0, 0, 0, 0, 0, 0, 0,
	1307, 1317, 1351, 1355, 1301, 0, 0, 0, 0, 0,
	0, 3063, 0, 1279, 0, 1326, 0, 0, 0, 1257,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 1260, 0,
	1280, 1352, 0, 1243, 292, 1254, 393, 252, 0, 444,
	1359, 1370, 1302, 601, 1374, 1300, 1299, 1346, 1258, 1365,
	1293, 357, 1256, 324, 197, 222, 0, 1291, 403, 452,
	464, 1364, 1276, 1285, 250, 1283, 462, 417, 579, 230,
	279, 449, 423, 460, 431, 282, 1325, 1344, 461, 364,
	564, 441, 576, 602, 603, 258, 397, 588, 502, 596,
	620, 223, 255, 411, 495, 582, 484, 389, 560, 561,
	323, 483, 290, 200, 361, 608, 221, 470, 363, 239,
	228, 566, 585, 284, 447, 615, 210, 497, 574, 236,
	474, 0, 0, 622, 244, 494, 212, 571, 493, 385,
	320, 321, 211, 0, 448, 263, 288, 0, 0, 253,
	406, 568, 569, 251, 623, 225, 595, 217, 1255, 594,
	399, 563, 572, 386, 375, 216, 570, 384, 374, 328,
	347, 348, 275, 301, 438, 367, 439, 300, 302, 395,
	394, 396, 204, 583, 0, 205, 0, 489, 584, 624,
	443, 209, 231, 232, 234, 1271, 274, 278, 286, 289,
	297, 298, 307, 359, 410, 437, 433, 442, 1360, 558,
	577, 589, 600, 606, 607, 609, 610, 611, 612, 613,
	616, 614, 398, 305, 485, 327, 365, 1349, 1392, 416,
	463, 237, 581, 486, 1265, 1270, 1263, 0, 1331, 1266,
	1264, 1320, 1321, 1267, 1383, 1384, 1385, 1368, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 0, 1353, 1259, 0,
	1268, 1269, 1362, 1372, 1373, 643, 376, 476, 578, 329,
	341, 344, 334, 353, 0, 354, 330, 331, 336, 338,
	339, 340, 345, 346, 350, 356, 246, 207, 382, 390,
	557, 306, 213, 214, 215, 504, 505, 506, 507, 592,
	593, 597, 453, 454, 455, 456, 287, 587, 303, 459,
	458, 325, 326, 371, 440, 520, 522, 533, 537, 539,
	541, 547, 550, 521, 523, 534, 538, 540, 542, 548,
	551, 510, 512, 514, 516, 529, 528, 525, 553, 554,
	531, 536, 515, 527, 532, 545, 552, 549, 509, 513,
	517, 526, 544, 543, 524, 535, 546, 530, 518, 511,
	519, 1324, 196, 218, 360, 1388, 445, 283, 621, 591,
	586, 203, 220, 1262, 257, 1274, 1282, 0, 1288, 1296,
	1297, 1309, 1311, 1312, 1313, 1314, 1332, 1333, 1335, 1343,
	1345, 1348, 1350, 1357, 1369, 1391, 198, 199, 206, 219,
	229, 233, 240, 256, 271, 273, 280, 293, 304, 312,
	313, 316, 322, 372, 378, 379, 380, 381, 400, 401,
	402, 405, 408, 409, 412, 414, 415, 418, 422, 426,
	427, 428, 430, 432, 434, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 565, 567, 580, 598, 604, 471, 295, 296,
	435, 436, 308, 309, 618, 619, 294, 575, 605, 573,
	617, 599, 429, 370, 1323, 1329, 373, 276, 299, 314,
	1338, 590, 492, 224, 457, 285, 248, 1356, 1358, 208,
	243, 227, 254, 269, 272, 318, 383, 391, 420, 425,
	291, 266, 241, 450, 238, 475, 499, 500, 501, 503,
	387, 261, 424, 1319, 1347, 368, 555, 556, 310, 388,
	0, 0, 0, 1377, 1361, 508, 0, 1304, 1380, 1273,
	1292, 1390, 1295, 1298, 1340, 1251, 1318, 407, 1289, 1244,
	1277, 1246, 1284, 1247, 1275, 1306, 265, 1272, 1363, 1322,
	1379, 358, 262, 1253, 1278, 421, 1294, 202, 1342, 477,
	249, 369, 366, 562, 277, 268, 264, 247, 311, 377,
	419, 498, 413, 1386, 362, 1328, 0, 487, 392, 0,
	0, 0, 1308, 1367, 1316, 1354, 1303, 1341, 1261, 1327,
	1381, 1290, 1337, 1382, 317, 245, 319, 201, 404, 488,
	281, 0, 0, 0, 0, 0, 921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 343, 352, 351, 332, 333, 335, 337,
	342, 349, 355, 1286, 1334, 1376, 1287, 1336, 260, 315,
	267, 259, 559, 1387, 1366, 1250, 1315, 1375, 0, 0,
	226, 1378, 1310, 0, 1339, 0, 1393, 1245, 1330, 0,
	1248, 1252, 1389, 1371, 1281, 270, 0, 0, 0, 0,
	0, 0, 0, 1307, 1317, 1351, 1355, 1301, 0, 0,
	0, 0, 0, 0, 2303, 0, 1279, 0, 1326, 0,
	0, 0, 1257, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 1260, 0, 1280, 1352, 0, 1243, 292, 1254, 393,
	252, 0, 444, 1359, 1370, 1302, 601, 1374, 1300, 1299,
	1346, 1258, 1365, 1293, 357, 1256, 324, 197, 222, 0,
	1291, 403, 452, 464, 1364, 1276, 1285, 250, 1283, 462,
	417, 579, 230, 279, 449, 423, 460, 431, 282, 1325,
	1344, 461, 364, 564, 441, 576, 602, 603, 258, 397,
	588, 502, 596, 620, 223, 255, 411, 495, 582, 484,
	389, 560, 561, 323, 483, 290, 200, 361, 608, 221,
	470, 363, 239, 228, 566, 585, 284, 447, 615, 210,
	497, 574, 236, 474, 0, 0, 622, 244, 494, 212,
	571, 493, 385, 320, 321, 211, 0, 448, 263, 288,
	0, 0, 253, 406, 568, 569, 251, 623, 225, 595,
	217, 1255, 594, 399, 563, 572, 386, 375, 216, 570,
	384, 374, 328, 347, 348, 275, 301, 438, 367, 439,
	300, 302, 395, 394, 396, 204, 583, 0, 205, 0,
	489, 584, 624, 443, 209, 231, 232, 234, 1271, 274,
	278, 286, 289, 297, 298, 307, 359, 410, 437, 433,
	442, 1360, 558, 577, 589, 600, 606, 607, 609, 610,
	611, 612, 613, 616, 614, 398, 305, 485, 327, 365,
	1349, 1392, 416, 463, 237, 581, 486, 1265, 1270, 1263,
	0, 1331, 1266, 1264, 1320, 1321, 1267, 1383, 1384, 1385,
	1368, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 0,
	1353, 1259, 0, 1268, 1269, 1362, 1372, 1373, 643, 376,
	476, 578, 329, 341, 344, 334, 353, 0, 354, 330,
	331, 336, 338, 339, 340, 345, 346, 350, 356, 246,
	207, 382, 390, 557, 306, 213, 214, 215, 504, 505,
	506, 507, 592, 593, 597, 453, 454, 455, 456, 287,
	587, 303, 459, 458, 325, 326, 371, 440, 520, 522,
	533, 537, 539, 541, 547, 550, 521, 523, 534, 538,
	540, 542, 548, 551, 510, 512, 514, 516, 529, 528,
	525, 553, 554, 531, 536, 515, 527, 532, 545, 552,
	549, 509, 513, 517, 526, 544, 543, 524, 535, 546,
	530, 518, 511, 519, 1324, 196, 218, 360, 1388, 445,
	283, 621, 591, 586, 203, 220, 1262, 257, 1274, 1282,
	0, 1288, 1296, 1297, 1309, 1311, 1312, 1313, 1314, 1332,
	1333, 1335, 1343, 1345, 1348, 1350, 1357, 1369, 1391, 198,
	199, 206, 219, 229, 233, 240, 256, 271, 273, 280,
	293, 304, 312, 313, 316, 322, 372, 378, 379, 380,
	381, 400, 401, 402, 405, 408, 409, 412, 414, 415,
	418, 422, 426, 427, 428, 430, 432, 434, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 565, 567, 580, 598, 604,
	471, 295, 296, 435, 436, 308, 309, 618, 619, 294,
	575, 605, 573, 617, 599, 429, 370, 1323, 1329, 373,
	276, 299, 314, 1338, 590, 492, 224, 457, 285, 248,
	1356, 1358, 208, 243, 227, 254, 269, 272, 318, 383,
	391, 420, 425, 291, 266, 241, 450, 238, 475, 499,
	500, 501, 503, 387, 261, 424, 1319, 1347, 368, 555,
	556, 310, 388, 0, 0, 0, 1377, 1361, 508, 0,
	1304, 1380, 1273, 1292, 1390, 1295, 1298, 1340, 1251, 1318,
	407, 1289, 1244, 1277, 1246, 1284, 1247, 1275, 1306, 265,
	1272, 1363, 1322, 1379, 358, 262, 1253, 1278, 421, 1294,
	202, 1342, 477, 249, 369, 366, 562, 277, 268, 264,
	247, 311, 377, 419, 498, 413, 1386, 362, 1328, 0,
	487, 392, 0, 0, 0, 1308, 1367, 1316, 1354, 1303,
	1341, 1261, 1327, 1381, 1290, 1337, 1382, 317, 245, 319,
	201, 404, 488, 281, 0, 94, 0, 0, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 343, 352, 351, 332,
	333, 335, 337, 342, 349, 355, 1286, 1334, 1376, 1287,
	1336, 260, 315, 267, 259, 559, 1387, 1366, 1250, 1315,
	1375, 0, 0, 226, 1378, 1310, 0, 1339, 0, 1393,
	1245, 1330, 0, 1248, 1252, 1389, 1371, 1281, 270, 0,
	0, 0, 0, 0, 0, 0, 1307, 1317, 1351, 1355,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	0, 1326, 0, 0, 0, 1257, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 1260, 0, 1280, 1352, 0, 1243,
	292, 1254, 393, 252, 0, 444, 1359, 1370, 1302, 601,
	1374, 1300, 1299, 1346, 1258, 1365, 1293, 357, 1256, 324,
	197, 222, 0, 1291, 403, 452, 464, 1364, 1276, 1285,
	250, 1283, 462, 417, 579, 230, 279, 449, 423, 460,
	431, 282, 1325, 1344, 461, 364, 564, 441, 576, 602,
	603, 258, 397, 588, 502, 596, 620, 223, 255, 411,
	495, 582, 484, 389, 560, 561, 323, 483, 290, 200,
	361, 608, 221, 470, 363, 239, 228, 566, 585, 284,
	447, 615, 210, 497, 574, 236, 474, 0, 0, 622,
	244, 494, 212, 571, 493, 385, 320, 321, 211, 0,
	448, 263, 288, 0, 0, 253, 406, 568, 569, 251,
	623, 225, 595, 217, 1255, 594, 399, 563, 572, 386,
	375, 216, 570, 384, 374, 328, 347, 348, 275, 301,
	438, 367, 439, 300, 302, 395, 394, 396, 204, 583,
	0, 205, 0, 489, 584, 624, 443, 209, 231, 232,
	234, 1271, 274, 278, 286, 289, 297, 298, 307, 359,
	410, 437, 433, 442, 1360, 558, 577, 589, 600, 606,
	607, 609, 610, 611, 612, 613, 616, 614, 398, 305,
	485, 327, 365, 1349, 1392, 416, 463, 237, 581, 486,
	1265, 1270, 1263, 0, 1331, 1266, 1264, 1320, 1321, 1267,
	1383, 1384, 1385, 1368, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 0, 1353, 1259, 0, 1268, 1269, 1362, 1372,
	1373, 643, 376, 476, 578, 329, 341, 344, 334, 353,
	0, 354, 330, 331, 336, 338, 339, 340, 345, 346,
	350, 356, 246, 207, 382, 390, 557, 306, 213, 214,
	215, 504, 505, 506, 507, 592, 593, 597, 453, 454,
	455, 456, 287, 587, 303, 459, 458, 325, 326, 371,
	440, 520, 522, 533, 537, 539, 541, 547, 550, 521,
	523, 534, 538, 540, 542, 548, 551, 510, 512, 514,
	516, 529, 528, 525, 553, 554, 531, 536, 515, 527,
	532, 545, 552, 549, 509, 513, 517, 526, 544, 543,
	524, 535, 546, 530, 518, 511, 519, 1324, 196, 218,
	360, 1388, 445, 283, 621, 591, 586, 203, 220, 1262,
	257, 1274, 1282, 0, 1288, 1296, 1297, 1309, 1311, 1312,
	1313, 1314, 1332, 1333, 1335, 1343, 1345, 1348, 1350, 1357,
	1369, 1391, 198, 199, 206, 219, 229, 233, 240, 256,
	271, 273, 280, 293, 304, 312, 313, 316, 322, 372,
	378, 379, 380, 381, 400, 401, 402, 405, 408, 409,
	412, 414, 415, 418, 422, 426, 427, 428, 430, 432,
	434, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 565, 567,
	580, 598, 604, 471, 295, 296, 435, 436, 308, 309,
	618, 619, 294, 575, 605, 573, 617, 599, 429, 370,
	1323, 1329, 373, 276, 299, 314, 1338, 590, 492, 224,
	457, 285, 248, 1356, 1358, 208, 243, 227, 254, 269,
	272, 318, 383, 391, 420, 425, 291, 266, 241, 450,
	238, 475, 499, 500, 501, 503, 387, 261, 424, 1319,
	1347, 368, 555, 556, 310, 388, 0, 0, 0, 1377,
	1361, 508, 0, 1304, 1380, 1273, 1292, 1390, 1295, 1298,
	1340, 1251, 1318, 407, 1289, 1244, 1277, 1246, 1284, 1247,
	1275, 1306, 265, 1272, 1363, 1322, 1379, 358, 262, 1253,
	1278, 421, 1294, 202, 1342, 477, 249, 369, 366, 562,
	277, 268, 264, 247, 311, 377, 419, 498, 413, 1386,
	362, 1328, 0, 487, 392, 0, 0, 0, 1308, 1367,
	1316, 1354, 1303, 1341, 1261, 1327, 1381, 1290, 1337, 1382,
	317, 245, 319, 201, 404, 488, 281, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 343,
	352, 351, 332, 333, 335, 337, 342, 349, 355, 1286,
	1334, 1376, 1287, 1336, 260, 315, 267, 259, 559, 1387,
	1366, 1250, 1315, 1375, 0, 0, 226, 1378, 1310, 0,
	1339, 0, 1393, 1245, 1330, 0, 1248, 1252, 1389, 1371,
	1281, 270, 0, 0, 0, 0, 0, 0, 0, 1307,
	1317, 1351, 1355, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 1326, 0, 0, 0, 1257, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 1260, 0, 1280,
	1352, 0, 1243, 292, 1254, 393, 252, 0, 444, 1359,
	1370, 1302, 601, 1374, 1300, 1299, 1346, 1258, 1365, 1293,
	357, 1256, 324, 197, 222, 0, 1291, 403, 452, 464,
	1364, 1276, 1285, 250, 1283, 462, 417, 579, 230, 279,
	449, 423, 460, 431, 282, 1325, 1344, 461, 364, 564,
	441, 576, 602, 603, 258, 397, 588, 502, 596, 620,
	223, 255, 411, 495, 582, 484, 389, 560, 561, 323,
	483, 290, 200, 361, 608, 221, 470, 363, 239, 228,
	566, 585, 284, 447, 615, 210, 497, 574, 236, 474,
	0, 0, 622, 244, 494, 212, 571, 493, 385, 320,
	321, 211, 0, 448, 263, 288, 0, 0, 253, 406,
	568, 569, 251, 623, 225, 595, 217, 1255, 594, 399,
	563, 572, 386, 375, 216, 570, 384, 374, 328, 347,
	348, 275, 301, 438, 367, 439, 300, 302, 395, 394,
	396, 204, 583, 0, 205, 0, 489, 584, 624, 443,
	209, 231, 232, 234, 1271, 274, 278, 286, 289, 297,
	298, 307, 359, 410, 437, 433, 442, 1360, 558, 577,
	589, 600, 606, 607, 609, 610, 611, 612, 613, 616,
	614, 398, 305, 485, 327, 365, 1349, 1392, 416, 463,
	237, 581, 486, 1265, 1270, 1263, 0, 1331, 1266, 1264,
	1320, 1321, 1267, 1383, 1384, 1385, 1368, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 0, 1353, 1259, 0, 1268,
	1269, 1362, 1372, 1373, 643, 376, 476, 578, 329, 341,
	344, 334, 353, 0, 354, 330, 331, 336, 338, 339,
	340, 345, 346, 350, 356, 246, 207, 382, 390, 557,
	306, 213, 214, 215, 504, 505, 506, 507, 592, 593,
	597, 453, 454, 455, 456, 287, 587, 303, 459, 458,
	325, 326, 371, 440, 520, 522, 533, 537, 539, 541,
	547, 550, 521, 523, 534, 538, 540, 542, 548, 551,
	510, 512, 514, 516, 529, 528, 525, 553, 554, 531,
	536, 515, 527, 532, 545, 552, 549, 509, 513, 517,
	526, 544, 543, 524, 535, 546, 530, 518, 511, 519,
	1324, 196, 218, 360, 1388, 445, 283, 621, 591, 586,
	203, 220, 1262, 257, 1274, 1282, 0, 1288, 1296, 1297,
	1309, 1311, 1312, 1313, 1314, 1332, 1333, 1335, 1343, 1345,
	1348, 1350, 1357, 1369, 1391, 198, 199, 206, 219, 229,
	233, 240, 256, 271, 273, 280, 293, 304, 312, 313,
	316, 322, 372, 378, 379, 380, 381, 400, 401, 402,
	405, 408, 409, 412, 414, 415, 418, 422, 426, 427,
	428, 430, 432, 434, 446, 451, 465, 466, 467, 468,
	469, 472, 473, 478, 479, 480, 481, 482, 490, 491,
	496, 565, 567, 580, 598, 604, 471, 295, 296, 435,
	436, 308, 309, 618, 619, 294, 575, 605, 573, 617,
	599, 429, 370, 1323, 1329, 373, 276, 299, 314, 1338,
	590, 492, 224, 457, 285, 248, 1356, 1358, 208, 243,
	227, 254, 269, 272, 318, 383, 391, 420, 425, 291,
	266, 241, 450, 238, 475, 499, 500, 501, 503, 387,
	261, 424, 1319, 1347, 368, 555, 556, 310, 388, 0,
	0, 0, 1377, 1361, 508, 0, 1304, 1380, 1273, 1292,
	1390, 1295, 1298, 1340, 1251, 1318, 407, 1289, 1244, 1277,
	1246, 1284, 1247, 1275, 1306, 265, 1272, 1363, 1322, 1379,
	358, 262, 1253, 1278, 421, 1294, 202, 1342, 477, 249,
	369, 366, 562, 277, 268, 264, 247, 311, 377, 419,
	498, 413, 1386, 362, 1328, 0, 487, 392, 0, 0,
	0, 1308, 1367, 1316, 1354, 1303, 1341, 1261, 1327, 1381,
	1290, 1337, 1382, 317, 245, 319, 201, 404, 488, 281,
	0, 0, 0, 0, 0, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 343, 352, 351, 332, 333, 335, 337, 342,
	349, 355, 1286, 1334, 1376, 1287, 1336, 260, 315, 267,
	259, 559, 1387, 1366, 1250, 1315, 1375, 0, 0, 226,
	1378, 1310, 0, 1339, 0, 1393, 1245, 1330, 0, 1248,
	1252, 1389, 1371, 1281, 270, 0, 0, 0, 0, 0,
	0, 0, 1307, 1317, 1351, 1355, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 1326, 0, 0,
	0, 1257, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	1260, 0, 1280, 1352, 0, 1243, 292, 1254, 393, 252,
	0, 444, 1359, 1370, 1302, 601, 1374, 1300, 1299, 1346,
	1258, 1365, 1293, 357, 1256, 324, 197, 222, 0, 1291,
	403, 452, 464, 1364, 1276, 1285, 250, 1283, 462, 417,
	579, 230, 279, 449, 423, 460, 431, 282, 1325, 1344,
	461, 364, 564, 441, 576, 602, 603, 258, 397, 588,
	502, 596, 620, 223, 255, 411, 495, 582, 484, 389,
	560, 561, 323, 483, 290, 200, 361, 608, 221, 470,
	363, 239, 228, 566, 585, 284, 447, 615, 210, 497,
	574, 236, 474, 0, 0, 622, 244, 494, 212, 571,
	493, 385, 320, 321, 211, 0, 448, 263, 288, 0,
	0, 253, 406, 568, 569, 251, 623, 225, 595, 217,
	1255, 594, 399, 563, 572, 386, 375, 216, 570, 384,
	374, 328, 347, 348, 275, 301, 438, 367, 439, 300,
	302, 395, 394, 396, 204, 583, 0, 205, 0, 489,
	584, 624, 443, 209, 231, 232, 234, 1271, 274, 278,
	286, 289, 297, 298, 307, 359, 410, 437, 433, 442,
	1360, 558, 577, 589, 600, 606, 607, 609, 610, 611,
	612, 613, 616, 614, 398, 305, 485, 327, 365, 1349,
	1392, 416, 463, 237, 581, 486, 1265, 1270, 1263, 0,
	1331, 1266, 1264, 1320, 1321, 1267, 1383, 1384, 1385, 1368,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 0, 1353,
	1259, 0, 1268, 1269, 1362, 1372, 1373, 643, 376, 476,
	578, 329, 341, 344, 334, 353, 0, 354, 330, 331,
	336, 338, 339, 340, 345, 346, 350, 356, 246, 207,
	382, 390, 557, 306, 213, 214, 215, 504, 505, 506,
	507, 592, 593, 597, 453, 454, 455, 456, 287, 587,
	303, 459, 458, 325, 326, 371, 440, 520, 522, 533,
	537, 539, 541, 547, 550, 521, 523, 534, 538, 540,
	542, 548, 551, 510, 512, 514, 516, 529, 528, 525,
	553, 554, 531, 536, 515, 527, 532, 545, 552, 549,
	509, 513, 517, 526, 544, 543, 524, 535, 546, 530,
	518, 511, 519, 1324, 196, 218, 360, 1388, 445, 283,
	621, 591, 586, 203, 220, 1262, 257, 1274, 1282, 0,
	1288, 1296, 1297, 1309, 1311, 1312, 1313, 1314, 1332, 1333,
	1335, 1343, 1345, 1348, 1350, 1357, 1369, 1391, 198, 199,
	206, 219, 229, 233, 240, 256, 271, 273, 280, 293,
	304, 312, 313, 316, 322, 372, 378, 379, 380, 381,
	400, 401, 402, 405, 408, 409, 412, 414, 415, 418,
	422, 426, 427, 428, 430, 432, 434, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 565, 567, 580, 598, 604, 471,
	295, 296, 435, 436, 308, 309, 618, 619, 294, 575,
	605, 573, 617, 599, 429, 370, 1323, 1329, 373, 276,
	299, 314, 1338, 590, 492, 224, 457, 285, 248, 1356,
	1358, 208, 243, 227, 254, 269, 272, 318, 383, 391,
	420, 425, 291, 266, 241, 450, 238, 475, 499, 500,
	501, 503, 387, 261, 424, 1319, 1347, 368, 555, 556,
	310, 388, 0, 0, 0, 1377, 1361, 508, 0, 1304,
	1380, 1273, 1292, 1390, 1295, 1298, 1340, 1251, 1318, 407,
	1289, 1244, 1277, 1246, 1284, 1247, 1275, 1306, 265, 1272,
	1363, 1322, 1379, 358, 262, 1253, 1278, 421, 1294, 202,
	1342, 477, 249, 369, 366, 562, 277, 268, 264, 247,
	311, 377, 419, 498, 413, 1386, 362, 1328, 0, 487,
	392, 0, 0, 0, 1308, 1367, 1316, 1354, 1303, 1341,
	1261, 1327, 1381, 1290, 1337, 1382, 317, 245, 319, 201,
	404, 488, 281, 0, 0, 0, 0, 0, 921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 343, 352, 351, 332, 333,
	335, 337, 342, 349, 355, 1286, 1334, 1376, 1287, 1336,
	260, 315, 267, 259, 559, 1387, 1366, 1250, 1315, 1375,
	0, 0, 226, 1378, 1310, 0, 1339, 0, 1393, 1245,
	1330, 0, 1248, 1252, 1389, 1371, 1281, 270, 0, 0,
	0, 0, 0, 0, 0, 1307, 1317, 1351, 1355, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 1279, 0,
	1326, 0, 0, 0, 1257, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 1260, 0, 1280, 1352, 0, 1243, 292,
	1254, 393, 252, 0, 444, 1359, 1370, 1302, 601, 1374,
	1300, 1299, 1346, 1258, 1365, 1293, 357, 1256, 324, 197,
	222, 0, 1291, 403, 452, 464, 1364, 1276, 1285, 250,
	1283, 462, 417, 579, 230, 279, 449, 423, 460, 431,
	282, 1325, 1344, 461, 364, 564, 441, 576, 602, 603,
	258, 397, 588, 502, 596, 620, 223, 255, 411, 495,
	582, 484, 389, 560, 561, 323, 483, 290, 200, 361,
	608, 221, 470, 363, 239, 228, 566, 585, 284, 447,
	615, 210, 497, 574, 236, 474, 0, 0, 622, 244,
	494, 212, 571, 493, 385, 320, 321, 211, 0, 448,
	263, 288, 0, 0, 253, 406, 568, 569, 251, 623,
	225, 595, 217, 1255, 594, 399, 563, 572, 386, 375,
	216, 570, 384, 374, 328, 347, 348, 275, 301, 438,
	367, 439, 300, 302, 395, 394, 396, 204, 583, 0,
	205, 0, 489, 584, 624, 443, 209, 231, 232, 234,
	1271, 274, 278, 286, 289, 297, 298, 307, 359, 410,
	437, 433, 442, 1360, 558, 577, 589, 600, 606, 607,
	609, 610, 611, 612, 613, 616, 614, 398, 305, 485,
	327, 365, 1349, 1392, 416, 463, 237, 581, 486, 1265,
	1270, 1263, 0, 1331, 1266, 1264, 1320, 1321, 1267, 1383,
	1384, 1385, 1368, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 0, 1353, 1259, 0, 1268, 1269, 1362, 1372, 1373,
	643, 376, 476, 578, 329, 341, 344, 334, 353, 0,
	354, 330, 331, 336, 338, 339, 340, 345, 346, 350,
	356, 246, 207, 382, 390, 557, 306, 213, 214, 215,
	504, 505, 506, 507, 592, 593, 597, 453, 454, 455,
	456, 287, 587, 303, 459, 458, 325, 326, 371, 440,
	520, 522, 533, 537, 539, 541, 547, 550, 521, 523,
	534, 538, 540, 542, 548, 551, 510, 512, 514, 516,
	529, 528, 525, 553, 554, 531, 536, 515, 527, 532,
	545, 552, 549, 509, 513, 517, 526, 544, 543, 524,
	535, 546, 530, 518, 511, 519, 1324, 196, 218, 360,
	1388, 445, 283, 621, 591, 586, 203, 220, 1262, 257,
	1274, 1282, 0, 1288, 1296, 1297, 1309, 1311, 1312, 1313,
	1314, 1332, 1333, 1335, 1343, 1345, 1348, 1350, 1357, 1369,
	1391, 198, 199, 206, 219, 229, 233, 240, 256, 271,
	273, 280, 293, 304, 312, 313, 316, 322, 372, 378,
	379, 380, 381, 400, 401, 402, 405, 408, 409, 412,
	414, 415, 418, 422, 426, 427, 428, 430, 432, 434,
	446, 451, 465, 466, 467, 468, 469, 472, 473, 478,
	479, 480, 481, 482, 490, 491, 496, 565, 567, 580,
	598, 604, 471, 295, 296, 435, 436, 308, 309, 618,
	619, 294, 575, 605, 573, 617, 599, 429, 370, 1323,
	1329, 373, 276, 299, 314, 1338, 590, 492, 224, 457,
	285, 248, 1356, 1358, 208, 243, 227, 254, 269, 272,
	318, 383, 391, 420, 425, 291, 266, 241, 450, 238,
	475, 499, 500, 501, 503, 387, 261, 424, 1319, 1347,
	368, 555, 556, 310, 388, 0, 0, 0, 0, 0,
	508, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 733, 0, 0,
	0, 265, 738, 0, 0, 0, 358, 262, 0, 0,
	421, 0, 202, 0, 477, 249, 369, 366, 562, 277,
	268, 264, 247, 311, 377, 419, 498, 413, 745, 362,
	0, 0, 487, 392, 0, 0, 0, 0, 0, 741,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	245, 319, 201, 404, 488, 281, 0, 94, 0, 0,
	937, 921, 717, 887, 925, 938, 939, 940, 941, 926,
	0, 235, 927, 928, 242, 929, 0, 886, 775, 777,
	776, 840, 841, 842, 843, 844, 845, 846, 773, 934,
	942, 943, 0, 260, 315, 267, 259, 559, 0, 0,
	2129, 2130, 2131, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 713, 730, 0, 744, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 728, 0,
	0, 0, 0, 881, 0, 729, 0, 0, 737, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 393, 252, 0, 444, 880, 0,
	0, 601, 0, 0, 878, 0, 0, 0, 0, 357,
	0, 324, 197, 222, 0, 0, 403, 452, 464, 0,
	0, 0, 931, 0, 462, 417, 579, 230, 279, 449,
	423, 460, 431, 282, 0, 0, 461, 364, 564, 441,
	576, 602, 603, 258, 397, 588, 502, 596, 620, 223,
	255, 411, 495, 582, 484, 389, 560, 561, 323, 483,
	290, 200, 361, 608, 221, 470, 363, 239, 228, 566,
	585, 284, 447, 615, 210, 497, 574, 236, 474, 0,
	0, 622, 244, 494, 212, 571, 493, 385, 320, 321,
	211, 0, 448, 263, 288, 0, 0, 253, 406, 932,
	933, 251, 623, 781, 595, 217, 0, 594, 399, 563,
	572, 386, 375, 216, 570, 384, 374, 328, 789, 790,
	275, 301, 866, 865, 864, 300, 302, 862, 863, 861,
	204, 583, 0, 205, 0, 489, 584, 624, 443, 209,
	231, 232, 234, 0, 274, 278, 286, 289, 297, 298,
	307, 359, 410, 437, 433, 442, 0, 558, 577, 589,
	600, 606, 607, 609, 610, 611, 612, 613, 616, 614,
	398, 305, 485, 327, 365, 0, 0, 416, 463, 237,
	581, 486, 890, 879, 750, 751, 894, 753, 754, 891,
	892, 747, 748, 752, 893, 895, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 0, 882, 736, 735, 0, 743,
	0, 771, 772, 774, 778, 779, 780, 791, 838, 839,
	847, 849, 850, 848, 851, 852, 853, 856, 857, 858,
	859, 854, 855, 860, 755, 759, 756, 757, 758, 770,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	905, 906, 907, 908, 909, 910, 784, 788, 787, 785,
	786, 782, 783, 810, 809, 811, 812, 813, 814, 815,
	816, 818, 817, 819, 820, 821, 822, 823, 824, 792,
	793, 796, 797, 795, 794, 798, 807, 808, 799, 800,
	801, 802, 803, 804, 806, 805, 825, 826, 827, 828,
	829, 831, 830, 834, 835, 833, 832, 837, 836, 734,
	196, 218, 360, 0, 445, 283, 621, 591, 586, 203,
	220, 896, 257, 897, 0, 0, 901, 0, 0, 0,
	903, 902, 0, 904, 870, 869, 0, 0, 898, 899,
	0, 900, 0, 0, 198, 199, 206, 219, 229, 233,
	240, 256, 271, 273, 280, 293, 304, 312, 313, 316,
	322, 372, 378, 379, 380, 381, 400, 401, 402, 405,
	408, 409, 412, 414, 415, 418, 422, 426, 427, 428,
	430, 432, 434, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	565, 567, 580, 598, 604, 471, 911, 912, 913, 914,
	915, 916, 917, 918, 294, 575, 605, 573, 617, 599,
	429, 370, 0, 0, 373, 276, 299, 314, 0, 590,
	492, 224, 457, 285, 248, 936, 0, 208, 243, 227,
	254, 269, 272, 318, 383, 391, 420, 425, 291, 266,
	241, 450, 238, 475, 499, 500, 501, 503, 387, 261,
	424, 388, 0, 368, 555, 556, 310, 508, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 733, 0, 0, 0, 265, 738,
	0, 0, 0, 358, 262, 0, 0, 421, 0, 202,
	0, 477, 249, 369, 366, 562, 277, 268, 264, 247,
	311, 377, 419, 498, 413, 745, 362, 0, 0, 487,
	392, 0, 0, 0, 0, 0, 741, 742, 0, 0,
	0, 0, 0, 0, 2332, 0, 317, 245, 319, 201,
	404, 488, 281, 0, 94, 0, 0, 937, 921, 717,
	887, 925, 938, 939, 940, 941, 926, 0, 235, 927,
	928, 242, 929, 0, 886, 775, 777, 776, 840, 841,
	842, 843, 844, 845, 846, 773, 934, 942, 943, 2333,
	260, 315, 267, 259, 559, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	713, 730, 0, 744, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 728, 0, 0, 0, 0,
	881, 0, 729, 0, 0, 737, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	0, 393, 252, 0, 444, 880, 0, 0, 601, 0,
	0, 878, 0, 0, 0, 0, 357, 0, 324, 197,
	222, 0, 0, 403, 452, 464, 0, 0, 0, 931,
	0, 462, 417, 579, 230, 279, 449, 423, 460, 431,
	282, 0, 0, 461, 364, 564, 441, 576, 602, 603,
	258, 397, 588, 502, 596, 620, 223, 255, 411, 495,
	582, 484, 389, 560, 561, 323, 483, 290, 200, 361,
	608, 221, 470, 363, 239, 228, 566, 585, 284, 447,
	615, 210, 497, 574, 236, 474, 0, 0, 622, 244,
	494, 212, 571, 493, 385, 320, 321, 211, 0, 448,
	263, 288, 0, 0, 253, 406, 932, 933, 251, 623,
	781, 595, 217, 0, 594, 399, 563, 572, 386, 375,
	216, 570, 384, 374, 328, 789, 790, 275, 301, 866,
	865, 864, 300, 302, 862, 863, 861, 204, 583, 0,
	205, 0, 489, 584, 624, 443, 209, 231, 232, 234,
	0, 274, 278, 286, 289, 297, 298, 307, 359, 410,
	437, 433, 442, 0, 558, 577, 589, 600, 606, 607,
	609, 610, 611, 612, 613, 616, 614, 398, 305, 485,
	327, 365, 0, 0, 416, 463, 237, 581, 486, 890,
	879, 750, 751, 894, 753, 754, 891, 892, 747, 748,
	752, 893, 895, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 0, 882, 736, 735, 0, 743, 0, 771, 772,
	774, 778, 779, 780, 791, 838, 839, 847, 849, 850,
	848, 851, 852, 853, 856, 857, 858, 859, 854, 855,
	860, 755, 759, 756, 757, 758, 770, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 905, 906, 907,
	908, 909, 910, 784, 788, 787, 785, 786, 782, 783,
	810, 809, 811, 812, 813, 814, 815, 816, 818, 817,
	819, 820, 821, 822, 823, 824, 792, 793, 796, 797,
	795, 794, 798, 807, 808, 799, 800, 801, 802, 803,
	804, 806, 805, 825, 826, 827, 828, 829, 831, 830,
	834, 835, 833, 832, 837, 836, 734, 196, 218, 360,
	0, 445, 283, 621, 591, 586, 203, 220, 896, 257,
	897, 0, 0, 901, 0, 0, 0, 903, 902, 0,
	904, 870, 869, 0, 0, 898, 899, 0, 900, 0,
	0, 198, 199, 206, 219, 229, 233, 240, 256, 271,
	273, 280, 293, 304, 312, 313, 316, 322, 372, 378,
	379, 380, 381, 400, 401, 402, 405, 408, 409, 412,
	414, 415, 418, 422, 426, 427, 428, 430, 432, 434,
	446, 451, 465, 466, 467, 468, 469, 472, 473, 478,
	479, 480, 481, 482, 490, 491, 496, 565, 567, 580,
	598, 604, 471, 911, 912, 913, 914, 915, 916, 917,
	918, 294, 575, 605, 573, 617, 599, 429, 370, 0,
	0, 373, 276, 299, 314, 0, 590, 492, 224, 457,
	285, 248, 936, 0, 208, 243, 227, 254, 269, 272,
	318, 383, 391, 420, 425, 291, 266, 241, 450, 238,
	475, 499, 500, 501, 503, 387, 261, 424, 0, 388,
	368, 555, 556, 310, 85, 508, 0, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 733, 0, 0, 0, 265, 738, 0, 0,
	0, 358, 262, 0, 0, 421, 0, 202, 0, 477,
	249, 369, 366, 562, 277, 268, 264, 247, 311, 377,
	419, 498, 413, 745, 362, 0, 0, 487, 392, 0,
	0, 0, 0, 0, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 245, 319, 201, 404, 488,
	281, 0, 94, 0, 0, 937, 921, 717, 887, 925,
	938, 939, 940, 941, 926, 0, 235, 927, 928, 242,
	929, 0, 886, 775, 777, 776, 840, 841, 842, 843,
	844, 845, 846, 773, 934, 942, 943, 0, 260, 315,
	267, 259, 559, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 713, 730,
	0, 744, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 728, 0, 0, 0, 0, 881, 0,
	729, 0, 0, 737, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 393,
	252, 0, 444, 880, 0, 0, 601, 0, 0, 878,
	0, 0, 0, 0, 357, 0, 324, 197, 222, 0,
	0, 403, 452, 464, 0, 0, 0, 931, 0, 462,
	417, 579, 230, 279, 449, 423, 460, 431, 282, 0,
	0, 461, 364, 564, 441, 576, 602, 603, 258, 397,
	588, 502, 596, 620, 223, 255, 411, 495, 582, 484,
	389, 560, 561, 323, 483, 290, 200, 361, 608, 221,
	470, 363, 239, 228, 566, 585, 284, 447, 615, 210,
	497, 574, 236, 474, 0, 0, 622, 244, 494, 212,
	571, 493, 385, 320, 321, 211, 0, 448, 263, 288,
	0, 0, 253, 406, 932, 933, 251, 623, 781, 595,
	217, 0, 594, 399, 563, 572, 386, 375, 216, 570,
	384, 374, 328, 789, 790, 275, 301, 866, 865, 864,
	300, 302, 862, 863, 861, 204, 583, 0, 205, 0,
	489, 584, 624, 443, 209, 231, 232, 234, 0, 274,
	278, 286, 289, 297, 298, 307, 359, 410, 437, 433,
	442, 0, 558, 577, 589, 600, 606, 607, 609, 610,
	611, 612, 613, 616, 614, 398, 305, 485, 327, 365,
	0, 0, 416, 463, 237, 581, 486, 890, 879, 750,
	751, 894, 753, 754, 891, 892, 747, 748, 752, 893,
	895, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 0,
	882, 736, 735, 0, 743, 0, 771, 772, 774, 778,
	779, 780, 791, 838, 839, 847, 849, 850, 848, 851,
	852, 853, 856, 857, 858, 859, 854, 855, 860, 755,
	759, 756, 757, 758, 770, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 905, 906, 907, 908, 909,
	910, 784, 788, 787, 785, 786, 782, 783, 810, 809,
	811, 812, 813, 814, 815, 816, 818, 817, 819, 820,
	821, 822, 823, 824, 792, 793, 796, 797, 795, 794,
	798, 807, 808, 799, 800, 801, 802, 803, 804, 806,
	805, 825, 826, 827, 828, 829, 831, 830, 834, 835,
	833, 832, 837, 836, 734, 196, 218, 360, 93, 445,
	283, 621, 591, 586, 203, 220, 896, 257, 897, 0,
	0, 901, 0, 0, 0, 903, 902, 0, 904, 870,
	869, 0, 0, 898, 899, 0, 900, 0, 0, 198,
	199, 206, 219, 229, 233, 240, 256, 271, 273, 280,
	293, 304, 312, 313, 316, 322, 372, 378, 379, 380,
	381, 400, 401, 402, 405, 408, 409, 412, 414, 415,
	418, 422, 426, 427, 428, 430, 432, 434, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 565, 567, 580, 598, 604,
	471, 911, 912, 913, 914, 915, 916, 917, 918, 294,
	575, 605, 573, 617, 599, 429, 370, 0, 0, 373,
	276, 299, 314, 0, 590, 492, 224, 457, 285, 248,
	936, 0, 208, 243, 227, 254, 269, 272, 318, 383,
	391, 420, 425, 291, 266, 241, 450, 238, 475, 499,
	500, 501, 503, 387, 261, 424, 388, 0, 368, 555,
	556, 310, 508, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 733,
	0, 0, 0, 265, 738, 0, 0, 0, 358, 262,
	0, 0, 421, 0, 202, 0, 477, 249, 369, 366,
	562, 277, 268, 264, 247, 311, 377, 419, 498, 413,
	745, 362, 0, 0, 487, 392, 0, 0, 0, 0,
	0, 741, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 245, 319, 201, 404, 488, 281, 0, 94,
	0, 0, 937, 921, 717, 887, 925, 938, 939, 940,
	941, 926, 0, 235, 927, 928, 242, 929, 0, 886,
	775, 777, 776, 840, 841, 842, 843, 844, 845, 846,
	773, 934, 942, 943, 0, 260, 315, 267, 259, 559,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 713, 730, 0, 744, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	728, 0, 0, 0, 0, 881, 0, 729, 0, 0,
	737, 944, 945, 946, 947, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 393, 252, 0, 444,
	880, 0, 0, 601, 0, 0, 878, 0, 0, 0,
	0, 357, 0, 324, 197, 222, 0, 0, 403, 452,
	464, 0, 0, 0, 931, 0, 462, 417, 579, 230,
	279, 449, 423, 460, 431, 282, 3894, 0, 461, 364,
	564, 441, 576, 602, 603, 258, 397, 588, 502, 596,
	620, 223, 255, 411, 495, 582, 484, 389, 560, 561,
	323, 483, 290, 200, 361, 608, 221, 470, 363, 239,
	228, 566, 585, 284, 447, 615, 210, 497, 574, 236,
	474, 0, 0, 622, 244, 494, 212, 571, 493, 385,
	320, 321, 211, 0, 448, 263, 288, 0, 0, 253,
	406, 932, 933, 251, 623, 781, 595, 217, 0, 594,
	399, 563, 572, 386, 375, 216, 570, 384, 374, 328,
	789, 790, 275, 301, 866, 865, 864, 300, 302, 862,
	863, 861, 204, 583, 0, 205, 0, 489, 584, 624,
	443, 209, 231, 232, 234, 0, 274, 278, 286, 289,
	297, 298, 307, 359, 410, 437, 433, 442, 0, 558,
	577, 589, 600, 606, 607, 609, 610, 611, 612, 613,
	616, 614, 398, 305, 485, 327, 365, 0, 0, 416,
	463, 237, 581, 486, 890, 879, 750, 751, 894, 753,
	754, 891, 892, 747, 748, 752, 893, 895, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 0, 882, 736, 735,
	0, 743, 0, 771, 772, 774, 778, 779, 780, 791,
	838, 839, 847, 849, 850, 848, 851, 852, 853, 856,
	857, 858, 859, 854, 855, 860, 755, 759, 756, 757,
	758, 770, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 905, 906, 907, 908, 909, 910, 784, 788,
	787, 785, 786, 782, 783, 810, 809, 811, 812, 813,
	814, 815, 816, 818, 817, 819, 820, 821, 822, 823,
	824, 792, 793, 796, 797, 795, 794, 798, 807, 808,
	799, 800, 801, 802, 803, 804, 806, 805, 825, 826,
	827, 828, 829, 831, 830, 834, 835, 833, 832, 837,
	836, 734, 196, 218, 360, 0, 445, 283, 621, 591,
	586, 203, 220, 896, 257, 897, 0, 0, 901, 0,
	0, 0, 903, 902, 0, 904, 870, 869, 0, 0,
	898, 899, 0, 900, 0, 0, 198, 199, 206, 219,
	229, 233, 240, 256, 271, 273, 280, 293, 304, 312,
	313, 316, 322, 372, 378, 379, 380, 381, 400, 401,
	402, 405, 408, 409, 412, 414, 415, 418, 422, 426,
	427, 428, 430, 432, 434, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 565, 567, 580, 598, 604, 471, 911, 912,
	913, 914, 915, 916, 917, 918, 294, 575, 605, 573,
	617, 599, 429, 370, 0, 0, 373, 276, 299, 314,
	0, 590, 492, 224, 457, 285, 248, 936, 0, 208,
	243, 227, 254, 269, 272, 318, 383, 391, 420, 425,
	291, 266, 241, 450, 238, 475, 499, 500, 501, 503,
	387, 261, 424, 388, 0, 368, 555, 556, 310, 508,
	0, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 733, 0, 0, 0,
	265, 738, 0, 0, 0, 358, 262, 0, 0, 421,
	0, 202, 0, 477, 249, 369, 366, 562, 277, 268,
	264, 247, 311, 377, 419, 498, 413, 745, 362, 0,
	0, 487, 392, 0, 0, 0, 0, 0, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 245,
	319, 201, 404, 488, 281, 0, 94, 0, 1690, 937,
	921, 717, 887, 925, 938, 939, 940, 941, 926, 0,
	235, 927, 928, 242, 929, 0, 886, 775, 777, 776,
	840, 841, 842, 843, 844, 845, 846, 773, 934, 942,
	943, 0, 260, 315, 267, 259, 559, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 713, 730, 0, 744, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 728, 0, 0,
	0, 0, 881, 0, 729, 0, 0, 737, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 393, 252, 0, 444, 880, 0, 0,
	601, 0, 0, 878, 0, 0, 0, 0, 357, 0,
	324, 197, 222, 0, 0, 403, 452, 464, 0, 0,
	0, 931, 0, 462, 417, 579, 230, 279, 449, 423,
	460, 431, 282, 0, 0, 461, 364, 564, 441, 576,
	602, 603, 258, 397, 588, 502, 596, 620, 223, 255,
	411, 495, 582, 484, 389, 560, 561, 323, 483, 290,
	200, 361, 608, 221, 470, 363, 239, 228, 566, 585,
	284, 447, 615, 210, 497, 574, 236, 474, 0, 0,
	622, 244, 494, 212, 571, 493, 385, 320, 321, 211,
	0, 448, 263, 288, 0, 0, 253, 406, 932, 933,
	251, 623, 781, 595, 217, 0, 594, 399, 563, 572,
	386, 375, 216, 570, 384, 374, 328, 789, 790, 275,
	301, 866, 865, 864, 300, 302, 862, 863, 861, 204,
	583, 0, 205, 0, 489, 584, 624, 443, 209, 231,
	232, 234, 0, 274, 278, 286, 289, 297, 298, 307,
	359, 410, 437, 433, 442, 0, 558, 577, 589, 600,
	606, 607, 609, 610, 611, 612, 613, 616, 614, 398,
	305, 485, 327, 365, 0, 0, 416, 463, 237, 581,
	486, 890, 879, 750, 751, 894, 753, 754, 891, 892,
	747, 748, 752, 893, 895, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 882, 736, 735, 0, 743, 0,
	771, 772, 774, 778, 779, 780, 791, 838, 839, 847,
	849, 850, 848, 851, 852, 853, 856, 857, 858, 859,
	854, 855, 860, 755, 759, 756, 757, 758, 770, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 905,
	906, 907, 908, 909, 910, 784, 788, 787, 785, 786,
	782, 783, 810, 809, 811, 812, 813, 814, 815, 816,
	818, 817, 819, 820, 821, 822, 823, 824, 792, 793,
	796, 797, 795, 794, 798, 807, 808, 799, 800, 801,
	802, 803, 804, 806, 805, 825, 826, 827, 828, 829,
	831, 830, 834, 835, 833, 832, 837, 836, 734, 196,
	218, 360, 0, 445, 283, 621, 591, 586, 203, 220,
	896, 257, 897, 0, 0, 901, 0, 0, 0, 903,
	902, 0, 904, 870, 869, 0, 0, 898, 899, 0,
	900, 0, 0, 198, 199, 206, 219, 229, 233, 240,
	256, 271, 273, 280, 293, 304, 312, 313, 316, 322,
	372, 378, 379, 380, 381, 400, 401, 402, 405, 408,
	409, 412, 414, 415, 418, 422, 426, 427, 428, 430,
	432, 434, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 565,
	567, 580, 598, 604, 471, 911, 912, 913, 914, 915,
	916, 917, 918, 294, 575, 605, 573, 617, 599, 429,
	370, 0, 0, 373, 276, 299, 314, 0, 590, 492,
	224, 457, 285, 248, 936, 0, 208, 243, 227, 254,
	269, 272, 318, 383, 391, 420, 425, 291, 266, 241,
	450, 238, 475, 499, 500, 501, 503, 387, 261, 424,
	388, 0, 368, 555, 556, 310, 508, 0, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 733, 0, 0, 0, 265, 738, 0,
	0, 0, 358, 262, 0, 0, 421, 0, 202, 0,
	477, 249, 369, 366, 562, 277, 268, 264, 247, 311,
	377, 419, 498, 413, 745, 362, 0, 0, 487, 392,
	0, 0, 0, 0, 0, 741, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 245, 319, 201, 404,
	488, 281, 0, 94, 0, 0, 937, 921, 717, 887,
	925, 938, 939, 940, 941, 926, 0, 235, 927, 928,
	242, 929, 0, 886, 775, 777, 776, 840, 841, 842,
	843, 844, 845, 846, 773, 934, 942, 943, 0, 260,
	315, 267, 259, 559, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 713,
	730, 0, 744, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 728, 1028, 0, 0, 0, 881,
	0, 729, 0, 0, 737, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	393, 252, 0, 444, 880, 0, 0, 601, 0, 0,
	878, 0, 0, 0, 0, 357, 0, 324, 197, 222,
	0, 0, 403, 452, 464, 0, 0, 0, 931, 0,
	462, 417, 579, 230, 279, 449, 423, 460, 431, 282,
	0, 0, 461, 364, 564, 441, 576, 602, 603, 258,
	397, 588, 502, 596, 620, 223, 255, 411, 495, 582,
	484, 389, 560, 561, 323, 483, 290, 200, 361, 608,
	221, 470, 363, 239, 228, 566, 585, 284, 447, 615,
	210, 497, 574, 236, 474, 0, 0, 622, 244, 494,
	212, 571, 493, 385, 320, 321, 211, 0, 448, 263,
	288, 0, 0, 253, 406, 932, 933, 251, 623, 781,
	595, 217, 0, 594, 399, 563, 572, 386, 375, 216,
	570, 384, 374, 328, 789, 790, 275, 301, 866, 865,
	864, 300, 302, 862, 863, 861, 204, 583, 0, 205,
	0, 489, 584, 624, 443, 209, 231, 232, 234, 0,
	274, 278, 286, 289, 297, 298, 307, 359, 410, 437,
	433, 442, 0, 558, 577, 589, 600, 606, 607, 609,
	610, 611, 612, 613, 616, 614, 398, 305, 485, 327,
	365, 0, 0, 416, 463, 237, 581, 486, 890, 879,
	750, 751, 894, 753, 754, 891, 892, 747, 748, 752,
	893, 895, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 882, 736, 735, 0, 743, 0, 771, 772, 774,
	778, 779, 780, 791, 838, 839, 847, 849, 850, 848,
	851, 852, 853, 856, 857, 858, 859, 854, 855, 860,
	755, 759, 756, 757, 758, 770, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 905, 906, 907, 908,
	909, 910, 784, 788, 787, 785, 786, 782, 783, 810,
	809, 811, 812, 813, 814, 815, 816, 818, 817, 819,
	820, 821, 822, 823, 824, 792, 793, 796, 797, 795,
	794, 798, 807, 808, 799, 800, 801, 802, 803, 804,
	806, 805, 825, 826, 827, 828, 829, 831, 830, 834,
	835, 833, 832, 837, 836, 734, 196, 218, 360, 0,
	445, 283, 621, 591, 586, 203, 220, 896, 257, 897,
	0, 0, 901, 0, 0, 0, 903, 902, 0, 904,
	870, 869, 0, 0, 898, 899, 0, 900, 0, 0,
	198, 199, 206, 219, 229, 233, 240, 256, 271, 273,
	280, 293, 304, 312, 313, 316, 322, 372, 378, 379,
	380, 381, 400, 401, 402, 405, 408, 409, 412, 414,
	415, 418, 422, 426, 427, 428, 430, 432, 434, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 565, 567, 580, 598,
	604, 471, 911, 912, 913, 914, 915, 916, 917, 918,
	294, 575, 605, 573, 617, 599, 429, 370, 0, 0,
	373, 276, 299, 314, 0, 590, 492, 224, 457, 285,
	248, 936, 0, 208, 243, 227, 254, 269, 272, 318,
	383, 391, 420, 425, 291, 266, 241, 450, 238, 475,
	499, 500, 501, 503, 387, 261, 424, 388, 0, 368,
	555, 556, 310, 508, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	733, 0, 0, 0, 265, 738, 0, 0, 0, 358,
	262, 0, 0, 421, 0, 202, 0, 477, 249, 369,
	366, 562, 277, 268, 264, 247, 311, 377, 419, 498,
	413, 745, 362, 0, 0, 487, 392, 0, 0, 0,
	0, 0, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 245, 319, 201, 404, 488, 281, 0,
	94, 0, 0, 937, 921, 717, 887, 925, 938, 939,
	940, 941, 926, 0, 235, 927, 928, 242, 929, 0,
	886, 775, 777, 776, 840, 841, 842, 843, 844, 845,
	846, 773, 934, 942, 943, 0, 260, 315, 267, 259,
	559, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 713, 730, 0, 744,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 728, 0, 0, 0, 0, 881, 0, 729, 0,
	0, 737, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 393, 252, 0,
	444, 880, 0, 0, 601, 0, 0, 878, 0, 0,
	0, 0, 357, 0, 324, 197, 222, 0, 0, 403,
	452, 464, 0, 0, 0, 931, 0, 462, 417, 579,
	230, 279, 449, 423, 460, 431, 282, 0, 0, 461,
	364, 564, 441, 576, 602, 603, 258, 397, 588, 502,
	596, 620, 223, 255, 411, 495, 582, 484, 389, 560,
	561, 323, 483, 290, 200, 361, 608, 221, 470, 363,
	239, 228, 566, 585, 284, 447, 615, 210, 497, 574,
	236, 474, 0, 0, 622, 244, 494, 212, 571, 493,
	385, 320, 321, 211, 0, 448, 263, 288, 0, 0,
	253, 406, 932, 933, 251, 623, 781, 595, 217, 0,
	594, 399, 563, 572, 386, 375, 216, 570, 384, 374,
	328, 789, 790, 275, 301, 866, 865, 864, 300, 302,
	862, 863, 861, 204, 583, 0, 205, 0, 489, 584,
	624, 443, 209, 231, 232, 234, 0, 274, 278, 286,
	289, 297, 298, 307, 359, 410, 437, 433, 442, 0,
	558, 577, 589, 600, 606, 607, 609, 610, 611, 612,
	613, 616, 614, 398, 305, 485, 327, 365, 0, 0,
	416, 463, 237, 581, 486, 890, 879, 750, 751, 894,
	753, 754, 891, 892, 747, 748, 752, 893, 895, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 0, 882, 736,
	735, 0, 743, 0, 771, 772, 774, 778, 779, 780,
	791, 838, 839, 847, 849, 850, 848, 851, 852, 853,
	856, 857, 858, 859, 854, 855, 860, 755, 759, 756,
	757, 758, 770, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 905, 906, 907, 908, 909, 910, 784,
	788, 787, 785, 786, 782, 783, 810, 809, 811, 812,
	813, 814, 815, 816, 818, 817, 819, 820, 821, 822,
	823, 824, 792, 793, 796, 797, 795, 794, 798, 807,
	808, 799, 800, 801, 802, 803, 804, 806, 805, 825,
	826, 827, 828, 829, 831, 830, 834, 835, 833, 832,
	837, 836, 734, 196, 218, 360, 0, 445, 283, 621,
	591, 586, 203, 220, 896, 257, 897, 0, 0, 901,
	0, 0, 0, 903, 902, 0, 904, 870, 869, 0,
	0, 898, 899, 0, 900, 0, 0, 198, 199, 206,
	219, 229, 233, 240, 256, 271, 273, 280, 293, 304,
	312, 313, 316, 322, 372, 378, 379, 380, 381, 400,
	401, 402, 405, 408, 409, 412, 414, 415, 418, 422,
	426, 427, 428, 430, 432, 434, 446, 451, 465, 466,
	467, 468, 469, 472, 473, 478, 479, 480, 481, 482,
	490, 491, 496, 565, 567, 580, 598, 604, 471, 911,
	912, 913, 914, 915, 916, 917, 918, 294, 575, 605,
	573, 617, 599, 429, 370, 0, 0, 373, 276, 299,
	314, 0, 590, 492, 224, 457, 285, 248, 936, 0,
	208, 243, 227, 254, 269, 272, 318, 383, 391, 420,
	425, 291, 266, 241, 450, 238, 475, 499, 500, 501,
	503, 387, 261, 424, 388, 0, 368, 555, 556, 310,
	508, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 733, 0, 0,
	0, 265, 738, 0, 0, 0, 358, 262, 0, 0,
	421, 0, 202, 0, 477, 249, 369, 366, 562, 277,
	268, 264, 247, 311, 377, 419, 498, 413, 745, 362,
	0, 0, 487, 392, 0, 0, 0, 0, 0, 741,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	245, 319, 201, 404, 488, 281, 0, 94, 0, 0,
	937, 921, 1049, 887, 925, 938, 939, 940, 941, 926,
	0, 235, 927, 928, 242, 929, 0, 886, 775, 777,
	776, 840, 841, 842, 843, 844, 845, 846, 773, 934,
	942, 943, 0, 260, 315, 267, 259, 559, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 744, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 728, 0,
	0, 0, 0, 881, 0, 729, 0, 0, 737, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 393, 252, 0, 444, 880, 0,
	0, 601, 0, 0, 878, 0, 0, 0, 0, 357,
	0, 324, 197, 222, 0, 0, 403, 452, 464, 0,
	0, 0, 931, 0, 462, 417, 579, 230, 279, 449,
	423, 460, 431, 282, 0, 0, 461, 364, 564, 441,
	576, 602, 603, 258, 397, 588, 502, 596, 620, 223,
	255, 411, 495, 582, 484, 389, 560, 561, 323, 483,
	290, 200, 361, 608, 221, 470, 363, 239, 228, 566,
	585, 284, 447, 615, 210, 497, 574, 236, 474, 0,
	0, 622, 244, 494, 212, 571, 493, 385, 320, 321,
	211, 0, 448, 263, 288, 0, 0, 253, 406, 932,
	933, 251, 623, 781, 595, 217, 0, 594, 399, 563,
	572, 386, 375, 216, 570, 384, 374, 328, 789, 790,
	275, 301, 866, 865, 864, 300, 302, 862, 863, 861,
	204, 583, 0, 205, 0, 489, 584, 624, 443, 209,
	231, 232, 234, 0, 274, 278, 286, 289, 297, 298,
	307, 359, 410, 437, 433, 442, 0, 558, 577, 589,
	600, 606, 607, 609, 610, 611, 612, 613, 616, 614,
	398, 305, 485, 327, 365, 0, 0, 416, 463, 237,
	581, 486, 890, 879, 750, 751, 894, 753, 754, 891,
	892, 747, 748, 752, 893, 895, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 0, 882, 736, 735, 0, 743,
	0, 771, 772, 774, 778, 779, 780, 791, 838, 839,
	847, 849, 850, 848, 851, 852, 853, 856, 857, 858,
	859, 854, 855, 860, 755, 759, 756, 757, 758, 770,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	905, 906, 907, 908, 909, 910, 784, 788, 787, 785,
	786, 782, 783, 810, 809, 811, 812, 813, 814, 815,
	816, 818, 817, 819, 820, 821, 822, 823, 824, 792,
	793, 796, 797, 795, 794, 798, 807, 808, 799, 800,
	801, 802, 803, 804, 806, 805, 825, 826, 827, 828,
	829, 831, 830, 834, 835, 833, 832, 837, 836, 734,
	196, 218, 360, 0, 445, 283, 621, 591, 586, 203,
	220, 896, 257, 897, 0, 0, 901, 0, 0, 0,
	903, 902, 0, 904, 870, 869, 0, 0, 898, 899,
	0, 900, 0, 0, 198, 199, 206, 219, 229, 233,
	240, 256, 271, 273, 280, 293, 304, 312, 313, 316,
	322, 372, 378, 379, 380, 381, 400, 401, 402, 405,
	408, 409, 412, 414, 415, 418, 422, 426, 427, 428,
	430, 432, 434, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	565, 567, 580, 598, 604, 471, 911, 912, 913, 914,
	915, 916, 917, 918, 294, 575, 605, 573, 617, 599,
	429, 370, 0, 0, 373, 276, 299, 314, 0, 590,
	492, 224, 457, 285, 248, 936, 0, 208, 243, 227,
	254, 269, 272, 318, 383, 391, 420, 425, 291, 266,
	241, 450, 238, 475, 499, 500, 501, 503, 387, 261,
	424, 388, 0, 368, 555, 556, 310, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 358, 262, 0, 0, 421, 0, 202,
	0, 477, 249, 369, 366, 562, 277, 268, 264, 247,
	311, 377, 419, 498, 413, 0, 362, 0, 0, 487,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 245, 319, 201,
	404, 488, 281, 0, 0, 0, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 343, 352, 351, 332, 333,
	335, 337, 342, 349, 355, 0, 0, 0, 0, 0,
	260, 315, 267, 259, 559, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1459,
	1461, 1462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	0, 393, 252, 0, 444, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 324, 197,
	222, 0, 0, 403, 452, 464, 0, 0, 0, 250,
	0, 462, 417, 579, 230, 279, 449, 423, 460, 431,
	282, 0, 0, 461, 364, 564, 441, 576, 602, 603,
	258, 397, 588, 502, 596, 620, 223, 255, 411, 495,
	582, 484, 389, 560, 561, 323, 483, 290, 200, 361,
	608, 221, 470, 363, 239, 228, 566, 585, 284, 447,
	615, 210, 497, 574, 236, 474, 0, 0, 622, 244,
	494, 212, 571, 493, 385, 320, 321, 211, 0, 448,
	263, 288, 0, 0, 253, 406, 568, 569, 251, 623,
	225, 595, 217, 0, 594, 399, 563, 572, 386, 375,
	216, 570, 384, 374, 328, 347, 348, 275, 301, 438,
	367, 439, 300, 302, 395, 394, 396, 204, 583, 0,
	205, 0, 489, 584, 624, 443, 209, 231, 232, 234,
	0, 274, 278, 286, 289, 297, 298, 307, 359, 410,
	437, 433, 442, 0, 558, 577, 589, 600, 606, 607,
	609, 610, 611, 612, 613, 616, 614, 398, 305, 485,
	327, 365, 0, 0, 416, 463, 237, 581, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 376, 476, 578, 329, 341, 344, 334, 353, 0,
	354, 330, 331, 336, 338, 339, 340, 345, 346, 350,
	356, 246, 207, 382, 390, 557, 306, 213, 214, 215,
	504, 505, 506, 507, 592, 593, 597, 453, 454, 455,
	456, 287, 587, 303, 459, 458, 325, 326, 371, 440,
	520, 522, 533, 537, 539, 541, 547, 550, 521, 523,
	534, 538, 540, 542, 548, 551, 510, 512, 514, 516,
	529, 528, 525, 553, 554, 531, 536, 515, 527, 532,
	545, 552, 549, 509, 513, 517, 526, 544, 543, 524,
	535, 546, 530, 518, 511, 519, 0, 196, 218, 360,
	0, 445, 283, 621, 591, 586, 203, 220, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 219, 229, 233, 240, 256, 271,
	273, 280, 293, 304, 312, 313, 316, 322, 372, 378,
	379, 380, 381, 400, 401, 402, 405, 408, 409, 412,
	414, 415, 418, 422, 426, 427, 428, 430, 432, 434,
	446, 451, 465, 466, 467, 468, 469, 472, 473, 478,
	479, 480, 481, 482, 490, 491, 496, 565, 567, 580,
	598, 604, 471, 295, 296, 435, 436, 308, 309, 618,
	619, 294, 575, 605, 573, 617, 599, 429, 370, 0,
	0, 373, 276, 299, 314, 0, 590, 492, 224, 457,
	285, 248, 0, 0, 208, 243, 227, 254, 269, 272,
	318, 383, 391, 420, 425, 291, 266, 241, 450, 238,
	475, 499, 500, 501, 503, 387, 261, 424, 388, 0,
	368, 555, 556, 310, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	358, 262, 0, 0, 421, 0, 202, 0, 477, 249,
	369, 366, 562, 277, 268, 264, 247, 311, 377, 419,
	498, 413, 0, 362, 0, 0, 487, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 245, 319, 201, 404, 488, 281,
	0, 0, 0, 0, 0, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 343, 352, 351, 332, 333, 335, 337, 342,
	349, 355, 0, 0, 0, 0, 0, 260, 315, 267,
	259, 559, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 1100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 393, 252,
	0, 444, 0, 0, 1099, 601, 0, 0, 0, 0,
	0, 1096, 1097, 357, 1057, 324, 197, 222, 1090, 1094,
	403, 452, 464, 0, 0, 0, 250, 0, 462, 417,
	579, 230, 279, 449, 423, 460, 431, 282, 0, 0,
	461, 364, 564, 441, 576, 602, 603, 258, 397, 588,
	502, 596, 620, 223, 255, 411, 495, 582, 484, 389,
	560, 561, 323, 483, 290, 200, 361, 608, 221, 470,
	363, 239, 228, 566, 585, 284, 447, 615, 210, 497,
	574, 236, 474, 0, 0, 622, 244, 494, 212, 571,
	493, 385, 320, 321, 211, 0, 448, 263, 288, 0,
	0, 253, 406, 568, 569, 251, 623, 225, 595, 217,
	0, 594, 399, 563, 572, 386, 375, 216, 570, 384,
	374, 328, 347, 348, 275, 301, 438, 367, 439, 300,
	302, 395, 394, 396, 204, 583, 0, 205, 0, 489,
	584, 624, 443, 209, 231, 232, 234, 0, 274, 278,
	286, 289, 297, 298, 307, 359, 410, 437, 433, 442,
	0, 558, 577, 589, 600, 606, 607, 609, 610, 611,
	612, 613, 616, 614, 398, 305, 485, 327, 365, 0,
	0, 416, 463, 237, 581, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 376, 476,
	578, 329, 341, 344, 334, 353, 0, 354, 330, 331,
	336, 338, 339, 340, 345, 346, 350, 356, 246, 207,
	382, 390, 557, 306, 213, 214, 215, 504, 505, 506,
	507, 592, 593, 597, 453, 454, 455, 456, 287, 587,
	303, 459, 458, 325, 326, 371, 440, 520, 522, 533,
	537, 539, 541, 547, 550, 521, 523, 534, 538, 540,
	542, 548, 551, 510, 512, 514, 516, 529, 528, 525,
	553, 554, 531, 536, 515, 527, 532, 545, 552, 549,
	509, 513, 517, 526, 544, 543, 524, 535, 546, 530,
	518, 511, 519, 0, 196, 218, 360, 0, 445, 283,
	621, 591, 586, 203, 220, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 219, 229, 233, 240, 256, 271, 273, 280, 293,
	304, 312, 313, 316, 322, 372, 378, 379, 380, 381,
	400, 401, 402, 405, 408, 409, 412, 414, 415, 418,
	422, 426, 427, 428, 430, 432, 434, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 565, 567, 580, 598, 604, 471,
	295, 296, 435, 436, 308, 309, 618, 619, 294, 575,
	605, 573, 617, 599, 429, 370, 0, 0, 373, 276,
	299, 314, 0, 590, 492, 224, 457, 285, 248, 0,
	0, 208, 243, 227, 254, 269, 272, 318, 383, 391,
	420, 425, 291, 266, 241, 450, 238, 475, 499, 500,
	501, 503, 387, 261, 424, 388, 0, 368, 555, 556,
	310, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 358, 262, 0,
	0, 421, 0, 202, 0, 477, 249, 369, 366, 562,
	277, 268, 264, 247, 311, 377, 419, 498, 413, 0,
	362, 0, 0, 487, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 245, 319, 201, 404, 488, 281, 0, 0, 0,
	0, 1653, 921, 0, 0, 1650, 0, 0, 0, 0,
	1648, 0, 235, 1649, 1647, 242, 1652, 0, 886, 343,
	352, 351, 332, 333, 335, 337, 342, 349, 355, 0,
	0, 0, 0, 0, 260, 315, 267, 259, 559, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 393, 252, 0, 444, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 324, 197, 222, 0, 0, 403, 452, 464,
	0, 0, 0, 250, 0, 462, 417, 579, 230, 279,
	449, 423, 460, 431, 282, 0, 0, 461, 364, 564,
	441, 576, 602, 603, 258, 397, 588, 502, 596, 620,
	223, 255, 411, 495, 582, 484, 389, 560, 561, 323,
	483, 290, 200, 361, 608, 221, 470, 363, 239, 228,
	566, 585, 284, 447, 615, 210, 497, 574, 236, 474,
	0, 0, 622, 244, 494, 212, 571, 493, 385, 320,
	321, 211, 0, 448, 263, 288, 0, 0, 253, 406,
	568, 569, 251, 623, 225, 595, 217, 0, 594, 399,
	563, 572, 386, 375, 216, 570, 384, 374, 328, 347,
	348, 275, 301, 438, 367, 439, 300, 302, 395, 394,
	396, 204, 583, 0, 205, 0, 489, 584, 624, 443,
	209, 231, 232, 234, 0, 274, 278, 286, 289, 297,
	298, 307, 359, 410, 437, 433, 442, 0, 558, 577,
	589, 600, 606, 607, 609, 610, 611, 612, 613, 616,
	614, 398, 305, 485, 327, 365, 0, 0, 416, 463,
	237, 581, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 376, 476, 578, 329, 341,
	344, 334, 353, 0, 354, 330, 331, 336, 338, 339,
	340, 345, 346, 350, 356, 246, 207, 382, 390, 557,
	306, 213, 214, 215, 504, 505, 506, 507, 592, 593,
	597, 453, 454, 455, 456, 287, 587, 303, 459, 458,
	325, 326, 371, 440, 520, 522, 533, 537, 539, 541,
	547, 550, 521, 523, 534, 538, 540, 542, 548, 551,
	510, 512, 514, 516, 529, 528, 525, 553, 554, 531,
	536, 515, 527, 532, 545, 552, 549, 509, 513, 517,
	526, 544, 543, 524, 535, 546, 530, 518, 511, 519,
	0, 196, 218, 360, 0, 445, 283, 621, 591, 586,
	203, 220, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 219, 229,
	233, 240, 256, 271, 273, 280, 293, 304, 312, 313,
	316, 322, 372, 378, 379, 380, 381, 400, 401, 402,
	405, 408, 409, 412, 414, 415, 418, 422, 426, 427,
	428, 430, 432, 434, 446, 451, 465, 466, 467, 468,
	469, 472, 473, 478, 479, 480, 481, 482, 490, 491,
	496, 565, 567, 580, 598, 604, 471, 295, 296, 435,
	436, 308, 309, 618, 619, 294, 575, 605, 573, 617,
	599, 429, 370, 0, 0, 373, 276, 299, 314, 0,
	590, 492, 224, 457, 285, 248, 0, 0, 208, 243,
	227, 254, 269, 272, 318, 383, 391, 420, 425, 291,
	266, 241, 450, 238, 475, 499, 500, 501, 503, 387,
	261, 424, 0, 388, 368, 555, 556, 310, 85, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 358, 262, 0, 0, 421,
	0, 202, 0, 477, 249, 369, 366, 562, 277, 268,
	264, 247, 311, 377, 419, 498, 413, 0, 362, 0,
	0, 487, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 245,
	319, 201, 404, 488, 281, 0, 94, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 343, 352, 351,
	332, 333, 335, 337, 342, 349, 355, 0, 0, 0,
	0, 0, 260, 315, 267, 259, 559, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 393, 252, 0, 444, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	324, 197, 222, 0, 0, 403, 452, 464, 0, 0,
	0, 250, 0, 462, 417, 579, 230, 279, 449, 423,
	460, 431, 282, 0, 0, 461, 364, 564, 441, 576,
	602, 603, 258, 397, 588, 502, 596, 620, 223, 255,
	411, 495, 582, 484, 389, 560, 561, 323, 483, 290,
	200, 361, 608, 221, 470, 363, 239, 228, 566, 585,
	284, 447, 615, 210, 497, 574, 236, 474, 0, 0,
	622, 244, 494, 212, 571, 493, 385, 320, 321, 211,
	0, 448, 263, 288, 0, 0, 253, 406, 568, 569,
	251, 623, 225, 595, 217, 0, 594, 399, 563, 572,
	386, 375, 216, 570, 384, 374, 328, 347, 348, 275,
	301, 438, 367, 439, 300, 302, 395, 394, 396, 204,
	583, 0, 205, 0, 489, 584, 624, 443, 209, 231,
	232, 234, 0, 274, 278, 286, 289, 297, 298, 307,
	359, 410, 437, 433, 442, 0, 558, 577, 589, 600,
	606, 607, 609, 610, 611, 612, 613, 616, 614, 398,
	305, 485, 327, 365, 0, 0, 416, 463, 237, 581,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 376, 476, 578, 329, 341, 344, 334,
	353, 0, 354, 330, 331, 336, 338, 339, 340, 345,
	346, 350, 356, 246, 207, 382, 390, 557, 306, 213,
	214, 215, 504, 505, 506, 507, 592, 593, 597, 453,
	454, 455, 456, 287, 587, 303, 459, 458, 325, 326,
	371, 440, 520, 522, 533, 537, 539, 541, 547, 550,
	521, 523, 534, 538, 540, 542, 548, 551, 510, 512,
	514, 516, 529, 528, 525, 553, 554, 531, 536, 515,
	527, 532, 545, 552, 549, 509, 513, 517, 526, 544,
	543, 524, 535, 546, 530, 518, 511, 519, 0, 196,
	218, 360, 93, 445, 283, 621, 591, 586, 203, 220,
	0, 257, 0, 0, 0, 0, 0, 0, 2319, 0,
	0, 2318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 219, 229, 233, 240,
	256, 271, 273, 280, 293, 304, 312, 313, 316, 322,
	372, 378, 379, 380, 381, 400, 401, 402, 405, 408,
	409, 412, 414, 415, 418, 422, 426, 427, 428, 430,
	432, 434, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 565,
	567, 580, 598, 604, 471, 295, 296, 435, 436, 308,
	309, 618, 619, 294, 575, 605, 573, 617, 599, 429,
	370, 0, 0, 373, 276, 299, 314, 0, 590, 492,
	224, 457, 285, 248, 0, 0, 208, 243, 227, 254,
	269, 272, 318, 383, 391, 420, 425, 291, 266, 241,
	450, 238, 475, 499, 500, 501, 503, 387, 261, 424,
	1710, 0, 368, 555, 556, 310, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 1712, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 358, 262, 0, 0, 421, 0, 202, 0,
	477, 249, 369, 366, 562, 277, 268, 264, 247, 311,
	377, 419, 498, 413, 0, 362, 0, 0, 487, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 245, 319, 201, 404,
	488, 281, 0, 0, 0, 0, 1714, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 343, 352, 351, 332, 333, 335,
	337, 342, 349, 355, 0, 0, 0, 0, 0, 260,
	315, 267, 259, 559, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 1431, 0, 1432, 1433, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	393, 252, 0, 444, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 324, 197, 222,
	0, 0, 403, 452, 464, 0, 0, 0, 250, 0,
	462, 417, 579, 230, 279, 449, 423, 460, 431, 282,
	0, 0, 461, 364, 564, 441, 576, 602, 603, 258,
	397, 588, 502, 596, 620, 223, 255, 411, 495, 582,
	484, 389, 560, 561, 323, 483, 290, 200, 361, 608,
	221, 470, 363, 239, 228, 566, 585, 284, 447, 615,
	210, 497, 574, 236, 474, 0, 0, 622, 244, 494,
	212, 571, 493, 385, 320, 321, 211, 0, 448, 263,
	288, 0, 0, 253, 406, 568, 569, 251, 623, 225,
	595, 217, 0, 594, 399, 563, 572, 386, 375, 216,
	570, 384, 374, 328, 347, 348, 275, 301, 438, 367,
	439, 300, 302, 395, 394, 396, 204, 583, 0, 205,
	0, 489, 584, 624, 443, 209, 231, 232, 234, 0,
	274, 278, 286, 289, 297, 298, 307, 359, 410, 437,
	433, 442, 0, 558, 577, 589, 600, 606, 607, 609,
	610, 611, 612, 613, 616, 614, 398, 305, 485, 327,
	365, 0, 0, 416, 463, 237, 581, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	376, 476, 578, 329, 341, 344, 334, 353, 0, 354,
	330, 331, 336, 338, 339, 340, 345, 346, 350, 356,
	246, 207, 382, 390, 557, 306, 213, 214, 215, 504,
	505, 506, 507, 592, 593, 597, 453, 454, 455, 456,
	287, 587, 303, 459, 458, 325, 326, 371, 440, 520,
	522, 533, 537, 539, 541, 547, 550, 521, 523, 534,
	538, 540, 542, 548, 551, 510, 512, 514, 516, 529,
	528, 525, 553, 554, 531, 536, 515, 527, 532, 545,
	552, 549, 509, 513, 517, 526, 544, 543, 524, 535,
	546, 530, 518, 511, 519, 0, 196, 218, 360, 0,
	445, 283, 621, 591, 586, 203, 220, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 219, 229, 233, 240, 256, 271, 273,
	280, 293, 304, 312, 313, 316, 322, 372, 378, 379,
	380, 381, 400, 401, 402, 405, 408, 409, 412, 414,
	415, 418, 422, 426, 427, 428, 430, 432, 434, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 565, 567, 580, 598,
	604, 471, 295, 296, 435, 436, 308, 309, 618, 619,
	294, 575, 605, 573, 617, 599, 429, 370, 0, 0,
	373, 276, 299, 314, 0, 590, 492, 224, 457, 285,
	248, 0, 0, 208, 243, 227, 254, 269, 272, 318,
	383, 391, 420, 425, 291, 266, 241, 450, 238, 475,
	499, 500, 501, 503, 387, 261, 424, 0, 388, 368,
	555, 556, 310, 85, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	358, 262, 0, 0, 421, 0, 202, 0, 477, 249,
	369, 366, 562, 277, 268, 264, 247, 311, 377, 419,
	498, 413, 0, 362, 0, 0, 487, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 245, 319, 201, 404, 488, 281,
	0, 94, 0, 1690, 0, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 343, 352, 351, 332, 333, 335, 337, 342,
	349, 355, 0, 0, 0, 0, 0, 260, 315, 267,
	259, 559, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 393, 252,
	0, 444, 0, 0, 0, 601, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 324, 197, 222, 0, 0,
	403, 452, 464, 0, 0, 0, 250, 0, 462, 417,
	579, 230, 279, 449, 423, 460, 431, 282, 0, 0,
	461, 364, 564, 441, 576, 602, 603, 258, 397, 588,
	502, 596, 620, 223, 255, 411, 495, 582, 484, 389,
	560, 561, 323, 483, 290, 200, 361, 608, 221, 470,
	363, 239, 228, 566, 585, 284, 447, 615, 210, 497,
	574, 236, 474, 0, 0, 622, 244, 494, 212, 571,
	493, 385, 320, 321, 211, 0, 448, 263, 288, 0,
	0, 253, 406, 568, 569, 251, 623, 225, 595, 217,
	0, 594, 399, 563, 572, 386, 375, 216, 570, 384,
	374, 328, 347, 348, 275, 301, 438, 367, 439, 300,
	302, 395, 394, 396, 204, 583, 0, 205, 0, 489,
	584, 624, 443, 209, 231, 232, 234, 0, 274, 278,
	286, 289, 297, 298, 307, 359, 410, 437, 433, 442,
	0, 558, 577, 589, 600, 606, 607, 609, 610, 611,
	612, 613, 616, 614, 398, 305, 485, 327, 365, 0,
	0, 416, 463, 237, 581, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 376, 476,
	578, 329, 341, 344, 334, 353, 0, 354, 330, 331,
	336, 338, 339, 340, 345, 346, 350, 356, 246, 207,
	382, 390, 557, 306, 213, 214, 215, 504, 505, 506,
	507, 592, 593, 597, 453, 454, 455, 456, 287, 587,
	303, 459, 458, 325, 326, 371, 440, 520, 522, 533,
	537, 539, 541, 547, 550, 521, 523, 534, 538, 540,
	542, 548, 551, 510, 512, 514, 516, 529, 528, 525,
	553, 554, 531, 536, 515, 527, 532, 545, 552, 549,
	509, 513, 517, 526, 544, 543, 524, 535, 546, 530,
	518, 511, 519, 0, 196, 218, 360, 93, 445, 283,
	621, 591, 586, 203, 220, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 219, 229, 233, 240, 256, 271, 273, 280, 293,
	304, 312, 313, 316, 322, 372, 378, 379, 380, 381,
	400, 401, 402, 405, 408, 409, 412, 414, 415, 418,
	422, 426, 427, 428, 430, 432, 434, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 565, 567, 580, 598, 604, 471,
	295, 296, 435, 436, 308, 309, 618, 619, 294, 575,
	605, 573, 617, 599, 429, 370, 0, 0, 373, 276,
	299, 314, 0, 590, 492, 224, 457, 285, 248, 0,
	0, 208, 243, 227, 254, 269, 272, 318, 383, 391,
	420, 425, 291, 266, 241, 450, 238, 475, 499, 500,
	501, 503, 387, 261, 424, 388, 0, 368, 555, 556,
	310, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 358, 262, 0,
	0, 421, 0, 202, 0, 477, 249, 369, 366, 562,
	277, 268, 264, 247, 311, 377, 419, 498, 413, 0,
	362, 0, 0, 487, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 245, 319, 201, 404, 488, 281, 0, 94, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 343,
	352, 351, 332, 333, 335, 337, 342, 349, 355, 0,
	0, 0, 0, 0, 260, 315, 267, 259, 559, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 393, 252, 0, 444, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 324, 197, 222, 0, 0, 403, 452, 464,
	0, 0, 0, 250, 0, 462, 417, 579, 230, 279,
	449, 423, 460, 431, 282, 0, 0, 461, 364, 564,
	441, 576, 602, 603, 258, 397, 588, 502, 596, 620,
	223, 255, 411, 495, 582, 484, 389, 560, 561, 323,
	483, 290, 200, 361, 608, 221, 470, 363, 239, 228,
	566, 585, 284, 447, 615, 210, 497, 574, 236, 474,
	0, 0, 622, 244, 494, 212, 571, 493, 385, 320,
	321, 211, 0, 448, 263, 288, 0, 0, 253, 406,
	568, 569, 251, 623, 225, 595, 217, 0, 594, 399,
	563, 572, 386, 375, 216, 570, 384, 374, 328, 347,
	348, 275, 301, 438, 367, 439, 300, 302, 395, 394,
	396, 204, 583, 0, 205, 0, 489, 584, 624, 443,
	209, 231, 232, 234, 0, 274, 278, 286, 289, 297,
	298, 307, 359, 410, 437, 433, 442, 0, 558, 577,
	589, 600, 606, 607, 609, 610, 611, 612, 613, 616,
	614, 398, 305, 485, 327, 365, 0, 0, 416, 463,
	237, 581, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 376, 476, 578, 329, 341,
	344, 334, 353, 0, 354, 330, 331, 336, 338, 339,
	340, 345, 346, 350, 356, 246, 207, 382, 390, 557,
	306, 213, 214, 215, 504, 505, 506, 507, 592, 593,
	597, 453, 454, 455, 456, 287, 587, 303, 459, 458,
	325, 326, 371, 440, 520, 522, 533, 537, 539, 541,
	547, 550, 521, 523, 534, 538, 540, 542, 548, 551,
	510, 512, 514, 516, 529, 528, 525, 553, 554, 531,
	536, 515, 527, 532, 545, 552, 549, 509, 513, 517,
	526, 544, 543, 524, 535, 546, 530, 518, 511, 519,
	0, 196, 218, 360, 0, 445, 283, 621, 591, 586,
	203, 220, 0, 257, 0, 0, 0, 0, 0, 0,
	2319, 0, 0, 2318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 219, 229,
	233, 240, 256, 271, 273, 280, 293, 304, 312, 313,
	316, 322, 372, 378, 379, 380, 381, 400, 401, 402,
	405, 408, 409, 412, 414, 415, 418, 422, 426, 427,
	428, 430, 432, 434, 446, 451, 465, 466, 467, 468,
	469, 472, 473, 478, 479, 480, 481, 482, 490, 491,
	496, 565, 567, 580, 598, 604, 471, 295, 296, 435,
	436, 308, 309, 618, 619, 294, 575, 605, 573, 617,
	599, 429, 370, 0, 0, 373, 276, 299, 314, 0,
	590, 492, 224, 457, 285, 248, 0, 0, 208, 243,
	227, 254, 269, 272, 318, 383, 391, 420, 425, 291,
	266, 241, 450, 238, 475, 499, 500, 501, 503, 387,
	261, 424, 388, 0, 368, 555, 556, 310, 508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 2268, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 358, 262, 0, 0, 421, 0,
	202, 0, 477, 249, 369, 366, 562, 277, 268, 264,
	247, 311, 377, 419, 498, 413, 0, 362, 0, 0,
	487, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 245, 319,
	201, 404, 488, 281, 0, 0, 0, 0, 1893, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 343, 352, 351, 332,
	333, 335, 337, 342, 349, 355, 0, 0, 0, 0,
	0, 260, 315, 267, 259, 559, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 393, 252, 0, 444, 0, 0, 0, 601,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 324,
	197, 222, 0, 0, 403, 452, 464, 0, 0, 0,
	250, 0, 462, 417, 579, 230, 279, 449, 423, 460,
	431, 282, 0, 2266, 461, 364, 564, 441, 576, 602,
	603, 258, 397, 588, 502, 596, 620, 223, 255, 411,
	495, 582, 484, 389, 560, 561, 323, 483, 290, 200,
	361, 608, 221, 470, 363, 239, 228, 566, 585, 284,
	447, 615, 210, 497, 574, 236, 474, 0, 0, 622,
	244, 494, 212, 571, 493, 385, 320, 321, 211, 0,
	448, 263, 288, 0, 0, 253, 406, 568, 569, 251,
	623, 225, 595, 217, 0, 594, 399, 563, 572, 386,
	375, 216, 570, 384, 374, 328, 347, 348, 275, 301,
	438, 367, 439, 300, 302, 395, 394, 396, 204, 583,
	0, 205, 0, 489, 584, 624, 443, 209, 231, 232,
	234, 0, 274, 278, 286, 289, 297, 298, 307, 359,
	410, 437, 433, 442, 0, 558, 577, 589, 600, 606,
	607, 609, 610, 611, 612, 613, 616, 614, 398, 305,
	485, 327, 365, 0, 0, 416, 463, 237, 581, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 376, 476, 578, 329, 341, 344, 334, 353,
	0, 354, 330, 331, 336, 338, 339, 340, 345, 346,
	350, 356, 246, 207, 382, 390, 557, 306, 213, 214,
	215, 504, 505, 506, 507, 592, 593, 597, 453, 454,
	455, 456, 287, 587, 303, 459, 458, 325, 326, 371,
	440, 520, 522, 533, 537, 539, 541, 547, 550, 521,
	523, 534, 538, 540, 542, 548, 551, 510, 512, 514,
	516, 529, 528, 525, 553, 554, 531, 536, 515, 527,
	532, 545, 552, 549, 509, 513, 517, 526, 544, 543,
	524, 535, 546, 530, 518, 511, 519, 0, 196, 218,
	360, 0, 445, 283, 621, 591, 586, 203, 220, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 219, 229, 233, 240, 256,
	271, 273, 280, 293, 304, 312, 313, 316, 322, 372,
	378, 379, 380, 381, 400, 401, 402, 405, 408, 409,
	412, 414, 415, 418, 422, 426, 427, 428, 430, 432,
	434, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 565, 567,
	580, 598, 604, 471, 295, 296, 435, 436, 308, 309,
	618, 619, 294, 575, 605, 573, 617, 599, 429, 370,
	0, 0, 373, 276, 299, 314, 0, 590, 492, 224,
	457, 285, 248, 0, 0, 208, 243, 227, 254, 269,
	272, 318, 383, 391, 420, 425, 291, 266, 241, 450,
	238, 475, 499, 500, 501, 503, 387, 261, 424, 388,
	0, 368, 555, 556, 310, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 358, 262, 0, 0, 421, 0, 202, 0, 477,
	249, 369, 366, 562, 277, 268, 264, 247, 311, 377,
	419, 498, 413, 0, 362, 0, 0, 487, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 245, 319, 201, 404, 488,
	281, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 343, 352, 351, 332, 333, 335, 337,
	342, 349, 355, 0, 0, 0, 0, 0, 260, 315,
	267, 259, 559, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 393,
	252, 0, 444, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 357, 1057, 324, 197, 222, 1055,
	0, 403, 452, 464, 0, 0, 0, 250, 0, 462,
	417, 579, 230, 279, 449, 423, 460, 431, 282, 0,
	0, 461, 364, 564, 441, 576, 602, 603, 258, 397,
	588, 502, 596, 620, 223, 255, 411, 495, 582, 484,
	389, 560, 561, 323, 483, 290, 200, 361, 608, 221,
	470, 363, 239, 228, 566, 585, 284, 447, 615, 210,
	497, 574, 236, 474, 0, 0, 622, 244, 494, 212,
	571, 493, 385, 320, 321, 211, 0, 448, 263, 288,
	0, 0, 253, 406, 568, 569, 251, 623, 225, 595,
	217, 0, 594, 399, 563, 572, 386, 375, 216, 570,
	384, 374, 328, 347, 348, 275, 301, 438, 367, 439,
	300, 302, 395, 394, 396, 204, 583, 0, 205, 0,
	489, 584, 624, 443, 209, 231, 232, 234, 0, 274,
	278, 286, 289, 297, 298, 307, 359, 410, 437, 433,
	442, 0, 558, 577, 589, 600, 606, 607, 609, 610,
	611, 612, 613, 616, 614, 398, 305, 485, 327, 365,
	0, 0, 416, 463, 237, 581, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 376,
	476, 578, 329, 341, 344, 334, 353, 0, 354, 330,
	331, 336, 338, 339, 340, 345, 346, 350, 356, 246,
	207, 382, 390, 557, 306, 213, 214, 215, 504, 505,
	506, 507, 592, 593, 597, 453, 454, 455, 456, 287,
	587, 303, 459, 458, 325, 326, 371, 440, 520, 522,
	533, 537, 539, 541, 547, 550, 521, 523, 534, 538,
	540, 542, 548, 551, 510, 512, 514, 516, 529, 528,
	525, 553, 554, 531, 536, 515, 527, 532, 545, 552,
	549, 509, 513, 517, 526, 544, 543, 524, 535, 546,
	530, 518, 511, 519, 0, 196, 218, 360, 0, 445,
	283, 621, 591, 586, 203, 220, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 219, 229, 233, 240, 256, 271, 273, 280,
	293, 304, 312, 313, 316, 322, 372, 378, 379, 380,
	381, 400, 401, 402, 405, 408, 409, 412, 414, 415,
	418, 422, 426, 427, 428, 430, 432, 434, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 565, 567, 580, 598, 604,
	471, 295, 296, 435, 436, 308, 309, 618, 619, 294,
	575, 605, 573, 617, 599, 429, 370, 0, 0, 373,
	276, 299, 314, 0, 590, 492, 224, 457, 285, 248,
	0, 0, 208, 243, 227, 254, 269, 272, 318, 383,
	391, 420, 425, 291, 266, 241, 450, 238, 475, 499,
	500, 501, 503, 387, 261, 424, 388, 0, 368, 555,
	556, 310, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 2268, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 358, 262,
	0, 0, 421, 0, 202, 0, 477, 249, 369, 366,
	562, 277, 268, 264, 247, 311, 377, 419, 498, 413,
	0, 362, 0, 0, 487, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 245, 319, 201, 404, 488, 281, 0, 0,
	0, 0, 1893, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	343, 352, 351, 332, 333, 335, 337, 342, 349, 355,
	0, 0, 0, 0, 0, 260, 315, 267, 259, 559,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 393, 252, 0, 444,
	0, 0, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 324, 197, 222, 0, 0, 403, 452,
	464, 0, 0, 0, 250, 0, 462, 417, 579, 230,
	279, 449, 423, 460, 431, 282, 0, 0, 461, 364,
	564, 441, 576, 602, 603, 258, 397, 588, 502, 596,
	620, 223, 255, 411, 495, 582, 484, 389, 560, 561,
	323, 483, 290, 200, 361, 608, 221, 470, 363, 239,
	228, 566, 585, 284, 447, 615, 210, 497, 574, 236,
	474, 0, 0, 622, 244, 494, 212, 571, 493, 385,
	320, 321, 211, 0, 448, 263, 288, 0, 0, 253,
	406, 568, 569, 251, 623, 225, 595, 217, 0, 594,
	399, 563, 572, 386, 375, 216, 570, 384, 374, 328,
	347, 348, 275, 301, 438, 367, 439, 300, 302, 395,
	394, 396, 204, 583, 0, 205, 0, 489, 584, 624,
	443, 209, 231, 232, 234, 0, 274, 278, 286, 289,
	297, 298, 307, 359, 410, 437, 433, 442, 0, 558,
	577, 589, 600, 606, 607, 609, 610, 611, 612, 613,
	616, 614, 398, 305, 485, 327, 365, 0, 0, 416,
	463, 237, 581, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 376, 476, 578, 329,
	341, 344, 334, 353, 0, 354, 330, 331, 336, 338,
	339, 340, 345, 346, 350, 356, 246, 207, 382, 390,
	557, 306, 213, 214, 215, 504, 505, 506, 507, 592,
	593, 597, 453, 454, 455, 456, 287, 587, 303, 459,
	458, 325, 326, 371, 440, 520, 522, 533, 537, 539,
	541, 547, 550, 521, 523, 534, 538, 540, 542, 548,
	551, 510, 512, 514, 516, 529, 528, 525, 553, 554,
	531, 536, 515, 527, 532, 545, 552, 549, 509, 513,
	517, 526, 544, 543, 524, 535, 546, 530, 518, 511,
	519, 0, 196, 218, 360, 0, 445, 283, 621, 591,
	586, 203, 220, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 219,
	229, 233, 240, 256, 271, 273, 280, 293, 304, 312,
	313, 316, 322, 372, 378, 379, 380, 381, 400, 401,
	402, 405, 408, 409, 412, 414, 415, 418, 422, 426,
	427, 428, 430, 432, 434, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 565, 567, 580, 598, 604, 471, 295, 296,
	435, 436, 308, 309, 618, 619, 294, 575, 605, 573,
	617, 599, 429, 370, 0, 0, 373, 276, 299, 314,
	0, 590, 492, 224, 457, 285, 248, 0, 0, 208,
	243, 227, 254, 269, 272, 318, 383, 391, 420, 425,
	291, 266, 241, 450, 238, 475, 499, 500, 501, 503,
	387, 261, 424, 388, 0, 368, 555, 556, 310, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 358, 262, 0, 0, 421,
	0, 202, 0, 477, 249, 369, 366, 562, 277, 268,
	264, 247, 311, 377, 419, 498, 413, 0, 362, 0,
	0, 487, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 245,
	319, 201, 404, 488, 281, 0, 0, 0, 1690, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 343, 352, 351,
	332, 333, 335, 337, 342, 349, 355, 0, 0, 0,
	0, 0, 260, 315, 267, 259, 559, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 393, 252, 0, 444, 0, 0, 0,
	601, 0, 0, 0, 3804, 0, 0, 0, 357, 0,
	324, 197, 222, 0, 0, 403, 452, 464, 0, 0,
	0, 250, 0, 462, 417, 579, 230, 279, 449, 423,
	460, 431, 282, 0, 0, 461, 364, 564, 441, 576,
	602, 603, 258, 397, 588, 502, 596, 620, 223, 255,
	411, 495, 582, 484, 389, 560, 561, 323, 483, 290,
	200, 361, 608, 221, 470, 363, 239, 228, 566, 585,
	284, 447, 615, 210, 497, 574, 236, 474, 0, 0,
	622, 244, 494, 212, 571, 493, 385, 320, 321, 211,
	0, 448, 263, 288, 0, 0, 253, 406, 568, 569,
	251, 623, 225, 595, 217, 0, 594, 399, 563, 572,
	386, 375, 216, 570, 384, 374, 328, 347, 348, 275,
	301, 438, 367, 439, 300, 302, 395, 394, 396, 204,
	583, 0, 205, 0, 489, 584, 624, 443, 209, 231,
	232, 234, 0, 274, 278, 286, 289, 297, 298, 307,
	359, 410, 437, 433, 442, 0, 558, 577, 589, 600,
	606, 607, 609, 610, 611, 612, 613, 616, 614, 398,
	305, 485, 327, 365, 0, 0, 416, 463, 237, 581,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 376, 476, 578, 329, 341, 344, 334,
	353, 0, 354, 330, 331, 336, 338, 339, 340, 345,
	346, 350, 356, 246, 207, 382, 390, 557, 306, 213,
	214, 215, 504, 505, 506, 507, 592, 593, 597, 453,
	454, 455, 456, 287, 587, 303, 459, 458, 325, 326,
	371, 440, 520, 522, 533, 537, 539, 541, 547, 550,
	521, 523, 534, 538, 540, 542, 548, 551, 510, 512,
	514, 516, 529, 528, 525, 553, 554, 531, 536, 515,
	527, 532, 545, 552, 549, 509, 513, 517, 526, 544,
	543, 524, 535, 546, 530, 518, 511, 519, 0, 196,
	218, 360, 0, 445, 283, 621, 591, 586, 203, 220,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 219, 229, 233, 240,
	256, 271, 273, 280, 293, 304, 312, 313, 316, 322,
	372, 378, 379, 380, 381, 400, 401, 402, 405, 408,
	409, 412, 414, 415, 418, 422, 426, 427, 428, 430,
	432, 434, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 565,
	567, 580, 598, 604, 471, 295, 296, 435, 436, 308,
	309, 618, 619, 294, 575, 605, 573, 617, 599, 429,
	370, 0, 0, 373, 276, 299, 314, 0, 590, 492,
	224, 457, 285, 248, 0, 0, 208, 243, 227, 254,
	269, 272, 318, 383, 391, 420, 425, 291, 266, 241,
	450, 238, 475, 499, 500, 501, 503, 387, 261, 424,
	388, 0, 368, 555, 556, 310, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 358, 262, 0, 0, 421, 0, 202, 0,
	477, 249, 369, 366, 562, 277, 268, 264, 247, 311,
	377, 419, 498, 413, 0, 362, 0, 0, 487, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 245, 319, 201, 404,
	488, 281, 0, 0, 0, 0, 2050, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 343, 352, 351, 332, 333, 335,
	337, 342, 349, 355, 0, 0, 0, 0, 0, 260,
	315, 267, 259, 559, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	393, 252, 0, 444, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 324, 197, 222,
	0, 0, 403, 452, 464, 0, 0, 0, 250, 0,
	462, 417, 579, 230, 279, 449, 423, 460, 431, 282,
	0, 0, 461, 364, 564, 441, 576, 602, 603, 258,
	397, 588, 502, 596, 620, 223, 255, 411, 495, 582,
	484, 389, 560, 561, 323, 483, 290, 200, 361, 608,
	221, 470, 363, 239, 228, 566, 585, 284, 447, 615,
	210, 497, 574, 236, 474, 0, 0, 622, 244, 494,
	212, 571, 493, 385, 320, 321, 211, 0, 448, 263,
	288, 0, 0, 253, 406, 568, 569, 251, 623, 225,
	595, 217, 0, 594, 399, 563, 572, 386, 375, 216,
	570, 384, 374, 328, 347, 348, 275, 301, 438, 367,
	439, 300, 302, 395, 394, 396, 204, 583, 0, 205,
	0, 489, 584, 624, 443, 209, 231, 232, 234, 0,
	274, 278, 286, 289, 297, 298, 307, 359, 410, 437,
	433, 442, 0, 558, 577, 589, 600, 606, 607, 609,
	610, 611, 612, 613, 616, 614, 398, 305, 485, 327,
	365, 0, 0, 416, 463, 237, 581, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	376, 476, 578, 329, 341, 344, 334, 353, 0, 354,
	330, 331, 336, 338, 339, 340, 345, 346, 350, 356,
	246, 207, 382, 390, 557, 306, 213, 214, 215, 504,
	505, 506, 507, 592, 593, 597, 453, 454, 455, 456,
	287, 587, 303, 459, 458, 325, 326, 371, 440, 520,
	522, 533, 537, 539, 541, 547, 550, 521, 523, 534,
	538, 540, 542, 548, 551, 510, 512, 514, 516, 529,
	528, 525, 553, 554, 531, 536, 515, 527, 532, 545,
	552, 549, 509, 513, 517, 526, 544, 543, 524, 535,
	546, 530, 518, 511, 519, 0, 196, 218, 360, 0,
	445, 283, 621, 591, 586, 203, 220, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 219, 229, 233, 240, 256, 271, 273,
	280, 293, 304, 312, 313, 316, 322, 372, 378, 379,
	380, 381, 400, 401, 402, 405, 408, 409, 412, 414,
	415, 418, 422, 426, 427, 428, 430, 432, 434, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 565, 567, 580, 598,
	604, 471, 295, 296, 435, 436, 308, 309, 618, 619,
	294, 575, 605, 573, 617, 599, 429, 370, 0, 0,
	373, 276, 299, 314, 0, 590, 492, 224, 457, 285,
	248, 0, 0, 208, 243, 227, 254, 269, 272, 318,
	383, 391, 420, 425, 291, 266, 241, 450, 238, 475,
	499, 500, 501, 503, 387, 261, 424, 388, 0, 368,
	555, 556, 310, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 358,
	262, 0, 0, 421, 0, 202, 0, 477, 249, 369,
	366, 562, 277, 268, 264, 247, 311, 377, 419, 498,
	413, 0, 362, 0, 0, 487, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 245, 319, 201, 404, 488, 281, 0,
	0, 0, 0, 2753, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 343, 352, 351, 332, 333, 335, 337, 342, 349,
	355, 0, 0, 0, 0, 0, 260, 315, 267, 259,
	559, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 393, 252, 0,
	444, 0, 0, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 324, 197, 222, 0, 0, 403,
	452, 464, 0, 0, 0, 250, 0, 462, 417, 579,
	230, 279, 449, 423, 460, 431, 282, 0, 0, 461,
	364, 564, 441, 576, 602, 603, 258, 397, 588, 502,
	596, 620, 223, 255, 411, 495, 582, 484, 389, 560,
	561, 323, 483, 290, 200, 361, 608, 221, 470, 363,
	239, 228, 566, 585, 284, 447, 615, 210, 497, 574,
	236, 474, 0, 0, 622, 244, 494, 212, 571, 493,
	385, 320, 321, 211, 0, 448, 263, 288, 0, 0,
	253, 406, 568, 569, 251, 623, 225, 595, 217, 0,
	594, 399, 563, 572, 386, 375, 216, 570, 384, 374,
	328, 347, 348, 275, 301, 438, 367, 439, 300, 302,
	395, 394, 396, 204, 583, 0, 205, 0, 489, 584,
	624, 443, 209, 231, 232, 234, 0, 274, 278, 286,
	289, 297, 298, 307, 359, 410, 437, 433, 442, 0,
	558, 577, 589, 600, 606, 607, 609, 610, 611, 612,
	613, 616, 614, 398, 305, 485, 327, 365, 0, 0,
	416, 463, 237, 581, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 376, 476, 578,
	329, 341, 344, 334, 353, 0, 354, 330, 331, 336,
	338, 339, 340, 345, 346, 350, 356, 246, 207, 382,
	390, 557, 306, 213, 214, 215, 504, 505, 506, 507,
	592, 593, 597, 453, 454, 455, 456, 287, 587, 303,
	459, 458, 325, 326, 371, 440, 520, 522, 533, 537,
	539, 541, 547, 550, 521, 523, 534, 538, 540, 542,
	548, 551, 510, 512, 514, 516, 529, 528, 525, 553,
	554, 531, 536, 515, 527, 532, 545, 552, 549, 509,
	513, 517, 526, 544, 543, 524, 535, 546, 530, 518,
	511, 519, 0, 196, 218, 360, 0, 445, 283, 621,
	591, 586, 203, 220, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	219, 229, 233, 240, 256, 271, 273, 280, 293, 304,
	312, 313, 316, 322, 372, 378, 379, 380, 381, 400,
	401, 402, 405, 408, 409, 412, 414, 415, 418, 422,
	426, 427, 428, 430, 432, 434, 446, 451, 465, 466,
	467, 468, 469, 472, 473, 478, 479, 480, 481, 482,
	490, 491, 496, 565, 567, 580, 598, 604, 471, 295,
	296, 435, 436, 308, 309, 618, 619, 294, 575, 605,
	573, 617, 599, 429, 370, 0, 0, 373, 276, 299,
	314, 0, 590, 492, 224, 457, 285, 248, 0, 0,
	208, 243, 227, 254, 269, 272, 318, 383, 391, 420,
	425, 291, 266, 241, 450, 238, 475, 499, 500, 501,
	503, 387, 261, 424, 388, 0, 368, 555, 556, 310,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 358, 262, 0, 0,
	421, 0, 202, 0, 477, 249, 369, 366, 562, 277,
	268, 264, 247, 311, 377, 419, 498, 413, 0, 362,
	0, 0, 487, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	245, 319, 201, 404, 488, 281, 0, 0, 0, 0,
	0, 691, 0, 0, 0, 0, 2738, 0, 0, 0,
	0, 235, 0, 0, 242, 2739, 0, 0, 343, 352,
	351, 332, 333, 335, 337, 342, 349, 355, 0, 0,
	0, 0, 0, 260, 315, 267, 259, 559, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 393, 252, 0, 444, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 324, 197, 222, 0, 0, 403, 452, 464, 0,
	0, 0, 250, 0, 462, 417, 579, 230, 279, 449,
	423, 460, 431, 282, 0, 0, 461, 364, 564, 441,
	576, 602, 603, 258, 397, 588, 502, 596, 620, 223,
	255, 411, 495, 582, 484, 389, 560, 561, 323, 483,
	290, 200, 361, 608, 221, 470, 363, 239, 228, 566,
	585, 284, 447, 615, 210, 497, 574, 236, 474, 0,
	0, 622, 244, 494, 212, 571, 493, 385, 320, 321,
	211, 0, 448, 263, 288, 0, 0, 253, 406, 568,
	569, 251, 623, 225, 595, 217, 0, 594, 399, 563,
	572, 386, 375, 216, 570, 384, 374, 328, 347, 348,
	275, 301, 438, 367, 439, 300, 302, 395, 394, 396,
	204, 583, 0, 205, 0, 489, 584, 624, 443, 209,
	231, 232, 234, 0, 274, 278, 286, 289, 297, 298,
	307, 359, 410, 437, 433, 442, 0, 558, 577, 589,
	600, 606, 607, 609, 610, 611, 612, 613, 616, 614,
	398, 305, 485, 327, 365, 0, 0, 416, 463, 237,
	581, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 376, 476, 578, 329, 341, 344,
	334, 353, 0, 354, 330, 331, 336, 338, 339, 340,
	345, 346, 350, 356, 246, 207, 382, 390, 557, 306,
	213, 214, 215, 504, 505, 506, 507, 592, 593, 597,
	453, 454, 455, 456, 287, 587, 303, 459, 458, 325,
	326, 371, 440, 520, 522, 533, 537, 539, 541, 547,
	550, 521, 523, 534, 538, 540, 542, 548, 551, 510,
	512, 514, 516, 529, 528, 525, 553, 554, 531, 536,
	515, 527, 532, 545, 552, 549, 509, 513, 517, 526,
	544, 543, 524, 535, 546, 530, 518, 511, 519, 0,
	196, 218, 360, 0, 445, 283, 621, 591, 586, 203,
	220, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 219, 229, 233,
	240, 256, 271, 273, 280, 293, 304, 312, 313, 316,
	322, 372, 378, 379, 380, 381, 400, 401, 402, 405,
	408, 409, 412, 414, 415, 418, 422, 426, 427, 428,
	430, 432, 434, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	565, 567, 580, 598, 604, 471, 295, 296, 435, 436,
	308, 309, 618, 619, 294, 575, 605, 573, 617, 599,
	429, 370, 0, 0, 373, 276, 299, 314, 0, 590,
	492, 224, 457, 285, 248, 0, 0, 208, 243, 227,
	254, 269, 272, 318, 383, 391, 420, 425, 291, 266,
	241, 450, 238, 475, 499, 500, 501, 503, 387, 261,
	424, 388, 0, 368, 555, 556, 310, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 1733,
	0, 0, 0, 358, 262, 0, 0, 421, 0, 202,
	0, 477, 249, 369, 366, 562, 277, 268, 264, 247,
	311, 377, 419, 498, 413, 0, 362, 0, 0, 487,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 245, 319, 201,
	404, 488, 281, 0, 0, 0, 0, 1732, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 343, 352, 351, 332, 333,
	335, 337, 342, 349, 355, 0, 0, 0, 0, 0,
	260, 315, 267, 259, 559, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	0, 393, 252, 0, 444, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 324, 197,
	222, 0, 0, 403, 452, 464, 0, 0, 0, 250,
	0, 462, 417, 579, 230, 279, 449, 423, 460, 431,
	282, 0, 0, 461, 364, 564, 441, 576, 602, 603,
	258, 397, 588, 502, 596, 620, 223, 255, 411, 495,
	582, 484, 389, 560, 561, 323, 483, 290, 200, 361,
	608, 221, 470, 363, 239, 228, 566, 585, 284, 447,
	615, 210, 497, 574, 236, 474, 0, 0, 622, 244,
	494, 212, 571, 493, 385, 320, 321, 211, 0, 448,
	263, 288, 0, 0, 253, 406, 568, 569, 251, 623,
	225, 595, 217, 0, 594, 399, 563, 572, 386, 375,
	216, 570, 384, 374, 328, 347, 348, 275, 301, 438,
	367, 439, 300, 302, 395, 394, 396, 204, 583, 0,
	205, 0, 489, 584, 624, 443, 209, 231, 232, 234,
	0, 274, 278, 286, 289, 297, 298, 307, 359, 410,
	437, 433, 442, 0, 558, 577, 589, 600, 606, 607,
	609, 610, 611, 612, 613, 616, 614, 398, 305, 485,
	327, 365, 0, 0, 416, 463, 237, 581, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 376, 476, 578, 329, 341, 344, 334, 353, 0,
	354, 330, 331, 336, 338, 339, 340, 345, 346, 350,
	356, 246, 207, 382, 390, 557, 306, 213, 214, 215,
	504, 505, 506, 507, 592, 593, 597, 453, 454, 455,
	456, 287, 587, 303, 459, 458, 325, 326, 371, 440,
	520, 522, 533, 537, 539, 541, 547, 550, 521, 523,
	534, 538, 540, 542, 548, 551, 510, 512, 514, 516,
	529, 528, 525, 553, 554, 531, 536, 515, 527, 532,
	545, 552, 549, 509, 513, 517, 526, 544, 543, 524,
	535, 546, 530, 518, 511, 519, 0, 196, 218, 360,
	0, 445, 283, 621, 591, 586, 203, 220, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 219, 229, 233, 240, 256, 271,
	273, 280, 293, 304, 312, 313, 316, 322, 372, 378,
	379, 380, 381, 400, 401, 402, 405, 408, 409, 412,
	414, 415, 418, 422, 426, 427, 428, 430, 432, 434,
	446, 451, 465, 466, 467, 468, 469, 472, 473, 478,
	479, 480, 481, 482, 490, 491, 496, 565, 567, 580,
	598, 604, 471, 295, 296, 435, 436, 308, 309, 618,
	619, 294, 575, 605, 573, 617, 599, 429, 370, 0,
	0, 373, 276, 299, 314, 0, 590, 492, 224, 457,
	285, 248, 0, 0, 208, 243, 227, 254, 269, 272,
	318, 383, 391, 420, 425, 291, 266, 241, 450, 238,
	475, 499, 500, 501, 503, 387, 261, 424, 388, 0,
	368, 555, 556, 310, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	358, 262, 0, 0, 421, 0, 202, 0, 477, 249,
	369, 366, 562, 277, 268, 264, 247, 311, 377, 419,
	498, 413, 0, 362, 0, 0, 487, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 245, 319, 201, 404, 488, 281,
	0, 0, 0, 0, 0, 693, 694, 695, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 343, 352, 351, 332, 333, 335, 337, 342,
	349, 355, 0, 0, 0, 0, 0, 260, 315, 267,
	259, 559, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 393, 252,
	0, 444, 0, 0, 0, 601, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 324, 197, 222, 0, 0,
	403, 452, 464, 0, 0, 0, 250, 0, 462, 417,
	579, 230, 279, 449, 423, 460, 431, 282, 0, 0,
	461, 364, 564, 441, 576, 602, 603, 258, 397, 588,
	502, 596, 620, 223, 255, 411, 495, 582, 484, 389,
	560, 561, 323, 483, 290, 200, 361, 608, 221, 470,
	363, 239, 228, 566, 585, 284, 447, 615, 210, 497,
	574, 236, 474, 0, 0, 622, 244, 494, 212, 571,
	493, 385, 320, 321, 211, 0, 448, 263, 288, 0,
	0, 253, 406, 568, 569, 251, 623, 225, 595, 217,
	0, 594, 399, 563, 572, 386, 375, 216, 570, 384,
	374, 328, 347, 348, 275, 301, 438, 367, 439, 300,
	302, 395, 394, 396, 204, 583, 0, 205, 0, 489,
	584, 624, 443, 209, 231, 232, 234, 0, 274, 278,
	286, 289, 297, 298, 307, 359, 410, 437, 433, 442,
	0, 558, 577, 589, 600, 606, 607, 609, 610, 611,
	612, 613, 616, 614, 398, 305, 485, 327, 365, 0,
	0, 416, 463, 237, 581, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 376, 476,
	578, 329, 341, 344, 334, 353, 0, 354, 330, 331,
	336, 338, 339, 340, 345, 346, 350, 356, 246, 207,
	382, 390, 557, 306, 213, 214, 215, 504, 505, 506,
	507, 592, 593, 597, 453, 454, 455, 456, 287, 587,
	303, 459, 458, 325, 326, 371, 440, 520, 522, 533,
	537, 539, 541, 547, 550, 521, 523, 534, 538, 540,
	542, 548, 551, 510, 512, 514, 516, 529, 528, 525,
	553, 554, 531, 536, 515, 527, 532, 545, 552, 549,
	509, 513, 517, 526, 544, 543, 524, 535, 546, 530,
	518, 511, 519, 0, 196, 218, 360, 0, 445, 283,
	621, 591, 586, 203, 220, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 219, 229, 233, 240, 256, 271, 273, 280, 293,
	304, 312, 313, 316, 322, 372, 378, 379, 380, 381,
	400, 401, 402, 405, 408, 409, 412, 414, 415, 418,
	422, 426, 427, 428, 430, 432, 434, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 565, 567, 580, 598, 604, 471,
	295, 296, 435, 436, 308, 309, 618, 619, 294, 575,
	605, 573, 617, 599, 429, 370, 0, 0, 373, 276,
	299, 314, 0, 590, 492, 224, 457, 285, 248, 0,
	0, 208, 243, 227, 254, 269, 272, 318, 383, 391,
	420, 425, 291, 266, 241, 450, 238, 475, 499, 500,
	501, 503, 387, 261, 424, 388, 0, 368, 555, 556,
	310, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 358, 262, 0,
	0, 421, 0, 202, 0, 477, 249, 369, 366, 562,
	277, 268, 264, 247, 311, 377, 419, 498, 413, 0,
	362, 0, 0, 487, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 245, 319, 201, 404, 488, 281, 0, 0, 0,
	0, 0, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 343,
	352, 351, 332, 333, 335, 337, 342, 349, 355, 0,
	0, 0, 0, 0, 260, 315, 267, 259, 559, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 393, 252, 0, 444, 0,
	0, 0, 601, 0, 0, 0, 3929, 0, 0, 0,
	357, 0, 324, 197, 222, 0, 0, 403, 452, 464,
	0, 0, 0, 250, 0, 462, 417, 579, 230, 279,
	449, 423, 460, 431, 282, 0, 0, 461, 364, 564,
	441, 576, 602, 603, 258, 397, 588, 502, 596, 620,
	223, 255, 411, 495, 582, 484, 389, 560, 561, 323,
	483, 290, 200, 361, 608, 221, 470, 363, 239, 228,
	566, 585, 284, 447, 615, 210, 497, 574, 236, 474,
	0, 0, 622, 244, 494, 212, 571, 493, 385, 320,
	321, 211, 0, 448, 263, 288, 0, 0, 253, 406,
	568, 569, 251, 623, 225, 595, 217, 0, 594, 399,
	563, 572, 386, 375, 216, 570, 384, 374, 328, 347,
	348, 275, 301, 438, 367, 439, 300, 302, 395, 394,
	396, 204, 583, 0, 205, 0, 489, 584, 624, 443,
	209, 231, 232, 234, 0, 274, 278, 286, 289, 297,
	298, 307, 359, 410, 437, 433, 442, 0, 558, 577,
	589, 600, 606, 607, 609, 610, 611, 612, 613, 616,
	614, 398, 305, 485, 327, 365, 0, 0, 416, 463,
	237, 581, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 376, 476, 578, 329, 341,
	344, 334, 353, 0, 354, 330, 331, 336, 338, 339,
	340, 345, 346, 350, 356, 246, 207, 382, 390, 557,
	306, 213, 214, 215, 504, 505, 506, 507, 592, 593,
	597, 453, 454, 455, 456, 287, 587, 303, 459, 458,
	325, 326, 371, 440, 520, 522, 533, 537, 539, 541,
	547, 550, 521, 523, 534, 538, 540, 542, 548, 551,
	510, 512, 514, 516, 529, 528, 525, 553, 554, 531,
	536, 515, 527, 532, 545, 552, 549, 509, 513, 517,
	526, 544, 543, 524, 535, 546, 530, 518, 511, 519,
	0, 196, 218, 360, 0, 445, 283, 621, 591, 586,
	203, 220, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 219, 229,
	233, 240, 256, 271, 273, 280, 293, 304, 312, 313,
	316, 322, 372, 378, 379, 380, 381, 400, 401, 402,
	405, 408, 409, 412, 414, 415, 418, 422, 426, 427,
	428, 430, 432, 434, 446, 451, 465, 466, 467, 468,
	469, 472, 473, 478, 479, 480, 481, 482, 490, 491,
	496, 565, 567, 580, 598, 604, 471, 295, 296, 435,
	436, 308, 309, 618, 619, 294, 575, 605, 573, 617,
	599, 429, 370, 0, 0, 373, 276, 299, 314, 0,
	590, 492, 224, 457, 285, 248, 0, 0, 208, 243,
	227, 254, 269, 272, 318, 383, 391, 420, 425, 291,
	266, 241, 450, 238, 475, 499, 500, 501, 503, 387,
	261, 424, 388, 0, 368, 555, 556, 310, 508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 358, 262, 0, 0, 421, 0,
	202, 0, 477, 249, 369, 366, 562, 277, 268, 264,
	247, 311, 377, 419, 498, 413, 0, 362, 0, 0,
	487, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 245, 319,
	201, 404, 488, 281, 0, 0, 0, 0, 1893, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 343, 352, 351, 332,
	333, 335, 337, 342, 349, 355, 0, 0, 0, 0,
	0, 260, 315, 267, 259, 559, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 393, 252, 0, 444, 0, 0, 0, 601,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 324,
	197, 222, 0, 0, 403, 452, 464, 0, 0, 0,
	250, 0, 462, 417, 579, 230, 279, 449, 423, 460,
	431, 282, 0, 0, 461, 364, 564, 441, 576, 602,
	603, 258, 397, 588, 502, 596, 620, 223, 255, 411,
	495, 582, 484, 389, 560, 561, 323, 483, 290, 200,
	361, 608, 221, 470, 363, 239, 228, 566, 585, 284,
	447, 615, 210, 497, 574, 236, 474, 0, 0, 622,
	244, 494, 212, 571, 493, 385, 320, 321, 211, 0,
	448, 263, 288, 0, 0, 253, 406, 568, 569, 251,
	623, 225, 595, 217, 0, 594, 399, 563, 572, 386,
	375, 216, 570, 384, 374, 328, 347, 348, 275, 301,
	438, 367, 439, 300, 302, 395, 394, 396, 204, 583,
	0, 205, 0, 489, 584, 624, 443, 209, 231, 232,
	234, 0, 274, 278, 286, 289, 297, 298, 307, 359,
	410, 437, 433, 442, 0, 558, 577, 589, 600, 606,
	607, 609, 610, 611, 612, 613, 616, 614, 398, 305,
	485, 327, 365, 0, 0, 416, 463, 237, 581, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 376, 476, 578, 329, 341, 344, 334, 353,
	0, 354, 330, 331, 336, 338, 339, 340, 345, 346,
	350, 356, 246, 207, 382, 390, 557, 306, 213, 214,
	215, 504, 505, 506, 507, 592, 593, 597, 453, 454,
	455, 456, 287, 587, 303, 459, 458, 325, 326, 371,
	440, 520, 522, 533, 537, 539, 541, 547, 550, 521,
	523, 534, 538, 540, 542, 548, 551, 510, 512, 514,
	516, 529, 528, 525, 553, 554, 531, 536, 515, 527,
	532, 545, 552, 549, 509, 513, 517, 526, 544, 543,
	524, 535, 546, 530, 518, 511, 519, 0, 196, 218,
	360, 0, 445, 283, 621, 591, 586, 203, 220, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 219, 229, 233, 240, 256,
	271, 273, 280, 293, 304, 312, 313, 316, 322, 372,
	378, 379, 380, 381, 400, 401, 402, 405, 408, 409,
	412, 414, 415, 418, 422, 426, 427, 428, 430, 432,
	434, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 565, 567,
	580, 598, 604, 471, 295, 296, 435, 436, 308, 309,
	618, 619, 294, 575, 605, 573, 617, 599, 429, 370,
	0, 0, 373, 276, 299, 314, 0, 590, 492, 224,
	457, 285, 248, 0, 0, 208, 243, 227, 254, 269,
	272, 318, 383, 391, 420, 425, 291, 266, 241, 450,
	238, 475, 499, 500, 501, 503, 387, 261, 424, 388,
	0, 368, 555, 556, 310, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 358, 262, 0, 0, 421, 0, 202, 0, 477,
	249, 369, 366, 562, 277, 268, 264, 247, 311, 377,
	419, 498, 413, 0, 362, 0, 0, 487, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 245, 319, 201, 404, 488,
	281, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 343, 352, 351, 332, 333, 335, 337,
	342, 349, 355, 0, 0, 0, 0, 0, 260, 315,
	267, 259, 559, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 393,
	252, 0, 444, 0, 0, 0, 601, 0, 0, 0,
	3804, 0, 0, 0, 357, 0, 324, 197, 222, 0,
	0, 403, 452, 464, 0, 0, 0, 250, 0, 462,
	417, 579, 230, 279, 449, 423, 460, 431, 282, 0,
	0, 461, 364, 564, 441, 576, 602, 603, 258, 397,
	588, 502, 596, 620, 223, 255, 411, 495, 582, 484,
	389, 560, 561, 323, 483, 290, 200, 361, 608, 221,
	470, 363, 239, 228, 566, 585, 284, 447, 615, 210,
	497, 574, 236, 474, 0, 0, 622, 244, 494, 212,
	571, 493, 385, 320, 321, 211, 0, 448, 263, 288,
	0, 0, 253, 406, 568, 569, 251, 623, 225, 595,
	217, 0, 594, 399, 563, 572, 386, 375, 216, 570,
	384, 374, 328, 347, 348, 275, 301, 438, 367, 439,
	300, 302, 395, 394, 396, 204, 583, 0, 205, 0,
	489, 584, 624, 443, 209, 231, 232, 234, 0, 274,
	278, 286, 289, 297, 298, 307, 359, 410, 437, 433,
	442, 0, 558, 577, 589, 600, 606, 607, 609, 610,
	611, 612, 613, 616, 614, 398, 305, 485, 327, 365,
	0, 0, 416, 463, 237, 581, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 376,
	476, 578, 329, 341, 344, 334, 353, 0, 354, 330,
	331, 336, 338, 339, 340, 345, 346, 350, 356, 246,
	207, 382, 390, 557, 306, 213, 214, 215, 504, 505,
	506, 507, 592, 593, 597, 453, 454, 455, 456, 287,
	587, 303, 459, 458, 325, 326, 371, 440, 520, 522,
	533, 537, 539, 541, 547, 550, 521, 523, 534, 538,
	540, 542, 548, 551, 510, 512, 514, 516, 529, 528,
	525, 553, 554, 531, 536, 515, 527, 532, 545, 552,
	549, 509, 513, 517, 526, 544, 543, 524, 535, 546,
	530, 518, 511, 519, 0, 196, 218, 360, 0, 445,
	283, 621, 591, 586, 203, 220, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 219, 229, 233, 240, 256, 271, 273, 280,
	293, 304, 312, 313, 316, 322, 372, 378, 379, 380,
	381, 400, 401, 402, 405, 408, 409, 412, 414, 415,
	418, 422, 426, 427, 428, 430, 432, 434, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 565, 567, 580, 598, 604,
	471, 295, 296, 435, 436, 308, 309, 618, 619, 294,
	575, 605, 573, 617, 599, 429, 370, 0, 0, 373,
	276, 299, 314, 0, 590, 492, 224, 457, 285, 248,
	0, 0, 208, 243, 227, 254, 269, 272, 318, 383,
	391, 420, 425, 291, 266, 241, 450, 238, 475, 499,
	500, 501, 503, 387, 261, 424, 388, 0, 368, 555,
	556, 310, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 358, 262,
	0, 0, 421, 0, 202, 0, 477, 249, 369, 366,
	562, 277, 268, 264, 247, 311, 377, 419, 498, 413,
	0, 362, 0, 0, 487, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 245, 319, 201, 404, 488, 281, 0, 94,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	343, 352, 351, 332, 333, 335, 337, 342, 349, 355,
	0, 0, 0, 0, 0, 260, 315, 267, 259, 559,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 393, 252, 0, 444,
	0, 0, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 324, 197, 222, 0, 0, 403, 452,
	464, 0, 0, 0, 250, 0, 462, 417, 579, 230,
	279, 449, 423, 460, 431, 282, 0, 0, 461, 364,
	564, 441, 576, 602, 603, 258, 397, 588, 502, 596,
	620, 223, 255, 411, 495, 582, 484, 389, 560, 561,
	323, 483, 290, 200, 361, 608, 221, 470, 363, 239,
	228, 566, 585, 284, 447, 615, 210, 497, 574, 236,
	474, 0, 0, 622, 244, 494, 212, 571, 493, 385,
	320, 321, 211, 0, 448, 263, 288, 0, 0, 253,
	406, 568, 569, 251, 623, 225, 595, 217, 0, 594,
	399, 563, 572, 386, 375, 216, 570, 384, 374, 328,
	347, 348, 275, 301, 438, 367, 439, 300, 302, 395,
	394, 396, 204, 583, 0, 205, 0, 489, 584, 624,
	443, 209, 231, 232, 234, 0, 274, 278, 286, 289,
	297, 298, 307, 359, 410, 437, 433, 442, 0, 558,
	577, 589, 600, 606, 607, 609, 610, 611, 612, 613,
	616, 614, 398, 305, 485, 327, 365, 0, 0, 416,
	463, 237, 581, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 376, 476, 578, 329,
	341, 344, 334, 353, 0, 354, 330, 331, 336, 338,
	339, 340, 345, 346, 350, 356, 246, 207, 382, 390,
	557, 306, 213, 214, 215, 504, 505, 506, 507, 592,
	593, 597, 453, 454, 455, 456, 287, 587, 303, 459,
	458, 325, 326, 371, 440, 520, 522, 533, 537, 539,
	541, 547, 550, 521, 523, 534, 538, 540, 542, 548,
	551, 510, 512, 514, 516, 529, 528, 525, 553, 554,
	531, 536, 515, 527, 532, 545, 552, 549, 509, 513,
	517, 526, 544, 543, 524, 535, 546, 530, 518, 511,
	519, 0, 196, 218, 360, 0, 445, 283, 621, 591,
	586, 203, 220, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 219,
	229, 233, 240, 256, 271, 273, 280, 293, 304, 312,
	313, 316, 322, 372, 378, 379, 380, 381, 400, 401,
	402, 405, 408, 409, 412, 414, 415, 418, 422, 426,
	427, 428, 430, 432, 434, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 565, 567, 580, 598, 604, 471, 295, 296,
	435, 436, 308, 309, 618, 619, 294, 575, 605, 573,
	617, 599, 429, 370, 0, 0, 373, 276, 299, 314,
	0, 590, 492, 224, 457, 285, 248, 0, 0, 208,
	243, 227, 254, 269, 272, 318, 383, 391, 420, 425,
	291, 266, 241, 450, 238, 475, 499, 500, 501, 503,
	387, 261, 424, 388, 0, 368, 555, 556, 310, 508,
	0, 0, 0, 0, 2320, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 358, 262, 0, 0, 421,
	0, 202, 0, 477, 249, 369, 366, 562, 277, 268,
	264, 247, 311, 377, 419, 498, 413, 0, 362, 0,
	0, 487, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 245,
	319, 201, 404, 488, 281, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 343, 352, 351,
	332, 333, 335, 337, 342, 349, 355, 0, 0, 0,
	0, 0, 260, 315, 267, 259, 559, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 393, 252, 0, 444, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	324, 197, 222, 0, 0, 403, 452, 464, 0, 0,
	0, 250, 0, 462, 417, 579, 230, 279, 449, 423,
	460, 431, 282, 0, 0, 461, 364, 564, 441, 576,
	602, 603, 258, 397, 588, 502, 596, 620, 223, 255,
	411, 495, 582, 484, 389, 560, 561, 323, 483, 290,
	200, 361, 608, 221, 470, 363, 239, 228, 566, 585,
	284, 447, 615, 210, 497, 574, 236, 474, 0, 0,
	622, 244, 494, 212, 571, 493, 385, 320, 321, 211,
	0, 448, 263, 288, 0, 0, 253, 406, 568, 569,
	251, 623, 225, 595, 217, 0, 594, 399, 563, 572,
	386, 375, 216, 570, 384, 374, 328, 347, 348, 275,
	301, 438, 367, 439, 300, 302, 395, 394, 396, 204,
	583, 0, 205, 0, 489, 584, 624, 443, 209, 231,
	232, 234, 0, 274, 278, 286, 289, 297, 298, 307,
	359, 410, 437, 433, 442, 0, 558, 577, 589, 600,
	606, 607, 609, 610, 611, 612, 613, 616, 614, 398,
	305, 485, 327, 365, 0, 0, 416, 463, 237, 581,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 376, 476, 578, 329, 341, 344, 334,
	353, 0, 354, 330, 331, 336, 338, 339, 340, 345,
	346, 350, 356, 246, 207, 382, 390, 557, 306, 213,
	214, 215, 504, 505, 506, 507, 592, 593, 597, 453,
	454, 455, 456, 287, 587, 303, 459, 458, 325, 326,
	371, 440, 520, 522, 533, 537, 539, 541, 547, 550,
	521, 523, 534, 538, 540, 542, 548, 551, 510, 512,
	514, 516, 529, 528, 525, 553, 554, 531, 536, 515,
	527, 532, 545, 552, 549, 509, 513, 517, 526, 544,
	543, 524, 535, 546, 530, 518, 511, 519, 0, 196,
	218, 360, 0, 445, 283, 621, 591, 586, 203, 220,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 219, 229, 233, 240,
	256, 271, 273, 280, 293, 304, 312, 313, 316, 322,
	372, 378, 379, 380, 381, 400, 401, 402, 405, 408,
	409, 412, 414, 415, 418, 422, 426, 427, 428, 430,
	432, 434, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 565,
	567, 580, 598, 604, 471, 295, 296, 435, 436, 308,
	309, 618, 619, 294, 575, 605, 573, 617, 599, 429,
	370, 0, 0, 373, 276, 299, 314, 0, 590, 492,
	224, 457, 285, 248, 0, 0, 208, 243, 227, 254,
	269, 272, 318, 383, 391, 420, 425, 291, 266, 241,
	450, 238, 475, 499, 500, 501, 503, 387, 261, 424,
	388, 0, 368, 555, 556, 310, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 358, 262, 0, 0, 421, 0, 202, 0,
	477, 249, 369, 366, 562, 277, 268, 264, 247, 311,
	377, 419, 498, 413, 0, 362, 0, 0, 487, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 245, 319, 201, 404,
	488, 281, 0, 0, 0, 0, 1714, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 343, 352, 351, 332, 333, 335,
	337, 342, 349, 355, 0, 0, 0, 0, 0, 260,
	315, 267, 259, 559, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	393, 252, 0, 444, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 324, 197, 222,
	0, 0, 403, 452, 464, 0, 0, 0, 250, 0,
	462, 417, 579, 230, 279, 449, 423, 460, 431, 282,
	0, 0, 461, 364, 564, 441, 576, 602, 603, 258,
	397, 588, 502, 596, 620, 223, 255, 411, 495, 582,
	484, 389, 560, 561, 323, 483, 290, 200, 361, 608,
	221, 470, 363, 239, 228, 566, 585, 284, 447, 615,
	210, 497, 574, 236, 474, 0, 0, 622, 244, 494,
	212, 571, 493, 385, 320, 321, 211, 0, 448, 263,
	288, 0, 0, 253, 406, 568, 569, 251, 623, 225,
	595, 217, 0, 594, 399, 563, 572, 386, 375, 216,
	570, 384, 374, 328, 347, 348, 275, 301, 438, 367,
	439, 300, 302, 395, 394, 396, 204, 583, 0, 205,
	0, 489, 584, 624, 443, 209, 231, 232, 234, 0,
	274, 278, 286, 289, 297, 298, 307, 359, 410, 437,
	433, 442, 0, 558, 577, 589, 600, 606, 607, 609,
	610, 611, 612, 613, 616, 614, 398, 305, 485, 327,
	365, 0, 0, 416, 463, 237, 581, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	376, 476, 578, 329, 341, 344, 334, 353, 0, 354,
	330, 331, 336, 338, 339, 340, 345, 346, 350, 356,
	246, 207, 382, 390, 557, 306, 213, 214, 215, 504,
	505, 506, 507, 592, 593, 597, 453, 454, 455, 456,
	287, 587, 303, 459, 458, 325, 326, 371, 440, 520,
	522, 533, 537, 539, 541, 547, 550, 521, 523, 534,
	538, 540, 542, 548, 551, 510, 512, 514, 516, 529,
	528, 525, 553, 554, 531, 536, 515, 527, 532, 545,
	552, 549, 509, 513, 517, 526, 544, 543, 524, 535,
	546, 530, 518, 511, 519, 0, 196, 218, 360, 0,
	445, 283, 621, 591, 586, 203, 220, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 219, 229, 233, 240, 256, 271, 273,
	280, 293, 304, 312, 313, 316, 322, 372, 378, 379,
	380, 381, 400, 401, 402, 405, 408, 409, 412, 414,
	415, 418, 422, 426, 427, 428, 430, 432, 434, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 565, 567, 580, 598,
	604, 471, 295, 296, 435, 436, 308, 309, 618, 619,
	294, 575, 605, 573, 617, 599, 429, 370, 0, 0,
	373, 276, 299, 314, 0, 590, 492, 224, 457, 285,
	248, 0, 0, 208, 243, 227, 254, 269, 272, 318,
	383, 391, 420, 425, 291, 266, 241, 450, 238, 475,
	499, 500, 501, 503, 387, 261, 424, 388, 0, 368,
	555, 556, 310, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 358,
	262, 0, 0, 421, 0, 202, 0, 477, 249, 369,
	366, 562, 277, 268, 264, 247, 311, 377, 419, 498,
	413, 0, 362, 0, 0, 487, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 245, 319, 201, 404, 488, 281, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 343, 352, 351, 332, 333, 335, 337, 342, 349,
	355, 0, 0, 0, 0, 0, 260, 315, 267, 259,
	559, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 393, 252, 0,
	444, 0, 0, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 324, 197, 222, 0, 0, 403,
	452, 464, 0, 0, 0, 250, 0, 462, 417, 579,
	230, 279, 449, 423, 460, 431, 282, 0, 0, 461,
	364, 564, 441, 576, 602, 603, 258, 397, 588, 502,
	596, 620, 223, 255, 411, 495, 582, 484, 389, 560,
	561, 323, 483, 290, 200, 361, 608, 221, 470, 363,
	239, 228, 566, 585, 284, 447, 615, 210, 497, 574,
	236, 474, 0, 0, 622, 244, 494, 212, 571, 493,
	385, 320, 321, 211, 0, 448, 263, 288, 0, 0,
	253, 406, 568, 569, 251, 623, 225, 595, 217, 0,
	594, 399, 563, 572, 386, 375, 216, 570, 384, 374,
	328, 347, 348, 275, 301, 438, 367, 439, 300, 302,
	395, 394, 396, 204, 583, 0, 205, 0, 489, 584,
	624, 443, 209, 231, 232, 234, 0, 274, 278, 286,
	289, 297, 298, 307, 359, 410, 437, 433, 442, 0,
	558, 577, 589, 600, 606, 607, 609, 610, 611, 612,
	613, 616, 614, 398, 305, 485, 327, 365, 0, 0,
	416, 463, 237, 581, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 376, 476, 578,
	329, 341, 344, 334, 353, 0, 354, 330, 331, 336,
	338, 339, 340, 345, 346, 350, 356, 246, 207, 382,
	390, 557, 306, 213, 214, 215, 504, 505, 506, 507,
	592, 593, 597, 453, 454, 455, 456, 287, 587, 303,
	459, 458, 325, 326, 371, 440, 520, 522, 533, 537,
	539, 541, 547, 550, 521, 523, 534, 538, 540, 542,
	548, 551, 510, 512, 514, 516, 529, 528, 525, 553,
	554, 531, 536, 515, 527, 532, 545, 552, 549, 509,
	513, 517, 526, 544, 543, 524, 535, 546, 530, 518,
	511, 519, 0, 196, 218, 360, 2005, 445, 283, 621,
	591, 586, 203, 220, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	219, 229, 233, 240, 256, 271, 273, 280, 293, 304,
	312, 313, 316, 322, 372, 378, 379, 380, 381, 400,
	401, 402, 405, 408, 409, 412, 414, 415, 418, 422,
	426, 427, 428, 430, 432, 434, 446, 451, 465, 466,
	467, 468, 469, 472, 473, 478, 479, 480, 481, 482,
	490, 491, 496, 565, 567, 580, 598, 604, 471, 295,
	296, 435, 436, 308, 309, 618, 619, 294, 575, 605,
	573, 617, 599, 429, 370, 0, 0, 373, 276, 299,
	314, 0, 590, 492, 224, 457, 285, 248, 0, 0,
	208, 243, 227, 254, 269, 272, 318, 383, 391, 420,
	425, 291, 266, 241, 450, 238, 475, 499, 500, 501,
	503, 387, 261, 424, 388, 0, 368, 555, 556, 310,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 358, 262, 0, 0,
	421, 0, 202, 0, 477, 249, 369, 366, 562, 277,
	268, 264, 247, 311, 377, 419, 498, 413, 0, 362,
	0, 0, 487, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	245, 319, 201, 404, 488, 281, 0, 0, 0, 0,
	1996, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 343, 352,
	351, 332, 333, 335, 337, 342, 349, 355, 0, 0,
	0, 0, 0, 260, 315, 267, 259, 559, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 393, 252, 0, 444, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 324, 197, 222, 0, 0, 403, 452, 464, 0,
	0, 0, 250, 0, 462, 417, 579, 230, 279, 449,
	423, 460, 431, 282, 0, 0, 461, 364, 564, 441,
	576, 602, 603, 258, 397, 588, 502, 596, 620, 223,
	255, 411, 495, 582, 484, 389, 560, 561, 323, 483,
	290, 200, 361, 608, 221, 470, 363, 239, 228, 566,
	585, 284, 447, 615, 210, 497, 574, 236, 474, 0,
	0, 622, 244, 494, 212, 571, 493, 385, 320, 321,
	211, 0, 448, 263, 288, 0, 0, 253, 406, 568,
	569, 251, 623, 225, 595, 217, 0, 594, 399, 563,
	572, 386, 375, 216, 570, 384, 374, 328, 347, 348,
	275, 301, 438, 367, 439, 300, 302, 395, 394, 396,
	204, 583, 0, 205, 0, 489, 584, 624, 443, 209,
	231, 232, 234, 0, 274, 278, 286, 289, 297, 298,
	307, 359, 410, 437, 433, 442, 0, 558, 577, 589,
	600, 606, 607, 609, 610, 611, 612, 613, 616, 614,
	398, 305, 485, 327, 365, 0, 0, 416, 463, 237,
	581, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 376, 476, 578, 329, 341, 344,
	334, 353, 0, 354, 330, 331, 336, 338, 339, 340,
	345, 346, 350, 356, 246, 207, 382, 390, 557, 306,
	213, 214, 215, 504, 505, 506, 507, 592, 593, 597,
	453, 454, 455, 456, 287, 587, 303, 459, 458, 325,
	326, 371, 440, 520, 522, 533, 537, 539, 541, 547,
	550, 521, 523, 534, 538, 540, 542, 548, 551, 510,
	512, 514, 516, 529, 528, 525, 553, 554, 531, 536,
	515, 527, 532, 545, 552, 549, 509, 513, 517, 526,
	544, 543, 524, 535, 546, 530, 518, 511, 519, 0,
	196, 218, 360, 0, 445, 283, 621, 591, 586, 203,
	220, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 219, 229, 233,
	240, 256, 271, 273, 280, 293, 304, 312, 313, 316,
	322, 372, 378, 379, 380, 381, 400, 401, 402, 405,
	408, 409, 412, 414, 415, 418, 422, 426, 427, 428,
	430, 432, 434, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	565, 567, 580, 598, 604, 471, 295, 296, 435, 436,
	308, 309, 618, 619, 294, 575, 605, 573, 617, 599,
	429, 370, 0, 0, 373, 276, 299, 314, 0, 590,
	492, 224, 457, 285, 248, 0, 0, 208, 243, 227,
	254, 269, 272, 318, 383, 391, 420, 425, 291, 266,
	241, 450, 238, 475, 499, 500, 501, 503, 387, 261,
	424, 388, 0, 368, 555, 556, 310, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 1860, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 358, 262, 0, 0, 421, 0, 202,
	0, 477, 249, 369, 366, 562, 277, 268, 264, 247,
	311, 377, 419, 498, 413, 0, 362, 0, 0, 487,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 245, 319, 201,
	404, 488, 281, 0, 0, 0, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 343, 352, 351, 332, 333,
	335, 337, 342, 349, 355, 0, 0, 0, 0, 0,
	260, 315, 267, 259, 559, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	0, 393, 252, 0, 444, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 324, 197,
	222, 0, 0, 403, 452, 464, 0, 0, 0, 250,
	0, 462, 417, 579, 230, 279, 449, 423, 460, 431,
	282, 0, 0, 461, 364, 564, 441, 576, 602, 603,
	258, 397, 588, 502, 596, 620, 223, 255, 411, 495,
	582, 484, 389, 560, 561, 323, 483, 290, 200, 361,
	608, 221, 470, 363, 239, 228, 566, 585, 284, 447,
	615, 210, 497, 574, 236, 474, 0, 0, 622, 244,
	494, 212, 571, 493, 385, 320, 321, 211, 0, 448,
	263, 288, 0, 0, 253, 406, 568, 569, 251, 623,
	225, 595, 217, 0, 594, 399, 563, 572, 386, 375,
	216, 570, 384, 374, 328, 347, 348, 275, 301, 438,
	367, 439, 300, 302, 395, 394, 396, 204, 583, 0,
	205, 0, 489, 584, 624, 443, 209, 231, 232, 234,
	0, 274, 278, 286, 289, 297, 298, 307, 359, 410,
	437, 433, 442, 0, 558, 577, 589, 600, 606, 607,
	609, 610, 611, 612, 613, 616, 614, 398, 305, 485,
	327, 365, 0, 0, 416, 463, 237, 581, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 376, 476, 578, 329, 341, 344, 334, 353, 0,
	354, 330, 331, 336, 338, 339, 340, 345, 346, 350,
	356, 246, 207, 382, 390, 557, 306, 213, 214, 215,
	504, 505, 506, 507, 592, 593, 597, 453, 454, 455,
	456, 287, 587, 303, 459, 458, 325, 326, 371, 440,
	520, 522, 533, 537, 539, 541, 547, 550, 521, 523,
	534, 538, 540, 542, 548, 551, 510, 512, 514, 516,
	529, 528, 525, 553, 554, 531, 536, 515, 527, 532,
	545, 552, 549, 509, 513, 517, 526, 544, 543, 524,
	535, 546, 530, 518, 511, 519, 0, 196, 218, 360,
	0, 445, 283, 621, 591, 586, 203, 220, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 219, 229, 233, 240, 256, 271,
	273, 280, 293, 304, 312, 313, 316, 322, 372, 378,
	379, 380, 381, 400, 401, 402, 405, 408, 409, 412,
	414, 415, 418, 422, 426, 427, 428, 430, 432, 434,
	446, 451, 465, 466, 467, 468, 469, 472, 473, 478,
	479, 480, 481, 482, 490, 491, 496, 565, 567, 580,
	598, 604, 471, 295, 296, 435, 436, 308, 309, 618,
	619, 294, 575, 605, 573, 617, 599, 429, 370, 0,
	0, 373, 276, 299, 314, 0, 590, 492, 224, 457,
	285, 248, 0, 0, 208, 243, 227, 254, 269, 272,
	318, 383, 391, 420, 425, 291, 266, 241, 450, 238,
	475, 499, 500, 501, 503, 387, 261, 424, 388, 0,
	368, 555, 556, 310, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 1858, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	358, 262, 0, 0, 421, 0, 202, 0, 477, 249,
	369, 366, 562, 277, 268, 264, 247, 311, 377, 419,
	498, 413, 0, 362, 0, 0, 487, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 245, 319, 201, 404, 488, 281,
	0, 0, 0, 0, 0, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 343, 352, 351, 332, 333, 335, 337, 342,
	349, 355, 0, 0, 0, 0, 0, 260, 315, 267,
	259, 559, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 393, 252,
	0, 444, 0, 0, 0, 601, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 324, 197, 222, 0, 0,
	403, 452, 464, 0, 0, 0, 250, 0, 462, 417,
	579, 230, 279, 449, 423, 460, 431, 282, 0, 0,
	461, 364, 564, 441, 576, 602, 603, 258, 397, 588,
	502, 596, 620, 223, 255, 411, 495, 582, 484, 389,
	560, 561, 323, 483, 290, 200, 361, 608, 221, 470,
	363, 239, 228, 566, 585, 284, 447, 615, 210, 497,
	574, 236, 474, 0, 0, 622, 244, 494, 212, 571,
	493, 385, 320, 321, 211, 0, 448, 263, 288, 0,
	0, 253, 406, 568, 569, 251, 623, 225, 595, 217,
	0, 594, 399, 563, 572, 386, 375, 216, 570, 384,
	374, 328, 347, 348, 275, 301, 438, 367, 439, 300,
	302, 395, 394, 396, 204, 583, 0, 205, 0, 489,
	584, 624, 443, 209, 231, 232, 234, 0, 274, 278,
	286, 289, 297, 298, 307, 359, 410, 437, 433, 442,
	0, 558, 577, 589, 600, 606, 607, 609, 610, 611,
	612, 613, 616, 614, 398, 305, 485, 327, 365, 0,
	0, 416, 463, 237, 581, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 376, 476,
	578, 329, 341, 344, 334, 353, 0, 354, 330, 331,
	336, 338, 339, 340, 345, 346, 350, 356, 246, 207,
	382, 390, 557, 306, 213, 214, 215, 504, 505, 506,
	507, 592, 593, 597, 453, 454, 455, 456, 287, 587,
	303, 459, 458, 325, 326, 371, 440, 520, 522, 533,
	537, 539, 541, 547, 550, 521, 523, 534, 538, 540,
	542, 548, 551, 510, 512, 514, 516, 529, 528, 525,
	553, 554, 531, 536, 515, 527, 532, 545, 552, 549,
	509, 513, 517, 526, 544, 543, 524, 535, 546, 530,
	518, 511, 519, 0, 196, 218, 360, 0, 445, 283,
	621, 591, 586, 203, 220, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 219, 229, 233, 240, 256, 271, 273, 280, 293,
	304, 312, 313, 316, 322, 372, 378, 379, 380, 381,
	400, 401, 402, 405, 408, 409, 412, 414, 415, 418,
	422, 426, 427, 428, 430, 432, 434, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 565, 567, 580, 598, 604, 471,
	295, 296, 435, 436, 308, 309, 618, 619, 294, 575,
	605, 573, 617, 599, 429, 370, 0, 0, 373, 276,
	299, 314, 0, 590, 492, 224, 457, 285, 248, 0,
	0, 208, 243, 227, 254, 269, 272, 318, 383, 391,
	420, 425, 291, 266, 241, 450, 238, 475, 499, 500,
	501, 503, 387, 261, 424, 388, 0, 368, 555, 556,
	310, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 1856, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 358, 262, 0,
	0, 421, 0, 202, 0, 477, 249, 369, 366, 562,
	277, 268, 264, 247, 311, 377, 419, 498, 413, 0,
	362, 0, 0, 487, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 245, 319, 201, 404, 488, 281, 0, 0, 0,
	0, 0, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 343,
	352, 351, 332, 333, 335, 337, 342, 349, 355, 0,
	0, 0, 0, 0, 260, 315, 267, 259, 559, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 393, 252, 0, 444, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 324, 197, 222, 0, 0, 403, 452, 464,
	0, 0, 0, 250, 0, 462, 417, 579, 230, 279,
	449, 423, 460, 431, 282, 0, 0, 461, 364, 564,
	441, 576, 602, 603, 258, 397, 588, 502, 596, 620,
	223, 255, 411, 495, 582, 484, 389, 560, 561, 323,
	483, 290, 200, 361, 608, 221, 470, 363, 239, 228,
	566, 585, 284, 447, 615, 210, 497, 574, 236, 474,
	0, 0, 622, 244, 494, 212, 571, 493, 385, 320,
	321, 211, 0, 448, 263, 288, 0, 0, 253, 406,
	568, 569, 251, 623, 225, 595, 217, 0, 594, 399,
	563, 572, 386, 375, 216, 570, 384, 374, 328, 347,
	348, 275, 301, 438, 367, 439, 300, 302, 395, 394,
	396, 204, 583, 0, 205, 0, 489, 584, 624, 443,
	209, 231, 232, 234, 0, 274, 278, 286, 289, 297,
	298, 307, 359, 410, 437, 433, 442, 0, 558, 577,
	589, 600, 606, 607, 609, 610, 611, 612, 613, 616,
	614, 398, 305, 485, 327, 365, 0, 0, 416, 463,
	237, 581, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 376, 476, 578, 329, 341,
	344, 334, 353, 0, 354, 330, 331, 336, 338, 339,
	340, 345, 346, 350, 356, 246, 207, 382, 390, 557,
	306, 213, 214, 215, 504, 505, 506, 507, 592, 593,
	597, 453, 454, 455, 456, 287, 587, 303, 459, 458,
	325, 326, 371, 440, 520, 522, 533, 537, 539, 541,
	547, 550, 521, 523, 534, 538, 540, 542, 548, 551,
	510, 512, 514, 516, 529, 528, 525, 553, 554, 531,
	536, 515, 527, 532, 545, 552, 549, 509, 513, 517,
	526, 544, 543, 524, 535, 546, 530, 518, 511, 519,
	0, 196, 218, 360, 0, 445, 283, 621, 591, 586,
	203, 220, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 219, 229,
	233, 240, 256, 271, 273, 280, 293, 304, 312, 313,
	316, 322, 372, 378, 379, 380, 381, 400, 401, 402,
	405, 408, 409, 412, 414, 415, 418, 422, 426, 427,
	428, 430, 432, 434, 446, 451, 465, 466, 467, 468,
	469, 472, 473, 478, 479, 480, 481, 482, 490, 491,
	496, 565, 567, 580, 598, 604, 471, 295, 296, 435,
	436, 308, 309, 618, 619, 294, 575, 605, 573, 617,
	599, 429, 370, 0, 0, 373, 276, 299, 314, 0,
	590, 492, 224, 457, 285, 248, 0, 0, 208, 243,
	227, 254, 269, 272, 318, 383, 391, 420, 425, 291,
	266, 241, 450, 238, 475, 499, 500, 501, 503, 387,
	261, 424, 388, 0, 368, 555, 556, 310, 508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 1854, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 358, 262, 0, 0, 421, 0,
	202, 0, 477, 249, 369, 366, 562, 277, 268, 264,
	247, 311, 377, 419, 498, 413, 0, 362, 0, 0,
	487, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 245, 319,
	201, 404, 488, 281, 0, 0, 0, 0, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 343, 352, 351, 332,
	333, 335, 337, 342, 349, 355, 0, 0, 0, 0,
	0, 260, 315, 267, 259, 559, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 393, 252, 0, 444, 0, 0, 0, 601,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 324,
	197, 222, 0, 0, 403, 452, 464, 0, 0, 0,
	250, 0, 462, 417, 579, 230, 279, 449, 423, 460,
	431, 282, 0, 0, 461, 364, 564, 441, 576, 602,
	603, 258, 397, 588, 502, 596, 620, 223, 255, 411,
	495, 582, 484, 389, 560, 561, 323, 483, 290, 200,
	361, 608, 221, 470, 363, 239, 228, 566, 585, 284,
	447, 615, 210, 497, 574, 236, 474, 0, 0, 622,
	244, 494, 212, 571, 493, 385, 320, 321, 211, 0,
	448, 263, 288, 0, 0, 253, 406, 568, 569, 251,
	623, 225, 595, 217, 0, 594, 399, 563, 572, 386,
	375, 216, 570, 384, 374, 328, 347, 348, 275, 301,
	438, 367, 439, 300, 302, 395, 394, 396, 204, 583,
	0, 205, 0, 489, 584, 624, 443, 209, 231, 232,
	234, 0, 274, 278, 286, 289, 297, 298, 307, 359,
	410, 437, 433, 442, 0, 558, 577, 589, 600, 606,
	607, 609, 610, 611, 612, 613, 616, 614, 398, 305,
	485, 327, 365, 0, 0, 416, 463, 237, 581, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 376, 476, 578, 329, 341, 344, 334, 353,
	0, 354, 330, 331, 336, 338, 339, 340, 345, 346,
	350, 356, 246, 207, 382, 390, 557, 306, 213, 214,
	215, 504, 505, 506, 507, 592, 593, 597, 453, 454,
	455, 456, 287, 587, 303, 459, 458, 325, 326, 371,
	440, 520, 522, 533, 537, 539, 541, 547, 550, 521,
	523, 534, 538, 540, 542, 548, 551, 510, 512, 514,
	516, 529, 528, 525, 553, 554, 531, 536, 515, 527,
	532, 545, 552, 549, 509, 513, 517, 526, 544, 543,
	524, 535, 546, 530, 518, 511, 519, 0, 196, 218,
	360, 0, 445, 283, 621, 591, 586, 203, 220, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 219, 229, 233, 240, 256,
	271, 273, 280, 293, 304, 312, 313, 316, 322, 372,
	378, 379, 380, 381, 400, 401, 402, 405, 408, 409,
	412, 414, 415, 418, 422, 426, 427, 428, 430, 432,
	434, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 565, 567,
	580, 598, 604, 471, 295, 296, 435, 436, 308, 309,
	618, 619, 294, 575, 605, 573, 617, 599, 429, 370,
	0, 0, 373, 276, 299, 314, 0, 590, 492, 224,
	457, 285, 248, 0, 0, 208, 243, 227, 254, 269,
	272, 318, 383, 391, 420, 425, 291, 266, 241, 450,
	238, 475, 499, 500, 501, 503, 387, 261, 424, 388,
	0, 368, 555, 556, 310, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 1852,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 358, 262, 0, 0, 421, 0, 202, 0, 477,
	249, 369, 366, 562, 277, 268, 264, 247, 311, 377,
	419, 498, 413, 0, 362, 0, 0, 487, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 245, 319, 201, 404, 488,
	281, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 343, 352, 351, 332, 333, 335, 337,
	342, 349, 355, 0, 0, 0, 0, 0, 260, 315,
	267, 259, 559, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 393,
	252, 0, 444, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 324, 197, 222, 0,
	0, 403, 452, 464, 0, 0, 0, 250, 0, 462,
	417, 579, 230, 279, 449, 423, 460, 431, 282, 0,
	0, 461, 364, 564, 441, 576, 602, 603, 258, 397,
	588, 502, 596, 620, 223, 255, 411, 495, 582, 484,
	389, 560, 561, 323, 483, 290, 200, 361, 608, 221,
	470, 363, 239, 228, 566, 585, 284, 447, 615, 210,
	497, 574, 236, 474, 0, 0, 622, 244, 494, 212,
	571, 493, 385, 320, 321, 211, 0, 448, 263, 288,
	0, 0, 253, 406, 568, 569, 251, 623, 225, 595,
	217, 0, 594, 399, 563, 572, 386, 375, 216, 570,
	384, 374, 328, 347, 348, 275, 301, 438, 367, 439,
	300, 302, 395, 394, 396, 204, 583, 0, 205, 0,
	489, 584, 624, 443, 209, 231, 232, 234, 0, 274,
	278, 286, 289, 297, 298, 307, 359, 410, 437, 433,
	442, 0, 558, 577, 589, 600, 606, 607, 609, 610,
	611, 612, 613, 616, 614, 398, 305, 485, 327, 365,
	0, 0, 416, 463, 237, 581, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 376,
	476, 578, 329, 341, 344, 334, 353, 0, 354, 330,
	331, 336, 338, 339, 340, 345, 346, 350, 356, 246,
	207, 382, 390, 557, 306, 213, 214, 215, 504, 505,
	506, 507, 592, 593, 597, 453, 454, 455, 456, 287,
	587, 303, 459, 458, 325, 326, 371, 440, 520, 522,
	533, 537, 539, 541, 547, 550, 521, 523, 534, 538,
	540, 542, 548, 551, 510, 512, 514, 516, 529, 528,
	525, 553, 554, 531, 536, 515, 527, 532, 545, 552,
	549, 509, 513, 517, 526, 544, 543, 524, 535, 546,
	530, 518, 511, 519, 0, 196, 218, 360, 0, 445,
	283, 621, 591, 586, 203, 220, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 219, 229, 233, 240, 256, 271, 273, 280,
	293, 304, 312, 313, 316, 322, 372, 378, 379, 380,
	381, 400, 401, 402, 405, 408, 409, 412, 414, 415,
	418, 422, 426, 427, 428, 430, 432, 434, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 565, 567, 580, 598, 604,
	471, 295, 296, 435, 436, 308, 309, 618, 619, 294,
	575, 605, 573, 617, 599, 429, 370, 0, 0, 373,
	276, 299, 314, 0, 590, 492, 224, 457, 285, 248,
	0, 0, 208, 243, 227, 254, 269, 272, 318, 383,
	391, 420, 425, 291, 266, 241, 450, 238, 475, 499,
	500, 501, 503, 387, 261, 424, 388, 0, 368, 555,
	556, 310, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 1848, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 358, 262,
	0, 0, 421, 0, 202, 0, 477, 249, 369, 366,
	562, 277, 268, 264, 247, 311, 377, 419, 498, 413,
	0, 362, 0, 0, 487, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 245, 319, 201, 404, 488, 281, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	343, 352, 351, 332, 333, 335, 337, 342, 349, 355,
	0, 0, 0, 0, 0, 260, 315, 267, 259, 559,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 393, 252, 0, 444,
	0, 0, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 324, 197, 222, 0, 0, 403, 452,
	464, 0, 0, 0, 250, 0, 462, 417, 579, 230,
	279, 449, 423, 460, 431, 282, 0, 0, 461, 364,
	564, 441, 576, 602, 603, 258, 397, 588, 502, 596,
	620, 223, 255, 411, 495, 582, 484, 389, 560, 561,
	323, 483, 290, 200, 361, 608, 221, 470, 363, 239,
	228, 566, 585, 284, 447, 615, 210, 497, 574, 236,
	474, 0, 0, 622, 244, 494, 212, 571, 493, 385,
	320, 321, 211, 0, 448, 263, 288, 0, 0, 253,
	406, 568, 569, 251, 623, 225, 595, 217, 0, 594,
	399, 563, 572, 386, 375, 216, 570, 384, 374, 328,
	347, 348, 275, 301, 438, 367, 439, 300, 302, 395,
	394, 396, 204, 583, 0, 205, 0, 489, 584, 624,
	443, 209, 231, 232, 234, 0, 274, 278, 286, 289,
	297, 298, 307, 359, 410, 437, 433, 442, 0, 558,
	577, 589, 600, 606, 607, 609, 610, 611, 612, 613,
	616, 614, 398, 305, 485, 327, 365, 0, 0, 416,
	463, 237, 581, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 376, 476, 578, 329,
	341, 344, 334, 353, 0, 354, 330, 331, 336, 338,
	339, 340, 345, 346, 350, 356, 246, 207, 382, 390,
	557, 306, 213, 214, 215, 504, 505, 506, 507, 592,
	593, 597, 453, 454, 455, 456, 287, 587, 303, 459,
	458, 325, 326, 371, 440, 520, 522, 533, 537, 539,
	541, 547, 550, 521, 523, 534, 538, 540, 542, 548,
	551, 510, 512, 514, 516, 529, 528, 525, 553, 554,
	531, 536, 515, 527, 532, 545, 552, 549, 509, 513,
	517, 526, 544, 543, 524, 535, 546, 530, 518, 511,
	519, 0, 196, 218, 360, 0, 445, 283, 621, 591,
	586, 203, 220, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 219,
	229, 233, 240, 256, 271, 273, 280, 293, 304, 312,
	313, 316, 322, 372, 378, 379, 380, 381, 400, 401,
	402, 405, 408, 409, 412, 414, 415, 418, 422, 426,
	427, 428, 430, 432, 434, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 565, 567, 580, 598, 604, 471, 295, 296,
	435, 436, 308, 309, 618, 619, 294, 575, 605, 573,
	617, 599, 429, 370, 0, 0, 373, 276, 299, 314,
	0, 590, 492, 224, 457, 285, 248, 0, 0, 208,
	243, 227, 254, 269, 272, 318, 383, 391, 420, 425,
	291, 266, 241, 450, 238, 475, 499, 500, 501, 503,
	387, 261, 424, 388, 0, 368, 555, 556, 310, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 1846, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 358, 262, 0, 0, 421,
	0, 202, 0, 477, 249, 369, 366, 562, 277, 268,
	264, 247, 311, 377, 419, 498, 413, 0, 362, 0,
	0, 487, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 245,
	319, 201, 404, 488, 281, 0, 0, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 343, 352, 351,
	332, 333, 335, 337, 342, 349, 355, 0, 0, 0,
	0, 0, 260, 315, 267, 259, 559, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 393, 252, 0, 444, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	324, 197, 222, 0, 0, 403, 452, 464, 0, 0,
	0, 250, 0, 462, 417, 579, 230, 279, 449, 423,
	460, 431, 282, 0, 0, 461, 364, 564, 441, 576,
	602, 603, 258, 397, 588, 502, 596, 620, 223, 255,
	411, 495, 582, 484, 389, 560, 561, 323, 483, 290,
	200, 361, 608, 221, 470, 363, 239, 228, 566, 585,
	284, 447, 615, 210, 497, 574, 236, 474, 0, 0,
	622, 244, 494, 212, 571, 493, 385, 320, 321, 211,
	0, 448, 263, 288, 0, 0, 253, 406, 568, 569,
	251, 623, 225, 595, 217, 0, 594, 399, 563, 572,
	386, 375, 216, 570, 384, 374, 328, 347, 348, 275,
	301, 438, 367, 439, 300, 302, 395, 394, 396, 204,
	583, 0, 205, 0, 489, 584, 624, 443, 209, 231,
	232, 234, 0, 274, 278, 286, 289, 297, 298, 307,
	359, 410, 437, 433, 442, 0, 558, 577, 589, 600,
	606, 607, 609, 610, 611, 612, 613, 616, 614, 398,
	305, 485, 327, 365, 0, 0, 416, 463, 237, 581,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 376, 476, 578, 329, 341, 344, 334,
	353, 0, 354, 330, 331, 336, 338, 339, 340, 345,
	346, 350, 356, 246, 207, 382, 390, 557, 306, 213,
	214, 215, 504, 505, 506, 507, 592, 593, 597, 453,
	454, 455, 456, 287, 587, 303, 459, 458, 325, 326,
	371, 440, 520, 522, 533, 537, 539, 541, 547, 550,
	521, 523, 534, 538, 540, 542, 548, 551, 510, 512,
	514, 516, 529, 528, 525, 553, 554, 531, 536, 515,
	527, 532, 545, 552, 549, 509, 513, 517, 526, 544,
	543, 524, 535, 546, 530, 518, 511, 519, 0, 196,
	218, 360, 0, 445, 283, 621, 591, 586, 203, 220,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 219, 229, 233, 240,
	256, 271, 273, 280, 293, 304, 312, 313, 316, 322,
	372, 378, 379, 380, 381, 400, 401, 402, 405, 408,
	409, 412, 414, 415, 418, 422, 426, 427, 428, 430,
	432, 434, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 565,
	567, 580, 598, 604, 471, 295, 296, 435, 436, 308,
	309, 618, 619, 294, 575, 605, 573, 617, 599, 429,
	370, 0, 0, 373, 276, 299, 314, 0, 590, 492,
	224, 457, 285, 248, 0, 0, 208, 243, 227, 254,
	269, 272, 318, 383, 391, 420, 425, 291, 266, 241,
	450, 238, 475, 499, 500, 501, 503, 387, 261, 424,
	388, 0, 368, 555, 556, 310, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	1844, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 358, 262, 0, 0, 421, 0, 202, 0,
	477, 249, 369, 366, 562, 277, 268, 264, 247, 311,
	377, 419, 498, 413, 0, 362, 0, 0, 487, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 245, 319, 201, 404,
	488, 281, 0, 0, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 343, 352, 351, 332, 333, 335,
	337, 342, 349, 355, 0, 0, 0, 0, 0, 260,
	315, 267, 259, 559, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	393, 252, 0, 444, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 324, 197, 222,
	0, 0, 403, 452, 464, 0, 0, 0, 250, 0,
	462, 417, 579, 230, 279, 449, 423, 460, 431, 282,
	0, 0, 461, 364, 564, 441, 576, 602, 603, 258,
	397, 588, 502, 596, 620, 223, 255, 411, 495, 582,
	484, 389, 560, 561, 323, 483, 290, 200, 361, 608,
	221, 470, 363, 239, 228, 566, 585, 284, 447, 615,
	210, 497, 574, 236, 474, 0, 0, 622, 244, 494,
	212, 571, 493, 385, 320, 321, 211, 0, 448, 263,
	288, 0, 0, 253, 406, 568, 569, 251, 623, 225,
	595, 217, 0, 594, 399, 563, 572, 386, 375, 216,
	570, 384, 374, 328, 347, 348, 275, 301, 438, 367,
	439, 300, 302, 395, 394, 396, 204, 583, 0, 205,
	0, 489, 584, 624, 443, 209, 231, 232, 234, 0,
	274, 278, 286, 289, 297, 298, 307, 359, 410, 437,
	433, 442, 0, 558, 577, 589, 600, 606, 607, 609,
	610, 611, 612, 613, 616, 614, 398, 305, 485, 327,
	365, 0, 0, 416, 463, 237, 581, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	376, 476, 578, 329, 341, 344, 334, 353, 0, 354,
	330, 331, 336, 338, 339, 340, 345, 346, 350, 356,
	246, 207, 382, 390, 557, 306, 213, 214, 215, 504,
	505, 506, 507, 592, 593, 597, 453, 454, 455, 456,
	287, 587, 303, 459, 458, 325, 326, 371, 440, 520,
	522, 533, 537, 539, 541, 547, 550, 521, 523, 534,
	538, 540, 542, 548, 551, 510, 512, 514, 516, 529,
	528, 525, 553, 554, 531, 536, 515, 527, 532, 545,
	552, 549, 509, 513, 517, 526, 544, 543, 524, 535,
	546, 530, 518, 511, 519, 0, 196, 218, 360, 0,
	445, 283, 621, 591, 586, 203, 220, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 219, 229, 233, 240, 256, 271, 273,
	280, 293, 304, 312, 313, 316, 322, 372, 378, 379,
	380, 381, 400, 401, 402, 405, 408, 409, 412, 414,
	415, 418, 422, 426, 427, 428, 430, 432, 434, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 565, 567, 580, 598,
	604, 471, 295, 296, 435, 436, 308, 309, 618, 619,
	294, 575, 605, 573, 617, 599, 429, 370, 0, 0,
	373, 276, 299, 314, 0, 590, 492, 224, 457, 285,
	248, 0, 0, 208, 243, 227, 254, 269, 272, 318,
	383, 391, 420, 425, 291, 266, 241, 450, 238, 475,
	499, 500, 501, 503, 387, 261, 424, 388, 0, 368,
	555, 556, 310, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 358,
	262, 0, 0, 421, 0, 202, 0, 477, 249, 369,
	366, 562, 277, 268, 264, 247, 311, 377, 419, 498,
	413, 0, 362, 0, 0, 487, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 245, 319, 201, 404, 488, 281, 0,
	1819, 0, 0, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 343, 352, 351, 332, 333, 335, 337, 342, 349,
	355, 0, 0, 0, 0, 0, 260, 315, 267, 259,
	559, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 393, 252, 0,
	444, 0, 0, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 324, 197, 222, 0, 0, 403,
	452, 464, 0, 0, 0, 250, 0, 462, 417, 579,
	230, 279, 449, 423, 460, 431, 282, 0, 0, 461,
	364, 564, 441, 576, 602, 603, 258, 397, 588, 502,
	596, 620, 223, 255, 411, 495, 582, 484, 389, 560,
	561, 323, 483, 290, 200, 361, 608, 221, 470, 363,
	239, 228, 566, 585, 284, 447, 615, 210, 497, 574,
	236, 474, 0, 0, 622, 244, 494, 212, 571, 493,
	385, 320, 321, 211, 0, 448, 263, 288, 0, 0,
	253, 406, 568, 569, 251, 623, 225, 595, 217, 0,
	594, 399, 563, 572, 386, 375, 216, 570, 384, 374,
	328, 347, 348, 275, 301, 438, 367, 439, 300, 302,
	395, 394, 396, 204, 583, 0, 205, 0, 489, 584,
	624, 443, 209, 231, 232, 234, 0, 274, 278, 286,
	289, 297, 298, 307, 359, 410, 437, 433, 442, 0,
	558, 577, 589, 600, 606, 607, 609, 610, 611, 612,
	613, 616, 614, 398, 305, 485, 327, 365, 0, 0,
	416, 463, 237, 581, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 376, 476, 578,
	329, 341, 344, 334, 353, 0, 354, 330, 331, 336,
	338, 339, 340, 345, 346, 350, 356, 246, 207, 382,
	390, 557, 306, 213, 214, 215, 504, 505, 506, 507,
	592, 593, 597, 453, 454, 455, 456, 287, 587, 303,
	459, 458, 325, 326, 371, 440, 520, 522, 533, 537,
	539, 541, 547, 550, 521, 523, 534, 538, 540, 542,
	548, 551, 510, 512, 514, 516, 529, 528, 525, 553,
	554, 531, 536, 515, 527, 532, 545, 552, 549, 509,
	513, 517, 526, 544, 543, 524, 535, 546, 530, 518,
	511, 519, 0, 196, 218, 360, 0, 445, 283, 621,
	591, 586, 203, 220, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	219, 229, 233, 240, 256, 271, 273, 280, 293, 304,
	312, 313, 316, 322, 372, 378, 379, 380, 381, 400,
	401, 402, 405, 408, 409, 412, 414, 415, 418, 422,
	426, 427, 428, 430, 432, 434, 446, 451, 465, 466,
	467, 468, 469, 472, 473, 478, 479, 480, 481, 482,
	490, 491, 496, 565, 567, 580, 598, 604, 471, 295,
	296, 435, 436, 308, 309, 618, 619, 294, 575, 605,
	573, 617, 599, 429, 370, 0, 0, 373, 276, 299,
	314, 0, 590, 492, 224, 457, 285, 248, 0, 0,
	208, 243, 227, 254, 269, 272, 318, 383, 391, 420,
	425, 291, 266, 241, 450, 238, 475, 499, 500, 501,
	503, 387, 261, 424, 388, 0, 368, 555, 556, 310,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 0,
	1718, 265, 0, 0, 0, 0, 358, 262, 0, 0,
	421, 0, 202, 0, 477, 249, 369, 366, 562, 277,
	268, 264, 247, 311, 377, 419, 498, 413, 0, 362,
	0, 0, 487, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	245, 319, 201, 404, 488, 281, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 343, 352,
	351, 332, 333, 335, 337, 342, 349, 355, 0, 0,
	0, 0, 0, 260, 315, 267, 259, 559, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 393, 252, 0, 444, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 324, 197, 222, 0, 0, 403, 452, 464, 0,
	0, 0, 250, 0, 462, 417, 579, 230, 279, 449,
	423, 460, 431, 282, 0, 0, 461, 364, 564, 441,
	576, 602, 603, 258, 397, 588, 502, 596, 620, 223,
	255, 411, 495, 582, 484, 389, 560, 561, 323, 483,
	290, 200, 361, 608, 221, 470, 363, 239, 228, 566,
	585, 284, 447, 615, 210, 497, 574, 236, 474, 0,
	0, 622, 244, 494, 212, 571, 493, 385, 320, 321,
	211, 0, 448, 263, 288, 0, 0, 253, 406, 568,
	569, 251, 623, 225, 595, 217, 0, 594, 399, 563,
	572, 386, 375, 216, 570, 384, 374, 328, 347, 348,
	275, 301, 438, 367, 439, 300, 302, 395, 394, 396,
	204, 583, 0, 205, 0, 489, 584, 624, 443, 209,
	231, 232, 234, 0, 274, 278, 286, 289, 297, 298,
	307, 359, 410, 437, 433, 442, 0, 558, 577, 589,
	600, 606, 607, 609, 610, 611, 612, 613, 616, 614,
	398, 305, 485, 327, 365, 0, 0, 416, 463, 237,
	581, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 376, 476, 578, 329, 341, 344,
	334, 353, 0, 354, 330, 331, 336, 338, 339, 340,
	345, 346, 350, 356, 246, 207, 382, 390, 557, 306,
	213, 214, 215, 504, 505, 506, 507, 592, 593, 597,
	453, 454, 455, 456, 287, 587, 303, 459, 458, 325,
	326, 371, 440, 520, 522, 533, 537, 539, 541, 547,
	550, 521, 523, 534, 538, 540, 542, 548, 551, 510,
	512, 514, 516, 529, 528, 525, 553, 554, 531, 536,
	515, 527, 532, 545, 552, 549, 509, 513, 517, 526,
	544, 543, 524, 535, 546, 530, 518, 511, 519, 0,
	196, 218, 360, 0, 445, 283, 621, 591, 586, 203,
	220, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 219, 229, 233,
	240, 256, 271, 273, 280, 293, 304, 312, 313, 316,
	322, 372, 378, 379, 380, 381, 400, 401, 402, 405,
	408, 409, 412, 414, 415, 418, 422, 426, 427, 428,
	430, 432, 434, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	565, 567, 580, 598, 604, 471, 295, 296, 435, 436,
	308, 309, 618, 619, 294, 575, 605, 573, 617, 599,
	429, 370, 0, 0, 373, 276, 299, 314, 0, 590,
	492, 224, 457, 285, 248, 0, 0, 208, 243, 227,
	254, 269, 272, 318, 383, 391, 420, 425, 291, 266,
	241, 450, 238, 475, 499, 500, 501, 503, 387, 261,
	424, 388, 0, 368, 555, 556, 310, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 358, 262, 0, 0, 421, 0, 202,
	0, 477, 249, 369, 366, 562, 277, 268, 264, 247,
	311, 377, 419, 498, 413, 0, 362, 0, 0, 487,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 245, 319, 201,
	404, 488, 281, 0, 94, 0, 0, 0, 921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 343, 352, 351, 332, 333,
	335, 337, 342, 349, 355, 0, 0, 0, 0, 0,
	260, 315, 267, 259, 559, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	0, 393, 252, 0, 444, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 324, 197,
	222, 0, 0, 403, 452, 464, 0, 0, 0, 250,
	0, 462, 417, 579, 230, 279, 449, 423, 460, 431,
	282, 0, 0, 461, 364, 564, 441, 576, 602, 603,
	258, 397, 588, 502, 596, 620, 223, 255, 411, 495,
	582, 484, 389, 560, 561, 323, 483, 290, 200, 361,
	608, 221, 470, 363, 239, 228, 566, 585, 284, 447,
	615, 210, 497, 574, 236, 474, 0, 0, 622, 244,
	494, 212, 571, 493, 385, 320, 321, 211, 0, 448,
	263, 288, 0, 0, 253, 406, 568, 569, 251, 623,
	225, 595, 217, 0, 594, 399, 563, 572, 386, 375,
	216, 570, 384, 374, 328, 347, 348, 275, 301, 438,
	367, 439, 300, 302, 395, 394, 396, 204, 583, 0,
	205, 0, 489, 584, 624, 443, 209, 231, 232, 234,
	0, 274, 278, 286, 289, 297, 298, 307, 359, 410,
	437, 433, 442, 0, 558, 577, 589, 600, 606, 607,
	609, 610, 611, 612, 613, 616, 614, 398, 305, 485,
	327, 365, 0, 0, 416, 463, 237, 581, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 376, 476, 578, 329, 341, 344, 334, 353, 0,
	354, 330, 331, 336, 338, 339, 340, 345, 346, 350,
	356, 246, 207, 382, 390, 557, 306, 213, 214, 215,
	504, 505, 506, 507, 592, 593, 597, 453, 454, 455,
	456, 287, 587, 303, 459, 458, 325, 326, 371, 440,
	520, 522, 533, 537, 539, 541, 547, 550, 521, 523,
	534, 538, 540, 542, 548, 551, 510, 512, 514, 516,
	529, 528, 525, 553, 554, 531, 536, 515, 527, 532,
	545, 552, 549, 509, 513, 517, 526, 544, 543, 524,
	535, 546, 530, 518, 511, 519, 0, 196, 218, 360,
	0, 445, 283, 621, 591, 586, 203, 220, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 219, 229, 233, 240, 256, 271,
	273, 280, 293, 304, 312, 313, 316, 322, 372, 378,
	379, 380, 381, 400, 401, 402, 405, 408, 409, 412,
	414, 415, 418, 422, 426, 427, 428, 430, 432, 434,
	446, 451, 465, 466, 467, 468, 469, 472, 473, 478,
	479, 480, 481, 482, 490, 491, 496, 565, 567, 580,
	598, 604, 471, 295, 296, 435, 436, 308, 309, 618,
	619, 294, 575, 605, 573, 617, 599, 429, 370, 0,
	0, 373, 276, 299, 314, 0, 590, 492, 224, 457,
	285, 248, 0, 0, 208, 243, 227, 254, 269, 272,
	318, 383, 391, 420, 425, 291, 266, 241, 450, 238,
	475, 499, 500, 501, 503, 387, 261, 424, 388, 0,
	368, 555, 556, 310, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	358, 262, 0, 0, 421, 0, 202, 0, 477, 249,
	369, 366, 562, 277, 268, 264, 247, 311, 377, 419,
	498, 413, 0, 362, 0, 0, 487, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 245, 319, 201, 404, 488, 281,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 343, 352, 351, 332, 333, 335, 337, 342,
	349, 355, 0, 0, 0, 0, 0, 260, 315, 267,
	259, 559, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 292, 0, 393, 252,
	0, 444, 0, 0, 0, 601, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 324, 197, 222, 0, 0,
	403, 452, 464, 0, 0, 0, 250, 0, 462, 417,
	579, 230, 279, 449, 423, 460, 431, 282, 0, 0,
	461, 364, 564, 441, 576, 602, 603, 258, 397, 588,
	502, 596, 620, 223, 255, 411, 495, 582, 484, 389,
	560, 561, 323, 483, 290, 200, 361, 608, 221, 470,
	363, 239, 228, 566, 585, 284, 447, 615, 210, 497,
	574, 236, 474, 0, 0, 622, 244, 494, 212, 571,
	493, 385, 320, 321, 211, 0, 448, 263, 288, 0,
	0, 253, 406, 568, 569, 251, 623, 225, 595, 217,
	0, 594, 399, 563, 572, 386, 375, 216, 570, 384,
	374, 328, 347, 348, 275, 301, 438, 367, 439, 300,
	302, 395, 394, 396, 204, 583, 0, 205, 0, 489,
	584, 624, 443, 209, 231, 232, 234, 0, 274, 278,
	286, 289, 297, 298, 307, 359, 410, 437, 433, 442,
	0, 558, 577, 589, 600, 606, 607, 609, 610, 611,
	612, 613, 616, 614, 398, 305, 485, 327, 365, 0,
	0, 416, 463, 237, 581, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 376, 476,
	578, 329, 341, 344, 334, 353, 0, 354, 330, 331,
	336, 338, 339, 340, 345, 346, 350, 356, 246, 207,
	382, 390, 557, 306, 213, 214, 215, 504, 505, 506,
	507, 592, 593, 597, 453, 454, 455, 456, 287, 587,
	303, 459, 458, 325, 326, 371, 440, 520, 522, 533,
	537, 539, 541, 547, 550, 521, 523, 534, 538, 540,
	542, 548, 551, 510, 512, 514, 516, 529, 528, 525,
	553, 554, 531, 536, 515, 527, 532, 545, 552, 549,
	509, 513, 517, 526, 544, 543, 524, 535, 546, 530,
	518, 511, 519, 0, 196, 218, 360, 0, 445, 283,
	621, 591, 586, 203, 220, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 219, 229, 233, 240, 256, 271, 273, 280, 293,
	304, 312, 313, 316, 322, 372, 378, 379, 380, 381,
	400, 401, 402, 405, 408, 409, 412, 414, 415, 418,
	422, 426, 427, 428, 430, 432, 434, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 565, 567, 580, 598, 604, 471,
	295, 296, 435, 436, 308, 309, 618, 619, 1409, 575,
	605, 573, 617, 599, 429, 370, 0, 0, 373, 276,
	299, 314, 0, 590, 492, 224, 457, 285, 248, 0,
	0, 208, 243, 227, 254, 269, 272, 318, 383, 391,
	420, 425, 291, 266, 241, 450, 238, 475, 499, 500,
	501, 503, 387, 261, 424, 388, 0, 368, 555, 556,
	310, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 358, 262, 0,
	0, 421, 0, 202, 0, 477, 249, 369, 366, 562,
	277, 268, 264, 247, 311, 377, 419, 498, 413, 0,
	362, 0, 0, 487, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 245, 319, 201, 404, 488, 281, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 343,
	352, 351, 332, 333, 335, 337, 342, 349, 355, 0,
	0, 0, 0, 0, 260, 315, 267, 259, 559, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 393, 252, 0, 444, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 324, 197, 222, 0, 0, 403, 452, 464,
	0, 0, 0, 250, 0, 462, 417, 579, 230, 279,
	449, 423, 460, 431, 282, 0, 0, 461, 364, 564,
	441, 576, 602, 603, 258, 397, 588, 502, 596, 620,
	223, 255, 411, 495, 582, 484, 389, 560, 561, 323,
	483, 290, 200, 361, 608, 221, 470, 363, 239, 228,
	566, 585, 284, 447, 615, 210, 497, 574, 236, 474,
	0, 0, 622, 244, 494, 212, 571, 493, 385, 320,
	321, 211, 0, 448, 263, 288, 0, 0, 253, 406,
	568, 569, 251, 623, 225, 595, 217, 0, 594, 399,
	563, 572, 386, 375, 216, 570, 384, 374, 328, 347,
	348, 275, 301, 438, 367, 439, 300, 302, 395, 394,
	396, 204, 583, 0, 205, 0, 489, 584, 624, 443,
	209, 231, 232, 234, 0, 274, 278, 286, 289, 297,
	298, 307, 359, 410, 437, 433, 442, 0, 558, 577,
	589, 600, 606, 607, 609, 610, 611, 612, 613, 616,
	614, 398, 305, 485, 327, 365, 0, 0, 416, 463,
	237, 581, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 376, 476, 578, 329, 341,
	344, 334, 353, 0, 354, 330, 331, 336, 338, 339,
	340, 345, 346, 350, 356, 246, 207, 382, 390, 557,
	306, 213, 214, 215, 504, 505, 506, 507, 592, 593,
	597, 453, 454, 455, 456, 287, 587, 303, 459, 458,
	325, 326, 371, 440, 520, 522, 533, 537, 539, 541,
	547, 550, 521, 523, 534, 538, 540, 542, 548, 551,
	510, 512, 514, 516, 529, 528, 525, 553, 554, 531,
	536, 515, 527, 532, 545, 552, 549, 509, 513, 517,
	526, 544, 543, 524, 535, 546, 530, 518, 511, 519,
	0, 196, 218, 360, 0, 445, 283, 621, 591, 586,
	203, 220, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1007, 0, 0, 0, 198, 199, 206, 219, 229,
	233, 240, 256, 271, 273, 280, 293, 304, 312, 313,
	316, 322, 372, 378, 379, 380, 381, 400, 401, 402,
	405, 408, 409, 412, 414, 415, 418, 422, 426, 427,
	428, 430, 432, 434, 446, 451, 465, 466, 467, 468,
	469, 472, 473, 478, 479, 480, 481, 482, 490, 491,
	496, 565, 567, 580, 598, 604, 471, 295, 296, 435,
	436, 308, 309, 618, 619, 294, 575, 605, 573, 617,
	599, 429, 370, 0, 0, 373, 276, 299, 314, 0,
	590, 492, 224, 457, 285, 248, 0, 0, 208, 243,
	227, 254, 269, 272, 318, 383, 391, 420, 425, 291,
	266, 241, 450, 238, 475, 499, 500, 501, 503, 387,
	261, 424, 388, 0, 368, 555, 556, 310, 508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 358, 262, 0, 0, 421, 0,
	202, 0, 477, 249, 369, 366, 562, 277, 268, 264,
	247, 311, 377, 419, 498, 413, 0, 362, 0, 0,
	487, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 245, 319,
	201, 404, 488, 281, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 343, 352, 351, 332,
	333, 335, 337, 342, 349, 355, 0, 0, 0, 0,
	0, 260, 315, 267, 259, 559, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 393, 252, 0, 444, 0, 646, 0, 601,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 324,
	197, 222, 0, 0, 403, 452, 464, 0, 0, 0,
	250, 0, 462, 417, 579, 230, 279, 449, 423, 460,
	431, 282, 0, 0, 461, 364, 564, 441, 576, 602,
	603, 258, 397, 588, 502, 596, 620, 223, 255, 411,
	495, 582, 484, 389, 560, 561, 323, 483, 290, 200,
	361, 608, 221, 470, 363, 239, 228, 566, 585, 284,
	447, 615, 210, 497, 574, 236, 474, 0, 0, 622,
	244, 494, 212, 571, 493, 385, 320, 321, 211, 0,
	448, 263, 288, 0, 0, 253, 406, 568, 569, 251,
	623, 225, 595, 217, 0, 594, 399, 563, 572, 386,
	375, 216, 570, 384, 374, 328, 347, 348, 275, 301,
	438, 367, 439, 300, 302, 395, 394, 396, 204, 583,
	0, 205, 0, 489, 584, 624, 443, 209, 231, 232,
	234, 0, 274, 278, 286, 289, 297, 298, 307, 359,
	410, 437, 433, 442, 0, 558, 577, 589, 600, 606,
	607, 609, 610, 611, 612, 613, 616, 614, 398, 305,
	485, 327, 365, 0, 0, 416, 463, 237, 581, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 376, 476, 578, 329, 341, 344, 334, 353,
	0, 354, 330, 331, 336, 338, 339, 340, 345, 346,
	350, 356, 246, 207, 382, 390, 557, 306, 213, 214,
	215, 504, 505, 506, 507, 592, 593, 597, 453, 454,
	455, 456, 287, 587, 303, 459, 458, 325, 326, 371,
	440, 520, 522, 533, 537, 539, 541, 547, 550, 521,
	523, 534, 538, 540, 542, 548, 551, 510, 512, 514,
	516, 529, 528, 525, 553, 554, 531, 536, 515, 527,
	532, 545, 552, 549, 509, 513, 517, 526, 544, 543,
	524, 535, 546, 530, 518, 511, 519, 0, 196, 218,
	360, 0, 445, 283, 621, 591, 586, 203, 220, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 219, 229, 233, 240, 256,
	271, 273, 280, 293, 304, 312, 313, 316, 322, 372,
	378, 379, 380, 381, 400, 401, 402, 405, 408, 409,
	412, 414, 415, 418, 422, 426, 427, 428, 430, 432,
	434, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 565, 567,
	580, 598, 604, 471, 295, 296, 435, 436, 308, 309,
	618, 619, 294, 575, 605, 573, 617, 599, 429, 370,
	0, 0, 373, 276, 299, 314, 0, 590, 492, 224,
	457, 285, 248, 0, 0, 208, 243, 227, 254, 269,
	272, 318, 383, 391, 420, 425, 291, 266, 241, 450,
	238, 475, 499, 500, 501, 503, 387, 261, 424, 388,
	0, 368, 555, 556, 310, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 358, 262, 0, 0, 421, 0, 202, 0, 477,
	249, 369, 366, 562, 277, 268, 264, 247, 311, 377,
	419, 498, 413, 0, 362, 0, 0, 487, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 245, 319, 201, 404, 488,
	281, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 343, 352, 351, 332, 333, 335, 337,
	342, 349, 355, 0, 0, 0, 0, 0, 260, 315,
	267, 259, 559, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 393,
	252, 0, 444, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 324, 197, 222, 0,
	0, 403, 452, 464, 0, 0, 0, 250, 0, 462,
	417, 579, 230, 279, 449, 423, 460, 431, 282, 0,
	0, 461, 364, 564, 441, 576, 602, 603, 258, 397,
	588, 502, 596, 620, 223, 255, 411, 495, 582, 484,
	389, 560, 561, 323, 483, 290, 200, 361, 608, 221,
	470, 363, 239, 228, 566, 585, 284, 447, 615, 210,
	497, 574, 236, 474, 0, 0, 622, 244, 494, 212,
	571, 493, 385, 320, 321, 211, 0, 448, 263, 288,
	0, 0, 253, 406, 568, 569, 251, 623, 225, 595,
	217, 0, 594, 399, 563, 572, 386, 375, 216, 570,
	384, 374, 328, 347, 348, 275, 301, 438, 367, 439,
	300, 302, 395, 394, 396, 204, 583, 0, 205, 0,
	489, 584, 624, 443, 209, 231, 232, 234, 0, 274,
	278, 286, 289, 297, 298, 307, 359, 410, 437, 433,
	442, 0, 558, 577, 589, 600, 606, 607, 609, 610,
	611, 612, 613, 616, 614, 398, 305, 485, 327, 365,
	0, 0, 416, 463, 237, 581, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 376,
	476, 578, 329, 341, 344, 334, 353, 0, 354, 330,
	331, 336, 338, 339, 340, 345, 346, 350, 356, 246,
	207, 382, 390, 557, 306, 213, 214, 215, 504, 505,
	506, 507, 592, 593, 597, 453, 454, 455, 456, 287,
	587, 303, 459, 458, 325, 326, 371, 440, 520, 522,
	533, 537, 539, 541, 547, 550, 521, 523, 534, 538,
	540, 542, 548, 551, 510, 512, 514, 516, 529, 528,
	525, 553, 554, 531, 536, 515, 527, 532, 545, 552,
	549, 509, 513, 517, 526, 544, 543, 524, 535, 546,
	530, 518, 511, 519, 0, 196, 218, 360, 0, 445,
	283, 621, 591, 586, 203, 220, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 219, 229, 233, 240, 256, 271, 273, 280,
	293, 304, 312, 313, 316, 322, 372, 378, 379, 380,
	381, 3937, 401, 402, 405, 408, 409, 412, 414, 415,
	418, 422, 426, 427, 428, 430, 432, 434, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 565, 567, 580, 598, 604,
	471, 295, 296, 435, 436, 308, 309, 618, 619, 294,
	575, 605, 573, 617, 599, 429, 370, 0, 0, 373,
	276, 299, 314, 0, 590, 492, 224, 457, 285, 248,
	0, 0, 208, 243, 227, 254, 269, 272, 318, 383,
	391, 420, 425, 291, 266, 241, 450, 238, 475, 499,
	500, 501, 503, 387, 261, 424, 388, 0, 368, 555,
	556, 310, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 358, 262,
	0, 0, 421, 0, 202, 0, 477, 249, 369, 366,
	562, 277, 268, 264, 247, 311, 377, 419, 498, 413,
	0, 362, 0, 0, 487, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 245, 319, 201, 404, 488, 281, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	343, 352, 351, 332, 333, 335, 337, 342, 349, 355,
	0, 0, 0, 0, 0, 260, 315, 267, 259, 559,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 393, 252, 0, 444,
	0, 0, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 324, 197, 222, 0, 0, 403, 452,
	464, 0, 0, 0, 250, 0, 462, 417, 579, 230,
	279, 449, 423, 460, 431, 282, 0, 0, 461, 364,
	564, 441, 576, 602, 603, 258, 397, 588, 502, 596,
	620, 223, 255, 411, 495, 582, 484, 389, 560, 561,
	323, 483, 290, 200, 361, 608, 221, 470, 363, 239,
	228, 566, 585, 284, 447, 615, 210, 497, 574, 236,
	474, 0, 0, 622, 244, 494, 212, 571, 493, 385,
	320, 321, 211, 0, 448, 263, 288, 0, 0, 253,
	406, 568, 569, 251, 623, 225, 595, 217, 0, 594,
	399, 563, 572, 386, 375, 216, 570, 384, 374, 328,
	347, 348, 275, 301, 438, 367, 439, 300, 302, 395,
	394, 396, 204, 583, 0, 205, 0, 489, 584, 624,
	443, 209, 231, 232, 234, 0, 274, 278, 286, 289,
	297, 298, 307, 359, 410, 437, 433, 442, 0, 558,
	577, 589, 600, 606, 607, 609, 610, 611, 612, 613,
	616, 614, 398, 305, 485, 327, 365, 0, 0, 416,
	463, 237, 581, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 376, 476, 578, 329,
	341, 344, 334, 353, 0, 354, 330, 331, 336, 338,
	339, 340, 345, 346, 350, 356, 246, 207, 382, 390,
	557, 306, 213, 214, 215, 504, 505, 506, 507, 592,
	593, 597, 453, 454, 455, 456, 287, 587, 303, 459,
	458, 325, 326, 371, 440, 520, 522, 533, 537, 539,
	541, 547, 550, 521, 523, 534, 538, 540, 542, 548,
	551, 510, 512, 514, 516, 529, 528, 525, 553, 554,
	531, 536, 515, 527, 532, 545, 552, 549, 509, 513,
	517, 526, 544, 543, 524, 535, 546, 530, 518, 511,
	519, 0, 196, 218, 360, 0, 445, 283, 621, 591,
	586, 203, 220, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 219,
	229, 233, 240, 256, 271, 273, 280, 293, 304, 312,
	313, 316, 322, 372, 378, 379, 380, 381, 400, 401,
	402, 405, 408, 409, 412, 414, 415, 418, 422, 426,
	427, 428, 430, 432, 434, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 565, 567, 580, 598, 604, 471, 295, 296,
	435, 436, 308, 309, 618, 619, 294, 575, 605, 573,
	617, 599, 429, 370, 0, 0, 373, 276, 299, 314,
	0, 590, 492, 224, 457, 285, 248, 0, 0, 208,
	243, 227, 254, 269, 272, 318, 383, 391, 420, 425,
	291, 266, 241, 450, 238, 475, 499, 500, 501, 503,
	387, 261, 424, 388, 0, 368, 555, 556, 310, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 358, 262, 0, 0, 421,
	0, 202, 0, 477, 249, 369, 366, 562, 277, 268,
	264, 247, 311, 377, 419, 498, 413, 0, 362, 0,
	0, 487, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 245,
	319, 201, 404, 488, 281, 0, 0, 0, 0, 0,
	921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 343, 352, 351,
	332, 333, 335, 337, 342, 349, 355, 0, 0, 0,
	0, 0, 260, 315, 267, 259, 559, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 393, 252, 0, 444, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	324, 197, 222, 0, 0, 403, 452, 464, 0, 0,
	0, 250, 0, 462, 417, 579, 230, 279, 449, 423,
	460, 431, 282, 0, 0, 461, 364, 564, 441, 576,
	602, 603, 258, 397, 588, 502, 596, 620, 223, 255,
	411, 495, 582, 484, 389, 560, 561, 323, 483, 290,
	200, 361, 608, 221, 470, 363, 239, 228, 566, 585,
	284, 447, 615, 210, 497, 574, 236, 474, 0, 0,
	622, 244, 494, 212, 571, 493, 385, 320, 321, 211,
	0, 448, 263, 288, 0, 0, 253, 406, 568, 569,
	251, 623, 225, 595, 217, 0, 594, 399, 563, 572,
	386, 375, 216, 570, 384, 374, 328, 347, 348, 275,
	301, 438, 367, 439, 300, 302, 395, 394, 396, 204,
	583, 0, 205, 0, 489, 584, 624, 443, 209, 231,
	232, 234, 0, 274, 278, 286, 289, 297, 298, 307,
	359, 410, 437, 433, 442, 0, 558, 577, 589, 600,
	606, 607, 609, 610, 611, 612, 613, 616, 614, 398,
	305, 485, 327, 365, 0, 0, 416, 463, 237, 581,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 376, 476, 578, 329, 341, 344, 334,
	353, 0, 354, 330, 331, 336, 338, 339, 340, 345,
	346, 350, 356, 246, 207, 382, 390, 557, 306, 213,
	214, 215, 504, 505, 506, 507, 592, 593, 597, 453,
	454, 455, 456, 287, 587, 303, 459, 458, 325, 326,
	371, 440, 520, 522, 533, 537, 539, 541, 547, 550,
	521, 523, 534, 538, 540, 542, 548, 551, 510, 512,
	514, 516, 529, 528, 525, 553, 554, 531, 536, 515,
	527, 532, 545, 552, 549, 509, 513, 517, 526, 544,
	543, 524, 535, 546, 530, 518, 511, 519, 0, 196,
	218, 360, 0, 445, 283, 621, 591, 586, 203, 220,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 219, 229, 233, 240,
	256, 271, 273, 280, 293, 304, 312, 313, 316, 322,
	372, 378, 379, 380, 381, 400, 401, 402, 405, 408,
	409, 412, 414, 415, 418, 422, 426, 427, 428, 430,
	432, 434, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 565,
	567, 580, 598, 604, 471, 295, 296, 435, 436, 308,
	309, 618, 619, 294, 575, 605, 573, 617, 599, 429,
	370, 0, 0, 373, 276, 299, 314, 0, 590, 492,
	224, 457, 285, 248, 0, 0, 208, 243, 227, 254,
	269, 272, 318, 383, 391, 420, 425, 291, 266, 241,
	450, 238, 475, 499, 500, 501, 503, 387, 261, 424,
	388, 0, 368, 555, 556, 310, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 358, 262, 0, 0, 421, 0, 202, 0,
	477, 249, 369, 366, 562, 277, 268, 264, 247, 311,
	377, 419, 498, 413, 0, 362, 0, 0, 487, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 245, 319, 201, 404,
	488, 281, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 343, 352, 351, 332, 333, 335,
	337, 342, 349, 355, 0, 0, 0, 0, 0, 260,
	315, 267, 259, 559, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	393, 252, 0, 444, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 324, 197, 222,
	0, 0, 403, 452, 464, 0, 0, 0, 250, 0,
	462, 417, 579, 230, 279, 449, 423, 460, 431, 282,
	0, 0, 461, 364, 564, 441, 576, 602, 603, 258,
	397, 588, 502, 596, 620, 223, 255, 411, 495, 582,
	484, 389, 560, 561, 323, 483, 290, 200, 361, 608,
	221, 470, 363, 239, 228, 566, 585, 284, 447, 615,
	210, 497, 574, 236, 474, 0, 0, 622, 244, 494,
	212, 571, 493, 385, 320, 321, 211, 0, 448, 263,
	288, 0, 0, 253, 406, 568, 569, 251, 623, 225,
	595, 217, 0, 594, 399, 563, 572, 386, 375, 216,
	570, 384, 374, 328, 347, 348, 275, 301, 438, 367,
	439, 300, 302, 395, 394, 396, 204, 583, 0, 205,
	0, 489, 584, 624, 443, 209, 231, 232, 234, 0,
	274, 278, 286, 289, 297, 298, 307, 359, 410, 437,
	433, 442, 0, 558, 577, 589, 600, 606, 607, 609,
	610, 611, 612, 613, 616, 614, 398, 305, 485, 327,
	365, 0, 0, 416, 463, 237, 581, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	376, 476, 578, 329, 341, 344, 334, 353, 0, 354,
	330, 331, 336, 338, 339, 340, 345, 346, 350, 356,
	246, 207, 382, 390, 557, 306, 213, 214, 215, 504,
	505, 506, 507, 592, 593, 597, 453, 454, 455, 456,
	287, 587, 303, 459, 458, 325, 326, 371, 440, 520,
	522, 533, 537, 539, 541, 547, 550, 521, 523, 534,
	538, 540, 542, 548, 551, 510, 512, 514, 516, 529,
	528, 525, 553, 554, 531, 536, 515, 527, 532, 545,
	552, 549, 509, 513, 517, 526, 544, 543, 524, 535,
	546, 530, 518, 511, 519, 0, 196, 218, 360, 0,
	445, 283, 621, 591, 586, 203, 220, 0, 257, 3603,
	3605, 3604, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 219, 229, 233, 240, 256, 271, 273,
	280, 293, 304, 312, 313, 316, 322, 372, 378, 379,
	380, 381, 400, 401, 402, 405, 408, 409, 412, 414,
	415, 418, 422, 426, 427, 428, 430, 432, 434, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 565, 567, 580, 598,
	604, 471, 295, 296, 435, 436, 308, 309, 618, 619,
	294, 575, 605, 573, 617, 599, 429, 370, 0, 0,
	373, 276, 299, 314, 0, 590, 492, 224, 457, 285,
	248, 0, 0, 208, 243, 227, 254, 269, 272, 318,
	383, 391, 420, 425, 291, 266, 241, 450, 238, 475,
	499, 500, 501, 503, 387, 261, 424, 0, 0, 368,
	555, 556, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3617,
	3618, 0, 0, 3693, 3692, 3691, 0, 0, 3689, 3690,
	3688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 750, 751, 894, 753, 754,
	891, 892, 0, 748, 752, 893, 895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 772, 3602, 3606, 3607, 3608, 3619, 3666,
	3667, 3675, 3677, 850, 3676, 3678, 3679, 3680, 3683, 3684,
	3685, 3686, 3681, 3682, 3687, 3586, 3590, 3587, 3588, 3589,
	3601, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599,
	3600, 3694, 3695, 3696, 3697, 3698, 3699, 3612, 3616, 3615,
	3613, 3614, 3610, 3611, 3638, 3637, 3639, 3640, 3641, 3642,
	3643, 3644, 3646, 3645, 3647, 3648, 3649, 3650, 3651, 3652,
	3620, 3621, 3624, 3625, 3623, 3622, 3626, 3635, 3636, 3627,
	3628, 3629, 3630, 3631, 3632, 3634, 3633, 3653, 3654, 3655,
	3656, 3657, 3659, 3658, 3662, 3663, 3661, 3660, 3665, 3664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 896, 0, 897, 0, 0, 901, 0, 0,
	0, 903, 902, 0, 904, 870, 869, 0, 0, 898,
	899, 0, 900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3700, 3701, 3702,
	3703, 3704, 3705, 3706, 3707,
}

var yyPact = [...]int{
	-1000, -1000, 2014, -1000, -515, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	444, 2496, 2667, -1000, -1000, -1000, -1000, 2664, -1000, 1005,
	2118, -1000, 2460, 4814, -1000, 52036, 442, -1000, 49208, 441,
	880, 229, 33654, -1000, 175, -1000, 172, 50622, 185, -1000,
	-1000, -1000, -1000, -419, 21633, 2335, 40, 37, 52036, -1000,
	-1000, -1000, -1000, 2612, 2054, -1000, 367, -1000, -1000, -1000,
	-1000, -1000, -1000, 48501, -1000, 1106, -1000, -1000, 52036, 2461,
	2432, 2660, 908, 2407, -1000, 2543, 2054, -1000, 21633, 2601,
	2531, 20926, 20926, 418, -1000, -1000, 583, -1000, -1000, 28705,
	52036, 36482, 813, -1000, 2460, -1000, -1000, -1000, 194, -1000,
	307, 2000, -1000, 1999, -1000, 831, 867, 369, 808, 470,
	368, 354, 349, 341, 339, 336, 332, 331, 338, -1000,
	924, 924, -221, -222, 1378, 412, 409, 409, 1028, 427,
	2393, 2376, -1000, -1000, 924, 924, 924, 360, 924, 924,
	924, 924, 289, 287, 924, 924, 924, 924, 924, 924,
	924, 924, 924, 924, 924, 924, 924, 924, 924, 924,
	924, 859, 2460, 254, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 52036, 178, 52036, -1000, 830, 52036,
	-423, 1071, 1071, 90, 1071, 1071, 1071, 1071, 155, 939,
	35, -1000, 153, 243, 195, 255, 1061, 182, -1000, -1000,
	244, 1061, 1830, -1000, 914, 252, 147, -1000, 1071, 1071,
	-1000, 14538, 253, 14538, 14538, -1000, 2447, -1000, -1000, -1000,
	-1000, -1000, 1384, -1000, -1000, -1000, -1000, -62, 426, -1000,
	-1000, -1000, -1000, 50622, 47794, 290, -1000, -1000, 46, -1000,
	-1000, 1861, 1285, 21633, 1390, 904, -1000, -1000, 1148, 886,
	-1000, -1000, -1000, -1000, -1000, 794, -1000, 22340, 22340, 22340,
	22340, -1000, -1000, 2004, 47087, 2004, 2004, 22340, 2004, -1000,
	22340, 2004, 2004, 2004, 21633, 2004, 2004, 2004, 2004, -1000,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, -1000, -1000, -1000, -1000, 2004, 823, 2004, 2004,
	2004, 2004, 2004, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2004, 2004, 2004, 2004, 2004, 2004, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	24461, 1538, 1536, 1529, -1000, 18805, 2004, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 52036, -1000, 2004,
	206, 50622, 50622, 305, 2543, 2054, -1000, 2612, 2712, 367,
	-1000, 3194, 1648, 1590, 1428, 2054, 1940, 52036, -1000, 2018,
	-1000, 1969, -1000, -1000, -1000, -1000, 2149, 1437, 1821, -1000,
	-1000, -1000, -1000, 1875, 21633, -1000, -1000, 2637, -1000, 25876,
	822, 2635, 46380, -1000, 418, 418, 1954, 414, -9, -1000,
	-1000, -1000, -1000, 963, 32947, -1000, -1000, -1000, -1000, -1000,
	1843, 52036, -1000, -1000, 3890, 1389, -1000, 2117, -1000, 1837,
	-1000, 2049, 21633, 2111, 439, 1389, 433, 432, 431, -1000,
	-72, -1000, -1000, -1000, -1000, -1000, -1000, 924, 924, 924,
	-1000, 320, 2599, 4814, 7617, -1000, -1000, -1000, 45673, 2116,
	1389, -1000, 2113, -1000, 1043, 811, 868, 868, 1389, -1000,
	-1000, 51329, 1389, 1038, 1029, 1389, 1389, 50622, 50622, -1000,
	44966, -1000, 44259, 43552, 1377, 50622, 42845, 42138, 41431, 40724,
	40017, -1000, 2363, -1000, 2134, -1000, -1000, -1000, 51329, 1389,
	1389, 51329, 50622, 51329, 52036, 1389, -1000, -1000, 362, -1000,
	-1000, 1374, 1368, 1337, 924, 924, 1333, 1818, 1816, 1810,
	924, 924, 1325, 1804, 35068, 1800, 258, 1312, 1311, 1309,
	1404, 1794, 203, 1784, 1370, 1329, 1307, 50622, 2103, 52036,
	-1000, 236, 943, 934, 960, 2460, 2331, 1953, 424, 438,
	1389, 407, 407, 50622, -1000, 15251, -1000, 207, -1000, 1781,
	21633, -1000, 1065, 1061, 1061, -1000, -1000, -1000, -1000, -1000,
	-1000, 1071, 52036, 1065, -1000, -1000, -1000, 1061, 1071, 52036,
	1071, 1071, 1071, 1071, 1061, 1061, 1061, 1071, 52036, 52036,
	52036, 52036, 52036, 52036, 52036, 52036, 52036, 14538, 914, 1071,
	-424, -1000, 1749, -1000, -1000, 2217, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14538, 14538, -1000, -1000, -1000, -1000,
	-1000, 1949, -1000, 166, -15, 183, -1000, 39310, 487, 940,
	-1000, 487, -1000, -1000, -1000, 1944, 38603, -1000, -425, -428,
	-429, -437, -1000, -1000, -1000, -438, -444, -1000, -1000, -1000,
	21633, 21633, 21633, 21633, -253, -1000, 1016, 22340, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21633, 235, 1104, 22340, 22340,
	22340, 22340, 22340, 22340, 22340, 22340, 22340, 22340, 22340, 22340,
	22340, 22340, 22340, -1000, -1000, 30826, 4191, 4191, 886, 886,
	886, 886, -1000, -186, 1942, 51329, -1000, -1000, -1000, 819,
	21633, 21633, 886, -1000, 1389, 18805, 23047, 20926, 20926, 21633,
	976, 1285, 51329, 21633, -1000, 1428, -1000, -1000, -1000, -1000,
	1210, -1000, -1000, 1057, 2431, 2431, 2431, 2431, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 2431, 50622,
	50622, 251, 21633, 21633, 21633, 21633, 21633, 21633, 17390, 21633,
	21633, 22340, 21633, 21633, 21633, 1428, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, 21633, 21633, 21633, 1428, 21633, 1459, 21633, 21633,
	20926, 16677, 20926, 20926, 20926, 20926, 20926, -1000, -1000, -1000,
	-1000, -1000, -1000, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 1428, 21633, 21633, 21633, 21633, 21633, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1631, 1587, 1544,
	21633, -1000, 1941, -1000, -182, 27998, 21633, 1738, 2634, 2130,
	50622, -1000, -1000, -1000, 2543, -1000, 2543, 1631, 2683, 2266,
	20926, -1000, -1000, 2683, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1718, -1000, 52036, 1940, 2519, 50622, 52036, 2238,
	1732, 891, -1000, 21633, 21633, 1939, -1000, 1163, 52036, -1000,
	-253, -1000, 37896, -1000, -1000, 13825, 52036, 325, 52036, -1000,
	27291, 37189, 321, -1000, -9, 1911, -1000, 6, -22, 18097,
	882, -1000, -1000, -1000, 1378, 23754, 1758, 882, 103, -1000,
	-1000, -1000, 2049, -1000, 2049, 2049, 2049, 2049, 891, 891,
	891, 891, -1000, -1000, -1000, -1000, -1000, 2097, 2096, -1000,
	2049, 2049, 2049, 2049, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2091, 2091, 2091, 2090, 2090, 2058, 2058, 400, -1000,
	21633, 411, 36482, 2506, 1287, 1638, 236, 415, 2128, 1389,
	1389, 1389, 415, -1000, 1481, 1435, 1431, -1000, -505, 1933,
	-1000, -1000, 2592, -1000, -1000, 879, 1070, 1069, 906, 50622,
	210, 314, -1000, 392, -1000, 36482, 1389, 1021, 868, 1389,
	-1000, 1389, -1000, -1000, -1000, -1000, -1000, 1389, -1000, -1000,
	1932, -1000, 1920, 1160, 1060, 1145, 1026, 1932, -1000, -1000,
	-193, 1932, -1000, 1932, -1000, 1932, -1000, 1932, -1000, 1932,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 965,
	127, -342, 50622, 210, 423, -1000, 422, 30826, -1000, -1000,
	-1000, 30826, 30826, -1000, -1000, -1000, -1000, 1723, 1712, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -488, 52036,
	-1000, 232, 938, 295, 345, 297, 52036, 405, 2544, 2542,
	2541, 2535, 2526, 301, 286, 52036, 52036, 407, 2188, 52036,
	2481, 52036, -1000, -1000, -1000, -1000, 1709, 1706, -1000, 1285,
	52036, -1000, -1000, 1071, 1071, -1000, -1000, 52036, 1071, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1071, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 52036, -1000, -1000, -1000, -1000, -62, 163,
	-1000, -1000, 50622, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -104, -1000, 333, 2, 404, -1000, -1000, -1000,
	-1000, 2551, -1000, 1285, 1036, 990, -1000, 2004, -1000, -1000,
	1177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 235,
	22340, 22340, 22340, 1288, 754, 1323, 1180, 1366, 1220, 1220,
	1165, 1165, 883, 883, 883, 883, 883, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1695, -1000, 2004, 51329, 1827,
	16677, 1967, 1326, 1428, 3347, -1000, 1814, -1000, 1814, 1185,
	981, -1000, 21633, 1428, 3290, -1000, -1000, 1428, 1428, 21633,
	-1000, -1000, 21633, 21633, 21633, 21633, 1638, 1638, 1638, 1638,
	1638, 1638, 1638, 1638, 1638, 1638, 21633, 1921, 1918, 2631,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1576, 1638, 1638, 1638, 1638, 1638, 21633, 1559, -1000,
	-1000, -1000, 1487, 3283, 1277, 3275, 1638, 1638, -1000, 1638,
	3270, 3266, 1428, 1861, 2529, 2516, 1638, 1638, 1638, 1638,
	1638, 2491, 2483, 1638, 1638, 2474, 1638, 3261, 1638, 2469,
	2443, 2434, 2412, 2401, 2397, 2371, 2365, 2357, 2342, 2333,
	2326, 2295, 2278, 2265, 2252, 2223, 2209, 1638, 1638, 1638,
	3257, 1638, 3253, 1638, 3205, 1638, 1638, 2955, 2203, 2182,
	1428, 1917, -1000, 2948, 1638, 2943, 2939, 2922, 2164, 2912,
	2893, 2881, 1638, 1638, 1638, 2142, 2856, 2849, 2841, 2833,
	2825, 2819, 2814, 2807, 2748, 1638, 1544, 1544, 1544, 1544,
	1544, 2742, -261, 1638, 1428, -1000, -1000, -1000, -1000, -1000,
	2710, 2121, 1428, 1916, 2004, 805, -1000, -1000, 1814, 1428,
	1428, 1814, 1814, 2680, 2649, 2644, 2640, 2623, 2588, 1638,
	1638, -1000, 1638, 2584, 2577, 2073, 2060, 1428, -1000, 1544,
	52036, -1000, -416, -1000, -29, 875, 2004, -1000, 35068, 1428,
	-1000, 3120, -1000, 1289, -1000, -1000, -1000, -1000, -1000, 32240,
	1874, 2683, -1000, -1000, 2004, 1792, -1000, -1000, -1000, 891,
	66, 31533, 541, 541, 113, 1285, 1285, 21633, -1000, -1000,
	-1000, -1000, -1000, -1000, 801, 2613, 413, 2004, -1000, 1913,
	2329, -1000, -1000, -1000, 2515, 25169, -1000, -1000, 2004, 2004,
	52036, 1845, 1779, -1000, 769, -1000, 1392, 1911, -9, 15,
	-1000, -1000, -1000, -1000, 1285, -1000, 1413, 329, 343, -1000,
	395, -1000, -1000, -1000, -1000, 2372, 80, -1000, -1000, -1000,
	864, 891, -1000, -1000, -1000, -1000, -1000, -1000, 1675, 1675,
	-1000, -1000, -1000, -1000, -1000, 1282, -1000, -1000, -1000, -1000,
	1281, -1000, -1000, 1280, -1000, -1000, 2525, 2190, 411, -1000,
	-1000, 924, 1660, -1000, -1000, 2378, 924, 924, 50622, -1000,
	-1000, 1743, 2506, 232, 52036, 998, 2187, -1000, 2128, 2128,
	2128, 52036, -1000, -1000, -1000, -1000, -1000, -1000, -490, 174,
	492, -1000, -1000, -1000, 5893, 50622, 1766, -1000, 205, -1000,
	1645, -1000, 50622, -1000, 1757, 2087, 1389, 1389, -1000, -1000,
	-1000, 50622, 2004, -1000, -1000, -1000, -1000, 417, 2444, 328,
	-1000, -1000, -335, -1000, -1000, 210, 205, 51329, 1389, 882,
	-1000, -1000, -1000, -1000, -1000, -491, 1742, 429, 223, 497,
	52036, 52036, 52036, 52036, 52036, 738, -1000, -1000, 23, -1000,
	-1000, 196, -1000, -1000, -1000, -1000, 196, -1000, -1000, -1000,
	-1000, 272, 421, -1000, 52036, 52036, 915, -1000, -1000, -1000,
	-1000, -1000, 1061, -1000, -1000, 1061, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2430, -7,
	-457, -1000, -454, 21633, -1000, -1000, -1000, -1000, 1201, 477,
	1323, 22340, 22340, 22340, -1000, -1000, -1000, 806, 806, 30826,
	-1000, 21633, 20926, -1000, -1000, 21633, 21633, 970, -1000, 21633,
	1144, -1000, 21633, -1000, -1000, 1544, 1638, 1638, 1638, 1638,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1923, 21633, 21633, 21633, 1428, 285, -1000, -1000, -1000, -1000,
	-1000, 2630, -1000, 21633, -1000, 30826, 21633, 21633, 21633, -1000,
	-1000, -1000, 21633, 21633, -1000, -1000, 21633, -1000, 21633, -1000,
	-1000, -1000, -1000, -1000, -1000, 21633, -1000, 21633, -1000, -1000,
	-1000, 21633, -1000, 21633, -1000, -1000, 21633, -1000, 21633, -1000,
	21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000,
	21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000,
	21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000,
	21633, -1000, -1000, -1000, 21633, -1000, 21633, -1000, 21633, -1000,
	-1000, 21633, -1000, 21633, -1000, 21633, -1000, 21633, 21633, -1000,
	21633, 21633, 21633, -1000, 21633, 21633, 21633, 21633, -1000, -1000,
	-1000, -1000, 21633, 21633, 21633, 21633, 21633, 21633, 21633, 21633,
	21633, 21633, -1000, -1000, -1000, -1000, -1000, -1000, 21633, -1000,
	36482, 16, -261, 1459, 16, 1459, -1000, 20926, 15964, -1000,
	-1000, -1000, -1000, -1000, 21633, 21633, 21633, 21633, 21633, 21633,
	-1000, -1000, -1000, 21633, 21633, -1000, 21633, -1000, 21633, -1000,
	-1000, -1000, -1000, -1000, 875, -1000, 868, 868, 868, 50622,
	-1000, -1000, -1000, -1000, 1910, -1000, 2546, -1000, 2302, 2301,
	2627, 2613, -1000, 27291, 2683, -1000, -1000, 50622, -408, -1000,
	2332, 2392, 541, 541, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 13112, 2543, 21633, 2180, 51329, 241, -1000, 26584, 50622,
	51329, 27291, 27291, 27291, 27291, 27291, -1000, 2258, 2243, -1000,
	2255, 2228, 2269, 52036, -1000, 1631, 1736, -1000, 21633, 29412,
	1887, 27291, -1000, -1000, 27291, 52036, 12399, -1000, -1000, -18,
	-35, -1000, -1000, -1000, -1000, 1378, -1000, -1000, 1263, 2511,
	2366, -1000, -1000, -1000, -1000, -1000, 1717, -1000, 1693, 1902,
	1682, 1667, 127, -1000, 2065, 2417, 924, 924, -1000, 1236,
	-1000, 1389, 1629, 1626, -1000, -1000, -1000, 416, -1000, 2478,
	52036, 2174, 2162, 2161, -1000, -502, 1233, 2077, 2035, 21633,
	2068, 2587, 1891, 50622, -1000, -1000, 51329, -1000, 276, -1000,
	411, 50622, -1000, -1000, -1000, 314, 52036, -1000, 6613, -1000,
	-1000, -1000, 205, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	52036, 230, -1000, 2064, 1382, -1000, -1000, 2043, -1000, -1000,
	-1000, -1000, 184, 292, 1609, 191, 1596, 191, -1000, 52036,
	857, 2190, 52036, -1000, -1000, -1000, 1071, 1071, -1000, 2405,
	-1000, 1389, 1638, 22340, 22340, -1000, 886, 381, -234, 2049,
	2049, -1000, 2049, 2058, -1000, 2049, 151, 2049, 140, 2049,
	-1000, -1000, 1428, 1428, 1544, -1000, 2055, 1855, -1000, 1285,
	21633, 2563, -1000, -1000, -1000, -1000, -1000, -78, 2548, 2540,
	1638, -1000, 2044, 2039, 21633, 1638, 1428, 2050, 1638, 1638,
	1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638,
	2046, 2040, 2034, 2030, 2015, 1991, 1973, 1957, 1951, 1914,
	1894, 1871, 1825, 1788, 1780, 1702, 1638, 1638, 1656, 1638,
	1647, 1634, -1000, 1285, 1544, 2521, 1544, 1638, 1638, 2459,
	334, 1638, 1664, 1664, 1664, 1664, 1664, 1544, 1544, 1544,
	1544, 1638, 50622, -1000, -261, -1000, -1000, -353, -354, -1000,
	1428, -261, 1901, 1428, -1000, 1625, 1621, 2284, 1601, 1638,
	2229, 1638, 1638, 1638, 1566, -1000, 2547, 2547, 2547, 1650,
	1289, 52036, -1000, -1000, -1000, -1000, 2613, 2617, 1896, -1000,
	-1000, 66, 594, -1000, 2330, 2392, -1000, 2586, 2327, 2583,
	-1000, -1000, -1000, -1000, -1000, 1285, -1000, 2471, 1864, -1000,
	937, 1881, -1000, -1000, 20219, 1658, 2289, 528, 1650, 1919,
	2329, 2151, 2160, 2938, -1000, -1000, -1000, -1000, 2226, -1000,
	2210, -1000, -1000, 2018, -1000, 1754, 325, 27291, 1912, 1912,
	-1000, 485, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1085,
	5101, 2656, -1000, 1578, -1000, 1408, 199, 1207, -1000, -1000,
	924, 924, -1000, 1020, 1018, -1000, 52036, 2037, -1000, 891,
	1563, 891, 1198, -1000, -1000, 1194, -1000, -1000, -1000, -1000,
	2075, 2234, -1000, -1000, -1000, -1000, 52036, -1000, -1000, 52036,
	52036, 52036, 2033, 2582, -1000, 21633, 2029, 933, 2106, 50622,
	50622, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 440, 924, -471, 283, 282, 924, 924, 924,
	-503, -1000, -1000, 1644, 1640, -1000, -223, -1000, 21633, -1000,
	-1000, -1000, 1183, 1183, 1538, 1536, 1529, -1000, 2018, -1000,
	-1000, -1000, 1641, -1000, -1000, -197, 50622, 50622, 50622, 50622,
	-1000, -1000, 1260, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 886, 1428, 315, -214, 1428,
	-1000, -1000, 891, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21633, -1000, 21633, -1000, 1285, 21633, 2543,
	1526, 21633, 21633, -1000, 1188, 1164, 1638, -1000, -1000, -1000,
	21633, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21633, -1000, 21633, -1000, 21633, -1000,
	21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000,
	21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000, 21633, -1000,
	21633, -1000, 21633, -1000, 21633, -1000, -1000, 21633, -1000, -1000,
	-1000, 21633, -1000, 21633, -1000, 21633, -1000, -1000, -1000, 21633,
	326, 806, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1428, 324, -1000, -1000, -1000, -1000, 2620,
	-1000, 1428, 21633, -1000, -1000, 21633, -1000, 21633, 21633, -1000,
	21633, -1000, 21633, -1000, -1000, -1000, -1000, 21633, 2004, 2285,
	2004, 2004, 29412, -1000, -1000, 2617, 2608, 2579, 2309, 2321,
	2321, 2330, -1000, 2575, 2573, -1000, 1521, 2571, 1513, 1007,
	-1000, 51329, 21633, 241, -1000, 377, 50622, 241, 50622, -1000,
	2564, -1000, -1000, 21633, 2026, -1000, 21633, -1000, -1000, -1000,
	-1000, 4191, 2613, 1912, -1000, -1000, 895, -1000, 21633, -1000,
	-1000, -1000, 52501, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1506, 1483, -1000, -1000, 2024, 21633, -1000, -1000, -1000,
	1635, 1585, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2018, -1000, -1000, -1000, -1000, 314, -497, 2081, 50622, 1154,
	-1000, 1623, 1891, 281, 241, 1477, 924, 924, 924, 1150,
	1133, 35068, 1615, -1000, 50622, 346, -1000, 314, -1000, -228,
	-230, 1638, -1000, -1000, 2501, -1000, -1000, 15964, -1000, -1000,
	2010, 2059, -1000, -1000, -1000, -1000, 2233, -189, -217, -1000,
	-1000, 1638, 1638, 1673, 1428, -1000, 1638, 1638, 1560, 1488,
	-1000, 1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638,
	1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638,
	1638, 1544, 1552, -1000, 326, 1428, 2159, -1000, -1000, 4191,
	-1000, -1000, 2564, 2570, 16, -1000, -1000, 213, 16, 1285,
	1546, 1638, 1520, 1473, 1638, 1638, 30119, -1000, 2566, 2558,
	35775, 35775, 875, 2608, -277, 21633, 21633, 2288, 1147, -1000,
	-1000, -1000, -1000, 1468, 1439, -1000, 1433, -1000, 2648, -1000,
	1285, -1000, 241, -1000, 464, 1881, -1000, 2543, 1285, 50622,
	1285, 56, 2564, -1000, 1638, -1000, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
	2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, -1000, -1000,
	50622, 2011, -1000, -1000, 2495, 1608, 170, -1000, 1460, 1891,
	-1000, -1000, 193, -1000, 21633, -1000, 35068, 1429, 1411, -1000,
	-1000, -1000, -1000, -503, -1000, -1000, -1000, -1000, -1000, -1000,
	367, 1890, -1000, 923, 50622, 52036, -1000, 2079, -1000, -1000,
	-1000, 21633, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21633,
	-1000, 1428, 2157, -1000, -345, -1000, -473, 21633, -261, -1000,
	-1000, -261, -1000, 21633, -1000, -1000, 21633, -1000, 21633, -1000,
	-1000, 1584, -1000, -1000, -1000, -1000, -1000, 1584, 1584, -1000,
	-277, -1000, 1888, -1000, 50622, 1285, 1861, -1000, 1131, -1000,
	-1000, -1000, -1000, -1000, 51329, 1881, 50622, -1000, 1582, 1428,
	2004, 2543, -1000, 1569, -1000, 367, -1000, 2008, 2035, -1000,
	-1000, -1000, 19512, -1000, -1000, -1000, -1000, -1000, 278, -196,
	15964, 11686, 1557, -1000, -194, 1638, 1544, -1000, -447, -1000,
	-1000, -1000, -1000, 313, -1000, -1000, 1861, -1000, -1000, 1465,
	1427, 1418, 34361, -1000, -1000, -1000, -1000, -277, -1000, -1000,
	2492, -1000, -1000, 1799, -1000, -1000, 29412, 49915, -1000, -181,
	323, -196, 21633, 2007, 1428, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -32, -1000, -1000, 457, -1000, -1000, -1000,
	2043, -215, -1000, -1000, -1000, 302, -460, -269, -278, -1000,
	-1000, 22340, -1000, 21633, -1000, 21633, -1000, 21633, -1000, -1000,
	-1000, 50622, 2004, -1000, 1542, -1000, 4000, -365, 2148, -1000,
	-128, -1000, -1000, -1000, 1080, 1166, -1000, -1000, -1000, -1000,
	-1000, -1000, 1797, 50622, -1000, 398, -1000, -1000, 15251, -197,
	-218, 982, -1000, -1000, -1000, -1000, -1000, 1296, 1274, 1638,
	-1000, 50622, -1000, 49915, -360, 882, 4191, -1000, 2144, 2139,
	2624, -1000, -1000, -1000, -1000, -1000, -1000, -510, 1534, 234,
	-1000, -1000, -1000, 302, -1000, 21633, -1000, 21633, -1000, 1428,
	-1000, -1000, 2476, 56, -1000, 2641, -1000, 2645, 989, 989,
	-1000, 1129, -510, -1000, -1000, 1638, 1638, -1000, -366, -1000,
	-1000, -1000, -1000, -1000, 357, 1223, -1000, -1000, -1000, -1000,
	-1000, 4191, -1000, -1000, -1000, 212, 212, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3379, 3377, 24, 6, 36, 35, 3376, 66, 93,
	216, 50, 198, 95, 3375, 170, 3374, 3373, 3372, 3370,
	3369, 3368, 2706, 2698, 2692, 3367, 3366, 3365, 3364, 3360,
	3357, 3356, 3355, 3353, 3352, 189, 166, 197, 3350, 3348,
	3343, 113, 187, 83, 86, 193, 3342, 3298, 74, 3297,
	3296, 3295, 184, 183, 181, 1028, 3289, 179, 114, 44,
	3288, 3283, 3282, 3281, 3278, 3277, 3276, 3275, 3273, 3272,
	3271, 3269, 3268, 3266, 3264, 3263, 3256, 3255, 310, 3254,
	3253, 14, 3252, 76, 3250, 3249, 3248, 3247, 3246, 12,
	3245, 3244, 27, 43, 3243, 3242, 47, 3240, 3230, 3229,
	3226, 3217, 45, 3211, 23, 3194, 37, 3193, 3190, 124,
	3188, 3179, 3123, 39, 3122, 3120, 3117, 3115, 3112, 3103,
	3102, 135, 3101, 3100, 3099, 176, 215, 3095, 3093, 177,
	101, 110, 3091, 3088, 99, 195, 3086, 117, 3079, 3067,
	3066, 146, 3062, 3083, 3057, 3052, 67, 62, 3049, 132,
	3047, 3046, 9, 194, 63, 10, 17, 18, 3044, 3042,
	64, 72, 3040, 108, 3039, 3038, 102, 71, 3037, 104,
	97, 3033, 3030, 8, 13, 3029, 1, 5, 7, 82,
	3028, 3026, 111, 3025, 3024, 3021, 92, 3019, 3018, 4934,
	3017, 90, 128, 100, 143, 3014, 164, 136, 3013, 3004,
	3002, 2987, 2985, 51, 2984, 2979, 2978, 137, 238, 171,
	2971, 145, 325, 55, 150, 2968, 199, 77, 200, 167,
	2963, 2962, 127, 133, 2957, 2954, 57, 158, 178, 2945,
	96, 126, 116, 188, 91, 147, 2942, 2941, 56, 61,
	2938, 2936, 2930, 2928, 169, 2927, 2925, 60, 2924, 54,
	2923, 168, 2922, 130, 68, 2915, 163, 162, 2914, 84,
	2910, 2908, 80, 98, 70, 26, 2906, 157, 165, 123,
	186, 2905, 2904, 52, 2903, 2900, 2898, 196, 324, 2896,
	2893, 300, 172, 140, 144, 89, 2892, 342, 2891, 2888,
	15, 4786, 7719, 2880, 25, 159, 2874, 2872, 7596, 41,
	40, 30, 2867, 203, 2865, 2857, 2856, 2855, 201, 204,
	109, 160, 58, 2854, 2850, 2846, 38, 2831, 2827, 2826,
	2824, 2817, 2816, 73, 34, 33, 32, 209, 59, 21,
	94, 174, 154, 65, 2814, 2813, 2803, 119, 81, 2801,
	156, 155, 120, 105, 2800, 175, 141, 121, 2796, 106,
	31, 2794, 2793, 2789, 2784, 88, 2771, 2766, 2763, 2760,
	152, 142, 118, 78, 2759, 79, 115, 149, 148, 48,
	2757, 42, 2755, 2754, 29, 191, 28, 2753, 49, 103,
	131, 2750, 6237, 185, 2745, 11, 302, 161, 2743, 2741,
	2, 16, 19, 2740, 2738, 2735, 2734, 129, 2721, 2715,
	2713, 2712, 22, 46, 20, 4, 112, 75, 2710, 2700,
	138, 2694, 2693, 0, 981, 125, 2680, 210,
}

//line sql.y:8434
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 259, 382, 383, 383, 257, 257, 33, 73, 35,
	35, 34, 34, 37, 37, 36, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 107, 107, 23,
	24, 24, 24, 24, 415, 415, 184, 184, 182, 182,
	183, 183, 262, 262, 25, 266, 266, 268, 268, 268,
	268, 258, 258, 258, 26, 26, 267, 267, 269, 269,
	269, 272, 272, 272, 272, 311, 311, 311, 27, 27,
	27, 27, 27, 127, 127, 385, 385, 384, 378, 378,
	377, 377, 376, 381, 381, 380, 380, 379, 39, 40,
	49, 49, 49, 49, 50, 51, 386, 386, 351, 56,
	56, 55, 55, 55, 55, 55, 55, 57, 57, 53,
	53, 52, 52, 54, 54, 353, 353, 339, 339, 352,
	352, 352, 352, 352, 352, 352, 338, 338, 138, 138,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 401, 401, 401,
	400, 400, 237, 237, 237, 237, 237, 237, 237, 237,
	148, 148, 160, 160, 160, 160, 160, 160, 146, 146,
	147, 145, 145, 145, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 159, 159, 155, 155, 155, 156, 156,
	156, 157, 157, 402, 402, 402, 402, 316, 316, 316,
	316, 319, 319, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 318, 318, 318, 318, 318, 318, 318, 320,
	320, 320, 320, 320, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	322, 322, 322, 322, 322, 322, 322, 322, 337, 337,
	323, 323, 331, 331, 332, 332, 333, 333, 333, 334,
	334, 334, 335, 335, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 330, 330, 329, 329, 329, 340, 365,
	365, 364, 364, 362, 362, 362, 362, 362, 362, 362,
	362, 349, 349, 359, 359, 359, 359, 359, 348, 348,
	344, 344, 344, 345, 345, 346, 346, 343, 343, 347,
	347, 361, 361, 360, 360, 341, 341, 342, 342, 367,
	403, 403, 403, 403, 403, 404, 404, 368, 393, 395,
	395, 395, 394, 394, 391, 392, 390, 390, 390, 390,
	390, 83, 83, 83, 285, 285, 286, 286, 357, 357,
	356, 356, 356, 358, 358, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 280, 280, 280, 389,
	389, 389, 389, 389, 389, 388, 388, 388, 354, 354,
	354, 354, 387, 387, 58, 58, 217, 217, 406, 406,
	407, 407, 407, 46, 46, 46, 46, 46, 46, 45,
	45, 45, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 47, 47, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 109, 109, 110, 110, 110, 110, 112,
	112, 112, 370, 370, 59, 59, 3, 3, 172, 174,
	175, 175, 173, 173, 173, 173, 173, 173, 61, 61,
	60, 60, 177, 176, 178, 178, 178, 1, 1, 2,
	2, 4, 4, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 336, 336, 336, 369, 369,
	371, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 115, 114, 114, 113, 116, 116, 116, 116, 116,
	116, 116, 116, 373, 373, 373, 62, 62, 374, 324,
	325, 326, 5, 6, 350, 372, 123, 123, 29, 38,
	38, 30, 30, 30, 30, 31, 31, 63, 66, 66,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 279, 279, 288, 288, 278, 278, 303, 303,
	303, 281, 281, 281, 282, 282, 399, 399, 399, 275,
	275, 65, 65, 65, 304, 304, 304, 304, 68, 68,
	408, 408, 409, 409, 410, 410, 410, 69, 70, 70,
	306, 306, 307, 307, 71, 72, 84, 84, 84, 84,
	84, 84, 84, 85, 85, 85, 85, 108, 108, 108,
	15, 15, 15, 15, 80, 80, 80, 14, 14, 17,
	67, 67, 74, 396, 396, 397, 398, 398, 398, 398,
	75, 77, 32, 32, 32, 32, 32, 32, 133, 133,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 128, 128, 128, 122, 122, 416, 78, 79,
	79, 126, 126, 126, 119, 119, 119, 125, 125, 125,
	16, 16, 18, 261, 261, 19, 19, 130, 130, 132,
	132, 132, 132, 132, 134, 134, 134, 134, 134, 134,
	134, 129, 129, 131, 131, 131, 131, 296, 296, 296,
	295, 295, 166, 166, 168, 167, 167, 169, 169, 170,
	170, 170, 170, 215, 215, 192, 192, 254, 254, 255,
	255, 253, 253, 260, 260, 256, 256, 256, 256, 263,
	263, 171, 171, 171, 171, 179, 179, 180, 180, 181,
	181, 305, 305, 301, 301, 301, 300, 300, 185, 185,
	185, 187, 186, 186, 186, 186, 188, 188, 190, 190,
	189, 189, 191, 196, 196, 195, 195, 193, 193, 193,
	193, 194, 194, 194, 194, 197, 197, 143, 143, 143,
	143, 143, 143, 143, 143, 158, 158, 158, 158, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	244, 244, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	152, 220, 220, 219, 219, 86, 86, 86, 87, 87,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	144, 144, 91, 91, 90, 90, 210, 210, 293, 293,
	92, 93, 93, 96, 96, 95, 94, 94, 100, 100,
	97, 97, 99, 99, 98, 101, 101, 102, 103, 103,
	276, 276, 198, 198, 206, 206, 206, 206, 199, 199,
	199, 199, 199, 199, 199, 207, 207, 207, 214, 208,
	208, 204, 204, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 163, 163, 163,
	163, 225, 225, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 151, 151,
	164, 164, 164, 164, 165, 165, 165, 165, 165, 165,
	165, 313, 313, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 417, 417, 327, 327, 327, 205,
	205, 205, 205, 205, 124, 124, 124, 124, 124, 310,
	310, 310, 314, 314, 314, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	315, 315, 223, 223, 120, 120, 221, 221, 222, 224,
	224, 216, 216, 216, 216, 218, 218, 201, 201, 201,
	226, 226, 227, 227, 104, 105, 105, 106, 106, 228,
	228, 230, 229, 229, 231, 232, 232, 232, 233, 233,
	234, 234, 234, 48, 48, 48, 48, 48, 43, 43,
	43, 43, 44, 44, 44, 44, 135, 135, 135, 135,
	137, 137, 136, 136, 81, 81, 82, 82, 82, 141,
	141, 142, 142, 142, 139, 139, 140, 140, 251, 251,
	235, 235, 235, 242, 242, 242, 238, 238, 240, 240,
	240, 241, 241, 241, 239, 248, 248, 250, 250, 249,
	249, 245, 245, 246, 246, 247, 247, 247, 243, 243,
	200, 200, 200, 200, 200, 252, 252, 252, 252, 264,
	264, 211, 211, 213, 213, 212, 212, 162, 265, 265,
	273, 270, 270, 271, 271, 297, 297, 297, 274, 274,
	287, 287, 283, 283, 284, 284, 277, 277, 289, 289,
	289, 76, 209, 209, 366, 366, 363, 292, 292, 294,
	294, 298, 298, 302, 302, 299, 299, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 413, 414, 308, 309,
	309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 5, 5,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 2, 2,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 4, 6,
	6, 6, 8, 6, 6, 4, 4, 3, 4, 6,
	6, 4, 4, 6, 4, 6, 4, 4, 4, 4,
	4, 4, 6, 4, 6, 4, 4, 4, 6, 4,
	6, 4, 4, 6, 4, 6, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 4, 4, 6, 4, 6,
	4, 8, 6, 4, 4, 6, 4, 6, 8, 4,
	6, 8, 4, 4, 6, 8, 6, 4, 6, 6,
	8, 10, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 4, 4, 6, 4, 6, 5,
	9, 6, 9, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	4, 4, 3, 4, 6, 6, 4, 6, 4, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 4, 1, 1, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -411, -78, -416, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	689, -9, -8, -13, 10, 11, -107, -34, 33, -39,
	-49, 226, -50, -40, 227, -51, 229, 228, 266, 230,
	378, 259, 75, 314, 315, 317, 318, 319, 320, -108,
	669, 264, 265, 232, 37, 46, 34, 35, 38, 236,
	272, 273, 235, -10, -35, 9, -413, 12, 455, 261,
	260, 29, -12, 563, 87, -79, -412, 717, 239, -251,
	-235, 23, 34, 30, -234, -230, -126, -235, 21, 19,
	8, -78, -78, -78, 13, 14, -78, -351, -353, 87,
	159, 87, -78, -56, -55, -53, -52, -54, -57, 32,
	-46, -47, -375, -45, -42, 231, 228, 276, 123, 124,
	266, 267, 268, 230, 250, 265, 269, 264, 285, -41,
	82, 34, 563, 566, -358, 227, 233, 234, 229, 456,
	126, 125, 76, -355, 373, 596, 687, -57, 689, 101,
	104, 688, 45, 240, 690, 691, 692, 603, 693, 249,
	694, 695, 696, 697, 703, 644, 704, 705, 706, 127,
	8, -78, -302, -298, 91, -291, 560, 252, 594, 595,
	301, 82, 42, 569, 370, 373, 596, 485, 687, 379,
	314, 330, 324, 490, 491, 492, 353, 345, 561, 597,
	570, 304, 253, 289, 681, 343, 135, 689, 308, 598,
	267, 380, 381, 599, 382, 101, 317, 419, 702, 307,
	600, 700, 104, 688, 322, 80, 484, 52, 684, 45,
	262, 341, 235, 337, 690, 290, 601, 572, 283, 126,
	123, 709, 37, 333, 51, 31, 699, 125, 50, 691,
	150, 602, 692, 603, 384, 360, 675, 49, 385, 268,
	604, 85, 273, 565, 311, 683, 386, 504, 334, 387,
	300, 698, 232, 605, 664, 656, 657, 388, 389, 676,
	365, 361, 366, 506, 606, 411, 489, 390, 660, 661,
	716, 53, 607, 608, 677, 124, 609, 79, 693, 81,
	328, 329, 610, 298, 251, 509, 510, 413, 357, 467,
	474, 475, 111, 112, 470, 113, 476, 114, 477, 478,
	479, 468, 115, 108, 469, 480, 481, 358, 359, 116,
	482, 110, 109, 471, 473, 117, 483, 249, 36, 391,
	562, 302, 59, 306, 277, 414, 47, 363, 713, 46,
	671, 511, 611, 674, 356, 352, 464, 54, 612, 613,
	614, 615, 486, 694, 355, 327, 351, 708, 4, 295,
	487, 695, 63, 234, 368, 367, 369, 284, 410, 348,
	616, 617, 618, 256, 83, 619, 338, 22, 620, 621,
	392, 291, 622, 57, 623, 624, 417, 265, 625, 55,
	696, 40, 626, 270, 710, 697, 627, 628, 629, 670,
	630, 272, 631, 394, 632, 658, 659, 393, 362, 364,
	512, 279, 395, 378, 237, 564, 633, 312, 332, 269,
	701, 634, 257, 500, 501, 502, 503, 682, 508, 507,
	271, 276, 264, 418, 258, 635, 636, 637, 638, 639,
	305, 655, 640, 641, 318, 703, 465, 44, 642, 643,
	644, 645, 646, 299, 294, 412, 421, 62, 84, 375,
	647, 648, 680, 326, 323, 292, 649, 315, 56, 704,
	705, 706, 286, 707, 493, 494, 495, 496, 10, 546,
	529, 557, 530, 547, 531, 540, 532, 548, 556, 558,
	513, 521, 514, 522, 552, 535, 549, 541, 534, 533,
	555, 538, 542, 515, 523, 553, 539, 516, 524, 517,
	525, 518, 526, 551, 550, 543, 554, 519, 527, 545,
	520, 528, 544, 536, 537, 714, 715, 488, 397, 127,
	296, 297, 48, 349, 278, 650, 309, 651, 339, 340,
	354, 325, 350, 667, 316, 665, 280, 398, 466, 266,
	652, 420, 293, 371, 376, 310, 568, 505, 285, 399,
	679, 567, 497, 498, 347, 344, 287, 499, 653, 669,
	400, 241, 281, 282, 654, 666, 401, 402, 303, 403,
	404, 405, 406, 407, 409, 313, 408, 668, 662, 663,
	288, 566, 321, 342, 377, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 463, 239, -78, 239, -189, -298, 239,
	178, -270, 381, -288, 383, 396, 391, 401, 389, -279,
	392, 394, 279, -399, 411, 239, 398, 226, 384, 393,
	402, 403, 303, 409, 404, 313, 408, 288, 405, 406,
	407, -382, 178, 692, 707, 135, 346, 388, 386, 412,
	671, 91, -304, 91, 92, 93, -291, 316, -306, 321,
	-292, -382, -291, 319, -78, -78, -308, -308, -128, 671,
	673, -208, -143, 143, -158, -259, -161, 92, -149, -153,
	-202, -203, -204, -205, -159, -218, -257, 167, 168, 175,
	144, -214, -162, 27, 559, 457, 456, 178, 32, -152,
	221, 69, 70, 459, 146, 58, 12, 431, 432, -160,
	424, 425, 433, 427, 428, 484, 486, 487, 488, 485,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	489, 461, 462, 118, 463, 108, 110, 109, 464, 465,
	466, 343, 511, 512, 506, 509, 510, 508, 507, 358,
	359, 467, 529, 530, 534, 533, 531, 532, 535, 538,
	539, 540, 541, 542, 543, 545, 544, 536, 537, 514,
	513, 515, 516, 517, 518, 519, 520, 522, 521, 523,
	524, 525, 526, 527, 528, 546, 547, 548, 549, 550,
	552, 551, 556, 555, 553, 554, 558, 557, 468, 469,
	111, 112, 113, 114, 115, 116, 117, 470, 473, 471,
	472, 474, 475, 476, 481, 482, 477, 478, 479, 480,
	483, 369, 367, 368, 364, 363, 362, -88, -100, 585,
	584, -101, -150, -151, -164, -165, -292, -298, 244, 423,
	238, 173, 455, -154, -147, -216, 107, 93, -8, -212,
	422, 429, 430, 434, 426, 435, 571, 573, 588, 589,
	591, 576, 581, 580, 583, 500, 501, 502, 503, 504,
	505, 656, 657, 658, 659, 660, 661, 662, 663, -382,
	-291, 91, -156, -155, -198, 94, 99, 102, 103, 105,
	-405, 262, 339, 340, 119, -413, 685, 90, 95, 96,
	97, 98, 120, 121, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 45, 397, 397, -189,
	-78, -78, -78, -78, -228, -126, -230, -10, -8, -413,
	9, -78, -8, -9, -13, -35, -37, 590, -36, -298,
	100, -182, -189, -235, -251, 13, 162, 43, 51, -233,
	-234, -12, -8, -143, 20, 24, 25, -131, 169, -143,
	-298, -131, -277, 243, -78, -78, -266, -311, 316, -268,
	412, 671, 411, -258, -271, 91, -257, -270, 410, 92,
	-352, 159, -338, -342, -292, 254, -368, 250, -189, -361,
	-360, -292, -413, -127, -287, 240, 248, 247, 136, -386,
	139, 296, 423, 238, -52, -53, -54, -270, 177, 691,
	-109, 271, 275, 88, 88, -342, -341, -340, -387, 275,
	254, -367, -359, 246, 255, -348, 247, 248, -343, 240,
	137, -387, -343, 245, 255, 250, 254, 275, 275, 127,
	275, 127, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 270, -349, 151, -349, 567, 567, -355, -387, 250,
	240, -387, -387, 246, -289, -343, 242, 26, 242, 36,
	36, -349, -349, -349, -270, 177, -349, -349, -349, -349,
	283, 283, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, 239,
	-386, -135, 408, 303, 82, -55, 285, -38, -189, -287,
	240, 241, -386, 272, -189, 222, -189, 674, -281, 159,
	16, -281, -278, 397, 395, 382, 387, -281, -281, -281,
	-281, 286, 380, -344, 240, 36, 251, 397, 286, 380,
	286, 287, 286, 287, 390, 400, 286, -303, 15, 162,
	423, 385, 389, 279, 239, 280, 241, 399, 287, -303,
	90, -282, 159, 286, 397, 282, -281, -281, -309, -413,
	-294, -292, -290, 231, 24, 142, 26, 28, 145, 178,
	130, 20, 146, 38, 233, 346, 250, 177, 246, 456,
	226, 73, 571, 424, 428, 422, 427, 431, 458, 459,
	423, 383, 32, 14, 573, 29, 260, 25, 39, 171,
	228, 149, 574, 263, 27, 261, 118, 121, 576, 23,
	76, 255, 15, 248, 41, 17, 577, 578, 18, 244,
	243, 162, 240, 71, 12, 221, 30, 158, 67, 579,
	137, 580, 581, 582, 583, 131, 69, 159, 21, 711,
	429, 430, 34, 672, 559, 274, 173, 74, 60, 673,
	143, 426, 584, 585, 119, 586, 122, 77, 678, 139,
	19, 72, 43, 587, 275, 588, 245, 712, 589, 415,
	590, 160, 229, 455, 70, 161, 685, 591, 686, 238,
	396, 9, 460, 33, 259, 247, 129, 68, 435, 592,
	239, 148, 461, 462, 242, 132, 120, 8, 136, 35,
	13, 75, 78, 432, 433, 434, 58, 128, 563, 147,
	16, 593, 416, 141, -382, 674, -309, -309, 33, 92,
	-408, -409, -410, 563, 415, 242, -292, -189, -84, 664,
	230, -85, 670, 24, 237, -133, 397, -121, 178, 692,
	675, 676, 677, 674, 394, 682, 680, 678, 286, 679,
	88, 139, 141, 142, 4, -143, 158, -199, 151, 152,
	153, 154, 155, 156, 157, 163, 162, 143, 145, 159,
	-244, 140, 164, 165, 166, 167, 168, 169, 170, 172,
	171, 173, 174, 160, 161, 177, 224, 225, -153, -153,
	-153, -153, -214, -220, -219, -413, -216, -382, -291, -298,
	-413, -413, -153, -276, -413, -413, -149, -413, -413, -413,
	-223, -143, -413, -413, -417, -413, -417, -417, -417, -327,
	-413, -327, -327, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, 222, -413, -413, -413, -413, -413, -327, -327, -327,
	-327, -327, -327, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, 103, 99, 102,
	94, -218, 105, 90, 90, 90, 90, -8, -9, -208,
	-413, -308, -396, -397, -192, -189, -413, 303, -292, -292,
	272, -233, -12, -8, -228, -234, -230, -8, -78, -119,
	-132, 64, 65, -134, 25, 39, 68, 66, 24, -414,
	89, -414, -251, -414, 88, -37, -254, 87, 88, 62,
	44, 90, 90, 88, 22, -229, -231, -143, 15, -296,
	4, -295, 26, -292, 90, 222, 15, -190, 30, -189,
	-277, -277, 88, 91, 316, -267, -269, 413, 415, 151,
	-297, -292, 90, 32, 89, 88, -189, -316, -319, -321,
	-320, -322, -317, -318, 343, 344, 178, 347, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 360, 33, 262,
	339, 340, 341, 342, 361, 362, 363, 364, 366, 367,
	368, 369, 324, 345, 561, 325, 326, 327, 328, 329,
	330, 332, 333, 336, 334, 335, 337, 338, -383, -382,
	87, 89, 88, -323, 87, -143, -135, 239, -382, 240,
	240, 240, -78, 455, -349, -349, -349, 270, 20, -45,
	-42, -375, 19, -41, -42, 231, 123, 124, 228, 87,
	-338, 87, -347, -383, -382, 87, 137, 245, 136, -346,
	-343, -346, -347, -382, -216, -382, 137, 137, -382, -382,
	-263, -292, -263, -263, 24, -263, 24, -263, 24, 96,
	-292, -263, 24, -263, 24, -263, 24, -263, 24, -263,
	24, 32, 79, 80, 81, 32, 83, 84, 85, -216,
	-382, -382, -216, -338, -216, -189, -382, -270, 96, 96,
	96, -349, -349, 96, 90, 90, 90, -349, -349, 96,
	90, -300, -298, 90, 90, -388, 256, 300, 302, 96,
	96, 96, 96, 32, 90, -389, 32, 699, 698, 700,
	701, 702, 90, 96, 32, 96, 32, 96, -292, 87,
	-189, -141, 290, 226, 228, 231, 77, 90, 306, 307,
	304, 309, 310, 151, 45, 88, 242, 239, -382, -283,
	244, -283, -292, -299, -298, -290, 242, 379, 90, -143,
	-345, 15, 162, -303, -303, -281, -189, -345, -303, -281,
	-189, -281, -281, -281, -281, -303, -303, -303, -281, -298,
	-298, -189, -189, -189, -189, -189, -189, -189, -309, -282,
	-281, 674, 90, -275, 15, 77, -309, -309, 88, 322,
	416, 417, -307, 319, -80, -292, 90, -15, -11, -23,
	-22, -24, 151, -15, 88, 563, -182, 674, 674, 674,
	674, 674, 674, -143, -143, -143, -143, 586, -206, 119,
	143, 120, 121, -161, -143, -207, -212, -214, 106, 162,
	145, 159, -244, -149, -153, -149, -149, -149, -149, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -310, -292,
	90, 178, -157, -156, 105, -405, -157, 560, 88, -219,
	222, -143, -143, -382, -143, -292, -129, -131, -129, -143,
	-221, -222, 147, -216, -143, -414, -414, 96, 169, -125,
	25, 39, -125, -125, -125, -125, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -125, -292, -292, -118,
	-117, 437, 438, 439, 440, 442, 443, 444, 447, 448,
	452, 453, 436, 454, 441, 446, 449, 450, 451, 445,
	342, -143, -143, -143, -143, -143, -143, -86, -143, 130,
	131, 132, -208, -143, -149, -143, -143, -143, -414, -143,
	-143, -143, -209, -208, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-381, -380, -379, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -208, -208, -208, -208,
	-208, -143, -414, -143, -163, -147, 96, -259, 105, 92,
	-143, -143, -130, -129, -294, -299, -290, -291, -129, -130,
	-130, -129, -129, -143, -143, -143, -143, -143, -143, -143,
	-143, -414, -143, -143, -143, -143, -143, -251, -414, -208,
	88, -398, 415, 416, 672, -301, 275, -300, 26, -209,
	90, 15, -261, 78, -292, -233, -233, 64, 65, 60,
	-129, -134, -414, -36, 26, -253, -292, -189, 63, 90,
	-328, -270, 370, 371, 178, -143, -143, 88, -232, 28,
	29, -189, -295, 169, -299, -189, -262, 275, -189, -167,
	-169, -170, -171, -192, -215, -413, -172, -8, 582, 579,
	15, -182, -183, -191, -298, -268, -311, -267, 88, 414,
	416, 417, 77, 122, -143, -329, 177, -357, -356, -355,
	-338, -340, -341, -342, 89, -329, -334, 376, 375, -323,
	-323, -323, -323, -323, -328, -328, -328, -328, 87, 87,
	-323, -323, -323, -323, -331, 87, -331, -331, -332, -331,
	87, -332, -333, 87, -333, -368, -143, -365, -364, -362,
	-363, 249, 101, 654, 610, 563, 603, 644, 78, -360,
	-232, 96, -414, -141, -284, 244, -366, -363, -382, -382,
	-382, -284, 91, 90, 91, 90, 91, 90, -110, -59,
	-1, 711, 712, 713, 88, 20, -339, -338, -58, 300,
	-371, -372, 275, -367, -361, -347, 137, -346, -347, -347,
	-382, 88, 30, 127, 127, 127, 127, 563, 228, 33,
	-285, 602, 143, 654, 610, -338, -58, 242, 242, -310,
	-310, -310, 90, 90, -280, 707, -182, -137, 292, 151,
	281, 281, 239, 239, 294, -189, 305, 308, 306, 307,
	304, 309, 310, 24, 24, 24, 24, 24, 293, 295,
	297, 283, -189, -189, -283, 77, -184, -189, 27, -298,
	90, 90, -189, -281, -281, -189, -281, -281, -189, -410,
	323, -292, 357, 665, 666, 668, 667, -121, 415, 563,
	23, -122, 23, -413, 119, 120, 121, -207, -149, -153,
	-149, 142, 263, -413, -216, -414, -294, 26, 88, 78,
	-414, 88, 88, -414, -414, 88, 15, -224, -222, 149,
	-143, -414, 88, -414, -414, -208, -143, -143, -143, -143,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-208, 88, 88, 15, -314, 26, -414, -414, -414, -414,
	-414, -223, -414, 15, -414, 78, 88, 162, 88, -414,
	-414, -414, 88, 88, -414, -414, 88, -414, 88, -414,
	-414, -414, -414, -414, -414, 88, -414, 88, -414, -414,
	-414, 88, -414, 88, -414, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, -414, -414, 88, -414, 88, -414, 88, -414,
	-414, 88, -414, 88, -414, 88, -414, 88, 88, -414,
	88, 88, 88, -414, 88, 88, 88, 88, -414, -414,
	-414, -414, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, -414, -414, -414, -414, -414, -414, 88, -93,
	587, -414, -414, 88, -414, 88, -414, -413, 222, -414,
	-414, -414, -414, -414, 88, 88, 88, 88, 88, 88,
	-414, -414, -414, 88, 88, -414, 88, -414, 88, -414,
	-397, 671, 416, -196, -195, -193, 75, 243, 76, -413,
	-300, -414, -157, -259, -260, -259, -201, -292, 96, 105,
	-235, -166, -168, 15, -134, -214, 89, 88, -328, -239,
	-245, -278, -292, 90, 178, -330, 178, -330, 370, 371,
	-231, 222, -197, 16, -200, 33, 58, -11, -413, -413,
	33, 88, -185, -187, -186, -188, 67, 71, 73, 68,
	69, 70, 74, -305, 26, -8, -167, -8, -413, -189,
	-182, -415, 15, 78, -415, 88, 222, -269, -272, 418,
	415, 421, -382, 90, -109, 88, -355, -342, -236, -138,
	41, -335, 377, -328, 570, -328, -337, 90, -337, 96,
	96, 96, 89, -48, -43, -44, 34, 82, -362, -349,
	90, 40, -349, -349, -292, 89, -232, -137, -189, 143,
	77, -366, -366, -366, -298, -2, 710, 716, 137, 87,
	382, 19, -253, 88, 89, -217, 301, 89, -111, -292,
	89, 87, -347, -347, -292, -413, 239, 32, 32, 654,
	610, 602, -58, -217, -216, -382, -329, 709, 708, 89,
	241, 299, -142, 431, -139, 90, 91, -189, -189, -189,
	-189, -189, 231, 228, 405, -406, 311, -406, 284, 242,
	-182, -189, 88, -83, 258, 253, -303, -303, 34, 415,
	683, 681, -143, 142, 263, -161, -153, -149, -312, 178,
	343, 262, 341, 337, 357, 348, 375, 339, 376, 334,
	333, 332, -312, -310, -208, -131, -143, -143, 150, -143,
	148, -143, -414, -414, -414, -414, -414, -228, -143, -143,
	-143, -414, 178, 343, 15, -143, -310, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -379, -143, -208, -143, -208, -143, -143, -143,
	-143, -143, -380, -380, -380, -380, -380, -208, -208, -208,
	-208, -143, -413, -292, -96, -95, -94, 637, 243, -93,
	-163, -96, -163, -130, -294, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -193, -343, -343, -343, -263,
	88, -274, 23, 15, 58, 58, -166, -197, -167, -134,
	-292, -242, 664, -248, 47, -246, -247, 48, -243, 49,
	57, -330, -330, 169, -233, -143, -264, 77, -265, -273,
	-216, -211, -213, -212, -413, -252, -414, -292, -263, -265,
	-169, -170, -170, -169, -170, 67, 67, 67, 72, 67,
	72, 67, -186, -298, -414, -143, -301, 78, -167, -167,
	-191, -298, 169, 415, 419, 420, -355, -404, 119, 143,
	32, 77, 373, 101, -402, 177, 599, 649, 654, 610,
	603, 644, -403, 245, 136, 137, 257, 26, 42, 89,
	88, 89, 88, 89, 89, 88, -286, -285, -44, -43,
	-349, -349, 96, -382, 90, 90, 241, 27, -189, 77,
	77, 77, -112, 714, 96, 87, -3, 82, -143, 87,
	20, -338, -216, -373, -324, -374, -325, -326, -5, -6,
	-350, -115, 58, 101, -62, 45, 240, 694, 695, 127,
	-413, 707, -365, -253, -369, -371, -189, -146, -413, -145,
	-147, -154, 167, 168, 262, 339, 340, -217, -189, -136,
	290, 298, 87, -140, 92, -385, 78, 281, 373, 281,
	90, -407, 312, 90, -407, -189, -83, -48, -189, -281,
	-281, 34, -382, -414, -161, -153, -124, 162, 563, -315,
	569, -323, -323, -323, -333, -323, 329, -323, 329, -323,
	-414, -414, -414, 88, -414, 23, -414, -143, 88, -120,
	460, 88, 88, -414, 87, 87, -143, -414, -414, -414,
	88, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, -414, 88, -414, -414,
	-414, 88, -414, 88, -414, 88, -414, -414, -414, 88,
	-313, 655, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -92, -293, -292, -93, 619, 619, -414,
	-93, -225, 88, -414, -414, 88, -414, 88, 88, -414,
	88, -414, 88, -414, -414, -414, -414, 88, -194, 23,
	-194, -194, -414, -259, -189, -197, -226, 17, -239, 52,
	349, -250, -249, 56, 48, -247, 20, 50, 20, 31,
	-264, 88, 151, 88, -414, -414, 88, 58, 222, -414,
	-197, -180, -179, 77, 78, -181, 77, -179, 67, 67,
	-254, 88, -262, -167, -197, -197, 222, 119, -413, -148,
	-160, -146, 13, 90, 90, -382, -401, 698, 699, 32,
	96, -349, -349, 137, 137, -189, 87, -328, 90, -328,
	96, 96, 32, 83, 84, 85, 32, 79, 80, 81,
	-189, -189, -189, -189, -370, 87, 20, -143, 87, 151,
	89, -253, -253, 277, 162, -349, 692, 283, 283, -349,
	-349, -349, -114, -113, 714, 89, -414, 88, -336, 563,
	566, -143, -155, -155, -254, 89, -378, 563, -384, -292,
	-292, -292, -292, 96, 98, -414, 561, 74, 564, -414,
	-328, -143, -143, -143, -233, 90, -143, -143, 96, 96,
	-414, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -208, -143, -414, -177, -176, -178, 675, 119, 32,
	-312, -414, -210, 275, -99, -98, -97, 15, -414, -143,
	-143, -143, -143, -143, -143, -143, -413, 67, 19, 17,
	-413, -413, -301, -226, -227, 18, 20, -240, 54, -238,
	53, -238, -249, 20, 20, 90, 20, 90, 137, -273,
	-143, -213, 58, -11, -292, -211, -292, -228, -143, 87,
	-143, -157, -197, -197, -143, -203, 484, 486, 487, 488,
	485, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 489, 463, 108, 110, 109, 464, 465, 466, 343,
	511, 512, 506, 509, 510, 508, 507, 358, 359, 467,
	529, 530, 534, 533, 531, 532, 535, 538, 539, 540,
	541, 542, 543, 545, 544, 536, 537, 514, 513, 515,
	516, 517, 518, 519, 520, 522, 521, 523, 524, 525,
	526, 527, 528, 546, 547, 548, 549, 550, 552, 551,
	556, 555, 553, 554, 558, 557, 468, 469, 111, 112,
	113, 114, 115, 116, 117, 470, 473, 471, 474, 475,
	476, 481, 482, 477, 478, 479, 480, 483, 369, 367,
	368, 364, 363, 362, 500, 501, 502, 503, 504, 505,
	656, 657, 658, 659, 660, 661, 662, 663, 90, 90,
	87, -143, 89, 89, -254, -369, -59, 89, -255, -253,
	96, 89, 278, -212, -413, 90, -349, -349, -349, 96,
	96, -300, -414, 88, -292, -403, -371, 567, 567, -414,
	26, -377, -376, -294, 87, 78, 63, 562, 565, -414,
	-414, 88, -414, -414, -414, 89, 89, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, 88,
	-414, -176, -178, -414, 77, -157, -228, 20, -96, 300,
	302, -96, -414, 88, -414, -414, 88, -414, 88, -414,
	-414, -256, -414, -292, 245, 20, 20, -256, -256, -196,
	-227, -106, -105, -104, 593, -143, -208, -241, 55, 77,
	122, 90, 90, 90, 13, -211, 222, -233, -253, -174,
	382, -228, -414, -253, 89, 26, 89, 716, 137, 89,
	-212, -123, -413, 274, -300, 90, 90, -113, -116, -11,
	88, 151, -253, -189, 63, -143, -208, -414, 77, 574,
	675, -91, -90, -87, 686, 712, -208, -93, -93, -143,
	-143, -143, 88, -414, -414, -414, -106, 88, -103, -102,
	-292, 77, 122, -265, -292, 89, -414, -413, -233, 89,
	-237, -11, 87, -3, 274, -324, -374, -325, -326, -5,
	-6, -350, -81, 563, -376, -354, -298, -294, 90, 96,
	89, 563, -414, -414, -89, 145, 684, 652, -144, -155,
	-152, 221, -414, 88, -414, 88, -414, 88, -292, 245,
	-104, 88, 26, -301, -175, -173, -292, 616, -394, -393,
	559, -404, -400, 119, 143, 101, -402, 654, 610, 128,
	129, -81, -143, 87, -414, -82, 289, 671, 222, -385,
	564, -89, 685, 630, 605, 630, 605, -143, -143, -143,
	-102, -413, -414, 88, 23, -316, -61, 627, -391, -392,
	77, -395, 388, 626, 647, 119, 90, 89, -253, 250,
	-299, -378, 565, 142, -414, 88, -414, 88, -414, -92,
	-173, 623, -329, -157, -392, 77, -391, 77, 14, 13,
	-4, 715, 89, 291, -89, -143, -143, -414, -60, 27,
	-174, -390, 258, 253, 256, 33, -390, 96, -4, -414,
	-414, 627, 252, 32, 119, -157, -177, -176, -176,
}

var yyDef = [...]int{
	877, -2, -2, 879, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	0, 72, 74, 75, 877, 877, 877, 0, 877, 0,
	0, 877, -2, -2, 877, 1583, 0, 877, 0, 0,
	0, -2, 792, 798, 0, 807, -2, 0, 0, 877,
	877, 2188, 2188, 872, 0, 0, 0, 0, 0, 877,
	877, 877, 877, 1449, 52, 877, 0, 87, 88, 827,
	828, 829, 67, 0, 2186, 878, 1, 3, 0, 73,
	77, 0, 0, 0, 60, 1458, 0, 80, 0, 0,
	881, 0, 0, 1566, 877, 877, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	603, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1568, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1476, 167, 1584, 1581, 1582, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 0, 1560, 0, 716, 980, 0,
	0, 781, 781, 0, 781, 781, 781, 781, 0, 0,
	0, 730, 0, 0, 0, 0, 778, 0, 746, 747,
	0, 778, 0, 753, 784, 0, 0, 759, 781, 781,
	762, 2189, 0, 2189, 2189, 1551, 0, 775, 773, 787,
	788, 42, 791, 794, 795, 796, 797, 800, 0, 811,
	814, 1577, 1578, 0, 816, 823, 840, 841, 0, 873,
	874, 47, 1129, 0, 1002, 0, 1008, -2, 1019, 1034,
	1035, 1036, 1037, 1038, 1040, 1041, 1042, 0, 0, 0,
	0, 1047, 1048, 0, 0, 0, 0, 0, 1110, 1056,
	0, 0, 0, 0, 1422, 0, 0, 1384, 1384, 1144,
	1384, 1384, 1386, 1386, 1386, 1788, 1924, 1932, 2099, 1749,
	1755, 1756, 1757, 2046, 2047, 2048, 2049, 2134, 2135, 2139,
	1848, 0, 0, 0, 2185, 1885, 1893, 1894, 1918, 2018,
	2120, 1767, 1913, 1982, 1845, 1867, 1868, 2000, 2001, 1889,
	1890, 1871, 2052, 2054, 2070, 2071, 2056, 2058, 2067, 2073,
	2078, 2057, 2069, 2074, 2087, 2091, 2094, 2095, 2096, 2064,
	2062, 2075, 2079, 2081, 2083, 2089, 2092, 2065, 2063, 2076,
	2080, 2082, 2084, 2090, 2093, 2051, 2055, 2059, 2068, 2086,
	2066, 2085, 2060, 2072, 2077, 2088, 2061, 2053, 1883, 1886,
	1874, 1875, 1877, 1879, 1884, 1891, 1897, 1876, 1896, 1895,
	0, 1872, 1873, 1878, 1888, 1892, 1880, 1881, 1882, 1887,
	1898, 1938, 1937, 1936, 1981, 1909, 1980, 0, 0, 0,
	0, 0, 1323, 1324, 1325, 1326, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 1435, 1436, 46, 1128, 1547,
	1386, 1386, 1386, 1386, 1386, 1386, 1070, 1071, 1072, 1073,
	1074, 1098, 1099, 1105, 1106, 1995, 1996, 1997, 1998, 1829,
	2129, 1837, 1838, 1977, 1978, 1850, 1851, 2160, 2161, -2,
	-2, -2, 234, 235, 236, 237, 238, 239, 240, 241,
	0, 1792, 2110, 2111, 230, 0, 0, 298, 299, 295,
	296, 297, 1112, 1113, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284, 285, 286,
	287, 288, 289, 290, 291, 292, 2188, 0, 850, 0,
	0, 0, 0, 0, 1458, 0, 1450, 1449, 65, 0,
	877, -2, 0, 0, 0, 0, 49, 0, 54, 937,
	880, 39, 98, 79, 78, 1498, 0, 0, 0, 61,
	1459, 69, 71, 1460, 0, 882, 883, 0, 913, 917,
	0, 0, 0, 1567, 1566, 1566, 104, 0, 0, 105,
	125, 126, 127, 0, 0, 111, 112, 1553, 1554, 45,
	0, 0, 179, 180, 0, 43, 428, 0, 175, 0,
	421, 360, 0, 1476, 0, 0, 0, 0, 0, 877,
	0, 1561, 156, 157, 164, 165, 166, 401, 401, 401,
	575, 0, 0, 167, 167, 533, 534, 535, 0, 0,
	-2, 426, 0, 513, 0, 0, 415, 415, 419, 417,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 402, 0, 573, 574, 464, 0, 0,
	0, 0, 0, 0, 0, 0, 1569, 1570, 0, 550,
	551, 0, 0, 0, 401, 401, 0, 0, 0, 0,
	401, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 1489, 0, 0, 0, -2, 0, 708, 0, 0,
	0, 1562, 1562, 0, 715, 0, 717, 0, 720, 0,
	0, 721, 0, 778, 778, 776, 777, 723, 724, 725,
	726, 781, 0, 0, 410, 411, 412, 778, 781, 0,
	781, 781, 781, 781, 778, 778, 778, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2189, 784, 781,
	0, 754, 0, 755, 756, 757, 760, 761, 763, 2190,
	2191, 1579, 1580, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 2189, 2189, 767, 771, 1552, 793,
	799, 801, 802, 0, 0, 812, 815, 834, 51, 1836,
	822, 51, 824, 825, 826, 852, 853, 858, 0, 0,
	0, 0, 864, 865, 866, 0, 0, 869, 870, 871,
	0, 0, 0, 0, 0, 1000, 0, 0, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1020, 1021, 0, 0, 0, 1043, 1044,
	1045, 1046, 1049, 0, 1061, 0, 1063, 1431, -2, 0,
	0, 0, 1054, 1055, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 1142, 0, 1143, 1145, 1146, 1147,
	0, 1148, 1149, 887, 887, 887, 887, 887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 887, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	897, 0, 0, 897, 897, 0, 0, 222, 223, 224,
	225, 226, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 300, 248, 249, 250, 1128, 0, 0,
	0, 48, 842, 843, 0, 963, 1572, 0, 0, 893,
	0, 59, 68, 70, 1458, 63, 1458, 0, 899, 0,
	0, -2, -2, 900, 906, 907, 908, 909, 910, 56,
	2187, 57, 0, 76, 0, 50, 0, 0, 0, 0,
	0, 374, 1501, 0, 0, 1451, 1452, 1455, 0, 914,
	1930, 918, 0, 920, 921, 0, 0, 102, 0, 979,
	0, 0, 0, 113, 0, 115, 116, 0, 0, 0,
	385, 1555, 1556, 1557, -2, 408, 0, 385, 369, 308,
	309, 310, 360, 312, 360, 360, 360, 360, 374, 374,
	374, 374, 343, 344, 345, 346, 347, 0, 0, 329,
	360, 360, 360, 360, 350, 351, 352, 353, 354, 355,
	356, 357, 313, 314, 315, 316, 317, 318, 319, 320,
	321, 362, 362, 362, 362, 362, 366, 366, 0, 44,
	0, 389, 0, 1455, 0, 0, 1489, 1564, 1574, 0,
	0, 0, 1564, 134, 0, 0, 0, 576, 614, 527,
	564, 577, 0, 530, 531, -2, 0, 0, 512, 0,
	514, 0, 409, 0, -2, 0, 419, 0, 415, 419,
	416, 419, 407, 420, 554, 555, 556, 0, 558, 559,
	644, 949, 0, 0, 0, 0, 0, 650, 651, 652,
	0, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	0, 0, 0, 514, 0, 561, 0, 0, 465, 466,
	467, 0, 0, 470, 471, 472, 473, 0, 0, 476,
	477, 478, 966, 967, 479, 480, 505, 506, 507, 481,
	482, 483, 484, 485, 486, 487, 499, 500, 501, 502,
	503, 504, 488, 489, 490, 491, 492, 493, 496, 0,
	149, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 896, 981, 1585, 1586, 0, 0, 782, 783,
	0, 413, 414, 781, 781, 727, 768, 0, 781, 731,
	769, 732, 734, 733, 735, 748, 749, 781, 738, 779,
	780, 739, 740, 741, 742, 743, 744, 745, 764, 750,
	751, 752, 785, 0, 789, 790, 765, 766, 0, 0,
	805, 806, 0, 813, 837, 835, 836, 838, 830, 831,
	832, 833, 0, 839, 0, 0, 855, 860, 861, 862,
	863, 875, 868, 1130, 997, 998, 999, 0, 1001, 1005,
	0, 1114, 1116, 1007, 1003, 1009, 1125, 1126, 1127, 0,
	0, 0, 0, 0, 1013, 1017, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1399,
	1400, 1401, 1058, 301, 302, 0, 1059, 0, 0, 0,
	0, 0, 0, 0, 1129, 1060, 0, 911, 0, 0,
	1429, 1426, 0, 0, 0, 1385, 1387, 0, 0, 0,
	888, 889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1402, 0, 0, 0, 0, 0, 1422, 0, 1065,
	1066, 1067, 0, 0, 0, 0, 0, 0, 1187, 0,
	0, 0, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 1328, 1329, 1330, 41,
	0, 0, 0, 898, 1433, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 845, 846, 848, 0, 983, 0, 964, 0, 0,
	851, 0, 892, 0, 895, 62, 64, 904, 905, 0,
	922, 901, 58, 53, 0, 0, 941, 99, 1499, 374,
	1521, 0, 383, 383, 380, 1461, 1462, 0, 1454, 1456,
	1457, 81, 919, 915, 0, 995, 0, 0, 978, 0,
	925, 927, 928, 929, 961, 0, 932, 933, 0, 0,
	0, 0, 0, 100, 980, 106, 0, 114, 0, 0,
	119, 120, 107, 108, 109, 110, 0, 603, -2, 460,
	181, 183, 184, 185, 176, -2, 372, 370, 371, 311,
	374, 374, 337, 338, 339, 340, 341, 342, 0, 0,
	330, 331, 332, 333, 322, 0, 323, 324, 325, 364,
	0, 326, 327, 0, 328, 427, 0, 1463, 390, 391,
	393, 401, 0, 396, 397, 0, 401, 401, 0, 422,
	423, 0, 1455, 1480, 0, 0, 0, 1575, 1574, 1574,
	1574, 0, 169, 170, 171, 172, 173, 174, 639, 0,
	0, 615, 637, 638, 167, 0, 0, 177, 516, 515,
	0, 671, 0, 425, 0, 0, 419, 419, 404, 405,
	557, 0, 0, 646, 647, 648, 649, 0, 0, 0,
	543, 454, 0, 544, 545, 514, 516, 0, 0, 385,
	468, 469, 474, 475, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 591, 592, 595,
	597, 518, 601, 594, 596, 598, 518, 602, 1477, 1478,
	1479, 0, 0, 709, 0, 0, 451, 96, 1563, 714,
	718, 719, 778, 737, 770, 778, 729, 736, 758, 803,
	804, 809, 817, 818, 819, 820, 821, 859, 0, 0,
	0, 867, 0, 0, 1006, 1115, 1117, 1010, 0, 1014,
	1018, 0, 0, 0, 1064, 1062, 1433, 0, 0, 0,
	1111, 0, 0, 1133, 1134, 0, 0, 0, 1427, 0,
	0, 1140, 0, 1388, 1150, 0, 0, 0, 0, 0,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1449, 0, 0, 0, 0, 0, 1171, 1172, 1173, 1174,
	1175, 0, 1177, 0, 1178, 0, 0, 0, 0, 1185,
	1186, 1188, 0, 0, 1191, 1192, 0, 1194, 0, 1196,
	1197, 1198, 1199, 1200, 1201, 0, 1203, 0, 1205, 1206,
	1207, 0, 1209, 0, 1211, 1212, 0, 1214, 0, 1216,
	0, 1219, 0, 1222, 0, 1225, 0, 1228, 0, 1231,
	0, 1234, 0, 1237, 0, 1240, 0, 1243, 0, 1246,
	0, 1249, 0, 1252, 0, 1255, 0, 1258, 0, 1261,
	0, 1264, 1265, 1266, 0, 1268, 0, 1270, 0, 1273,
	1274, 0, 1276, 0, 1279, 0, 1282, 0, 0, 1283,
	0, 0, 0, 1287, 0, 0, 0, 0, 1296, 1297,
	1298, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 1311, 1312, 1313, 1314, 1315, 0, 1317,
	0, 1093, 0, 0, 1093, 0, 1131, 897, 0, 1389,
	1390, 1391, 1392, 1393, 0, 0, 0, 0, 0, 0,
	1350, 1351, 1353, 0, 0, 1356, 0, 1358, 0, 1546,
	844, 847, 849, 935, 984, 985, 0, 0, 0, 0,
	965, 1571, 890, 891, 894, 943, 0, 1437, 0, 0,
	922, 995, 923, 0, 902, 55, 938, 0, 1503, 1502,
	1515, 1528, 383, 383, 377, 378, 384, 379, 381, 382,
	1453, 0, 1458, 0, 1539, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 971,
	0, 0, 0, 0, 962, 933, 0, 934, 0, -2,
	0, 0, 94, 95, 0, 0, 0, 117, 118, 0,
	0, 124, 386, 387, 158, 167, 462, 182, 435, 0,
	0, 307, 373, 334, 335, 336, 0, 358, 0, 0,
	0, 0, 456, 130, 1467, 1466, 401, 401, 392, 0,
	395, 0, 0, 0, 1576, 361, 424, 0, 148, 0,
	0, 0, 0, 0, 154, 609, 0, 0, 616, 0,
	0, 0, 525, 0, 536, 537, 0, 643, -2, 705,
	389, 0, 403, 406, 950, 0, 0, 538, 0, 541,
	542, 455, 516, 547, 548, 562, 549, 497, 498, 495,
	0, 0, 1490, 1491, 1496, 1494, 1495, 135, 583, 585,
	584, 588, 0, 0, 0, 520, 0, 520, 581, 0,
	451, 1463, 0, 713, 452, 453, 781, 781, 854, 0,
	857, 0, 0, 0, 0, 1011, 1015, 1394, 1420, 360,
	360, 1407, 360, 366, 1410, 360, 1412, 360, 1415, 360,
	1418, 1419, 0, 0, 0, 912, 0, 0, 1139, 1430,
	0, 0, 1151, 1152, 1153, 1154, 1155, 1424, 0, 0,
	0, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 147, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1088, 1092, 0, 1094, 1095, 0, 0, 1319,
	0, 0, 1331, 0, 1434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 986, 991, 991, 991, 0,
	0, 0, 1558, 1559, 1438, 1439, 995, 1440, 924, 903,
	942, 1521, 0, 1514, 0, -2, 1523, 0, 0, 0,
	1529, 375, 376, 916, 82, 996, 85, 0, 1539, 1548,
	0, 1530, 1541, 1543, 0, 0, 0, 1535, 0, 995,
	926, 957, 959, 0, 954, 969, 970, 972, 0, 974,
	0, 976, 977, 937, 931, 0, 102, 0, 995, 995,
	101, 0, 982, 121, 122, 123, 461, 186, 191, 0,
	0, 0, 196, 0, 198, 0, 0, 0, 203, 204,
	401, 401, 436, 0, 304, 306, 0, 0, 189, 374,
	0, 374, 0, 365, 367, 0, 437, 457, 1464, 1465,
	0, 0, 394, 398, 399, 400, 0, 1565, 150, 0,
	0, 0, 612, 0, 640, 0, 0, 0, 0, 0,
	0, 178, 517, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 0, 401, 0, 0, 0, 401, 401, 401,
	0, 697, 388, 0, 0, 668, 665, 539, 0, 228,
	229, 231, 0, 0, 0, 0, 0, 546, 937, 1481,
	1482, 1483, 0, 1493, 1497, 138, 0, 0, 0, 0,
	593, 599, 0, 519, 600, 710, 711, 712, 97, 722,
	728, 856, 876, 1004, 1012, 1016, 0, 0, 0, 0,
	1421, 1405, 374, 1408, 1409, 1411, 1413, 1414, 1416, 1417,
	1052, 1053, 1057, 0, 1136, 0, 1138, 1428, 0, 1458,
	0, 0, 0, 1169, 0, 0, 0, 1180, 1179, 1181,
	0, 1183, 1184, 1189, 1190, 1193, 1195, 1202, 1204, 1208,
	1210, 1213, 1215, 1217, 0, 1220, 0, 1223, 0, 1226,
	0, 1229, 0, 1232, 0, 1235, 0, 1238, 0, 1241,
	0, 1244, 0, 1247, 0, 1250, 0, 1253, 0, 1256,
	0, 1259, 0, 1262, 0, 1267, 1269, 0, 1272, 1275,
	1277, 0, 1280, 0, 1284, 0, 1286, 1288, 1289, 0,
	0, 0, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1316, 0, 1086, 1089, 1318, 1096, 1097, 1102,
	1321, 0, 0, 1132, 1333, 0, 1338, 0, 0, 1344,
	0, 1348, 0, 1354, 1355, 1357, 1359, 0, 0, 0,
	0, 0, 963, 944, 66, 1440, 1442, 0, 1508, 1506,
	1506, 1516, 1517, 0, 0, 1524, 0, 0, 0, 0,
	86, 0, 0, 0, 1544, 0, 0, 0, 0, 103,
	1449, 951, 958, 0, 0, 952, 0, 953, 973, 975,
	930, 0, 995, 995, 92, 93, 0, 192, 0, 194,
	220, 221, 0, 197, 199, 200, 201, 207, 208, 209,
	202, 0, 0, 303, 305, 0, 0, 348, 359, 349,
	0, 0, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	937, 151, 152, 153, 604, 0, 614, 0, 939, 0,
	607, 0, 528, 0, 0, 0, 401, 401, 401, 0,
	0, 0, 0, 682, 0, 0, 645, 0, 653, 0,
	0, 0, 232, 233, 0, 1492, 582, 0, 136, 137,
	0, 0, 587, 521, 522, 1050, 0, 0, 0, 1051,
	1406, 0, 0, 0, 0, 1425, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 0, 0, 0, 634, 635, 0,
	1362, 1091, 1449, 0, 1093, 1103, 1104, 0, 1093, 1332,
	0, 0, 0, 0, 0, 0, 0, 992, 0, 0,
	0, 0, 983, 1442, 1447, 0, 0, 1511, 0, 1504,
	1507, 1505, 1518, 0, 0, 1525, 0, 1527, 0, 1549,
	1550, 1542, 0, 1534, 1537, 1533, 1536, 1458, 955, 0,
	960, 0, 1449, 91, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 206,
	0, 0, 363, 368, 0, 0, 0, 605, 0, 940,
	617, 608, 0, 695, 0, 699, 0, 0, 0, 702,
	703, 704, 681, 0, 685, 429, 669, 666, 667, 540,
	0, 139, 140, 0, 0, 0, 1395, 0, 1398, 1135,
	1137, 0, 1166, 1167, 1168, 1403, 1404, 1182, 1218, 1221,
	1224, 1227, 1230, 1233, 1236, 1239, 1242, 1245, 1248, 1251,
	1254, 1257, 1260, 1263, 1271, 1278, 1281, 1285, 1290, 0,
	1293, 0, 0, 1294, 0, 636, 1082, 0, 0, 1100,
	1101, 0, 1334, 0, 1339, 1340, 0, 1345, 0, 1349,
	1360, 0, 988, 945, 946, 993, 994, 0, 0, 936,
	1447, 84, 1448, 1445, 0, 1443, 1441, 1500, 0, 1509,
	1510, 1519, 1520, 1526, 0, 1532, 0, 89, 0, 0,
	0, 1458, 193, 0, 212, 0, 613, 0, 616, 606,
	693, 694, 0, 706, 698, 700, 701, 683, -2, 1484,
	0, 0, 0, 589, 1396, 0, 0, 1295, 0, 632,
	633, 1090, 1083, 0, 1068, 1069, 1087, 1320, 1322, 0,
	0, 0, 0, 987, 989, 990, 83, 0, 1444, 1108,
	0, 1512, 1513, 1540, 1538, 956, 963, 0, 90, 442,
	435, 1484, 0, 0, 0, 686, 687, 688, 689, 690,
	691, 692, 579, 1486, 141, 142, 0, 509, 510, 511,
	135, 0, 1141, 1291, 1084, 0, 0, 0, 0, 1080,
	1081, 0, 1335, 0, 1341, 0, 1346, 0, 947, 948,
	1446, 0, 0, 618, 0, 620, 0, -2, 430, 443,
	0, 187, 213, 214, 0, 0, 217, 218, 219, 210,
	211, 131, 0, 0, 707, 0, 1487, 1488, 0, 138,
	0, 0, 1075, 1076, 1077, 1078, 1079, 0, 0, 0,
	1109, 1088, 619, 0, 0, 385, 0, 629, 431, 432,
	0, 438, 439, 440, 441, 215, 216, 641, 0, 0,
	508, 586, 1397, 0, 1336, 0, 1342, 0, 1347, 0,
	621, 622, 630, 0, 433, 0, 434, 0, 0, 0,
	610, 0, 641, 1485, 1085, 0, 0, 1107, 0, 631,
	627, 444, 446, 447, 0, 0, 445, 642, 611, 1337,
	1343, 0, 448, 449, 450, 623, 624, 625, 626,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 172, 164, 3,
	87, 89, 169, 167, 88, 168, 222, 170, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 717,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 174, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 175,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 165, 166, 171, 173, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:653
		{
			yyLOCAL = &ChecksumExpr{Tables: yyDollar[3].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:658
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:664
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:670
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:675
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:679
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:685
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:689
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:695
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:707
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:711
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:720
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:730
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:736
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:810
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:865
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:870
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:889
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:907
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:937
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:941
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:947
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:953
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:971
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:975
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:985
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:995
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1008
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1014
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1020
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1024
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1030
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1034
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1038
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1042
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1048
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1052
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1056
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1062
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1066
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1072
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1082
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1086
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1090
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1114
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1118
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1122
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1128
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1134
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1141
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1150
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1154
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1170
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1185
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1190
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1196
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1216
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1222
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1238
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1245
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1252
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1262
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1267
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1274
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1281
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1292
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1303
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1309
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1313
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1317
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1335
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1345
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1349
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1355
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1359
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1375
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1379
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1385
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1395
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1400
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1405
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1409
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1433
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1442
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1468
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1523
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1528
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1550
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1554
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1558
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1564
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1568
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1573
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1577
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1582
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1604
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1637
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1655
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf8Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Utf8Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1925
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1949
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1955
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1959
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1963
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1967
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2103
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2207
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2216
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2221
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2225
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2238
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2245
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2263
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2271
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2280
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2285
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2289
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2327
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2331
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2350
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2359
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2365
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2369
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2375
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2379
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2384
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2388
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2392
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2396
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2400
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2404
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2410
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2420
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2424
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2428
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2432
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2436
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2455
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = "key"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2503
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2507
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2513
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2517
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2523
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2527
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2533
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2537
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2543
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2549
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2553
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2557
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2561
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2565
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2574
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2580
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2586
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2592
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2596
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2600
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2605
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2609
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2615
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2621
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2627
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2631
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2635
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2639
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2643
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2662
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2671
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2684
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2690
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2694
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2704
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2714
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2718
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2722
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2726
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2730
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2734
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2738
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2742
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2746
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2750
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2754
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2758
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2762
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2778
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2782
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2786
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2802
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2806
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2810
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2814
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2818
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2822
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2826
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2830
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2834
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2889
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2893
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2902
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2920
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2924
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2933
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2937
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2941
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2949
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3097
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3101
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3123
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3127
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3131
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3310
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3338
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3364
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3373
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3381
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3390
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3397
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3409
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3418
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3433
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3447
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3451
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3457
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3463
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3469
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3479
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3483
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3489
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3495
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3501
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3507
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3513
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3517
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3521
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3525
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3531
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3537
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3543
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3547
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3551
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3557
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3561
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3566
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3570
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3575
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3579
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3585
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3589
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3593
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3597
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3601
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3605
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3609
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3613
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3617
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3621
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3625
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3629
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3633
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3637
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3641
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3645
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3649
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3653
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3657
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3661
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3665
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3669
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3688
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3703
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3707
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3712
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3717
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3722
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3727
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3732
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3738
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3744
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3755
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3761
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3765
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3771
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3776
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3780
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3785
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3790
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3795
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3800
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3806
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3812
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3819
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3826
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3833
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3845
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3851
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3857
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3863
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3869
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3875
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3881
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3893
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3915
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3919
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = "extended "
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4225
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4235
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4239
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4249
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4255
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4283
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4287
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4326
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4332
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4342
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4346
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4350
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4367
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4372
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4374
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4377
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4394
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4398
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4402
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4406
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4410
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4414
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4418
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4423
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4427
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4431
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4435
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4455
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4467
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4486
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4490
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4506
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4518
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4528
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4534
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4538
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4542
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4546
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4552
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4564
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4568
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4572
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4576
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4580
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4584
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4600
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4604
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4608
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4612
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4632
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4640
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4649
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4653
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4657
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4671
		{
			setAllowComments(yylex, true)
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4675
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4681
		{
			yyVAL.strs = nil
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4691
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4695
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = SQLCacheStr
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4721
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4725
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4731
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4735
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4745
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4754
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4764
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4773
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4778
		{
			yyVAL.strs = nil
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4786
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4790
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4794
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4830
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4840
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4844
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4848
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4852
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4857
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4877
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4881
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4887
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4893
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4907
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4911
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4915
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4919
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4925
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4929
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4935
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4939
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4948
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4957
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4963
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4973
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4977
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4983
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4987
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4991
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4995
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5001
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5005
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5018
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5022
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5026
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5030
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5036
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5038
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5042
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5048
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5050
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5053
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5058
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5066
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5079
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5083
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5087
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5093
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5099
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5103
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5107
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5111
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5121
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5131
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5145
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5160
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5166
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5170
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5176
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5180
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5184
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5188
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5193
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5197
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5201
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5205
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5499
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5503
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5509
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5513
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5519
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5523
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5527
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5533
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5537
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5544
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5548
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5552
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5556
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5560
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5566
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5570
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5574
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5578
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5582
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5601
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5607
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5611
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5620
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5625
		{
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5634
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5640
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5644
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5656
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5662
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5666
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5672
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5676
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5682
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5686
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5698
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5704
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5708
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5714
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5720
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5724
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = ""
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5740
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5744
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5751
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5755
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5759
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5763
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5769
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5773
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5777
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5781
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5785
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5789
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5793
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5799
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5803
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5807
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5814
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5820
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5824
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6778
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6784
		{
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6786
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6790
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6794
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6798
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6802
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6806
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6810
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6814
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6818
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6822
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6826
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6832
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6836
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6840
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6844
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6848
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6852
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6856
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6860
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6864
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6874
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6878
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6882
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6904
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6908
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6914
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6918
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6922
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6926
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6930
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6936
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6940
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6944
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6954
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6958
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6964
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6968
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6972
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6976
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6980
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6990
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6994
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6998
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7002
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7006
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7010
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7014
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7018
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7022
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7028
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7032
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7041
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7046
		{
			yyVAL.str = string("")
		}
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7050
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7056
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7060
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7066
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7075
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7081
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7085
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7089
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7093
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7099
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7103
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7109
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7118
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7122
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7131
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7146
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7152
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7156
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7165
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7174
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7180
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7186
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7190
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7196
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7201
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7205
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7209
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7218
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7224
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7228
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7232
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7241
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7245
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7249
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7253
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7260
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7264
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7268
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7272
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7278
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7282
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7286
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7290
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7295
		{
			yyVAL.str = ""
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7299
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7303
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7307
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7312
		{
			yyVAL.str = ""
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7316
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7326
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7331
		{
			yyVAL.str = ""
		}
	case 1485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7335
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7340
		{
			yyVAL.str = "cascaded"
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7357
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7363
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7369
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7375
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7384
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7388
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7393
		{
			yyVAL.str = ""
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7397
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7403
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7407
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7413
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7417
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7421
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7426
		{
			yyVAL.str = ""
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7430
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7434
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7439
		{
			yyVAL.str = ""
		}
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7443
		{
			yyVAL.str = " header"
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7448
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7452
		{
			yyVAL.str = " manifest on"
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7456
		{
			yyVAL.str = " manifest off"
		}
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7461
		{
			yyVAL.str = ""
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7465
		{
			yyVAL.str = " overwrite on"
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7469
		{
			yyVAL.str = " overwrite off"
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7475
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7480
		{
			yyVAL.str = ""
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7484
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7490
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7494
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7500
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7504
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7509
		{
			yyVAL.str = ""
		}
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7513
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7519
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7533
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7537
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7542
		{
			yyVAL.str = ""
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7546
		{
			yyVAL.str = " optionally"
		}
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7559
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7563
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7567
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7571
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7575
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7581
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7585
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7589
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7593
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7602
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7608
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7612
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7618
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7622
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7628
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7632
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7637
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7647
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7651
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7657
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7664
		{
			yyVAL.str = "charset"
		}
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7674
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7678
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7682
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7691
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7693
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7706
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7711
		{
			yyVAL.empty = struct{}{}
		}
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7713
		{
			yyVAL.empty = struct{}{}
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7715
		{
			yyVAL.empty = struct{}{}
		}
	case 1571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7719
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7728
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7735
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7739
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7745
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7749
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7756
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7762
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7766
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7772
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7776
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7783
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8409
		{
		}
	case 2187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8414
		{
		}
	case 2188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8418
		{
			skipToEnd(yylex)
		}
	case 2189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8423
		{
			skipToEnd(yylex)
		}
	case 2190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8427
		{
			skipToEnd(yylex)
		}
	case 2191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8431
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
