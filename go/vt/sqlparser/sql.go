// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const ASSIGNMENT_OPT = 57497
const SHIFT_LEFT = 57498
const SHIFT_RIGHT = 57499
const DIV = 57500
const MOD = 57501
const UNARY = 57502
const COLLATE = 57503
const BINARY = 57504
const UNDERSCORE_ARMSCII8 = 57505
const UNDERSCORE_ASCII = 57506
const UNDERSCORE_BIG5 = 57507
const UNDERSCORE_BINARY = 57508
const UNDERSCORE_CP1250 = 57509
const UNDERSCORE_CP1251 = 57510
const UNDERSCORE_CP1256 = 57511
const UNDERSCORE_CP1257 = 57512
const UNDERSCORE_CP850 = 57513
const UNDERSCORE_CP852 = 57514
const UNDERSCORE_CP866 = 57515
const UNDERSCORE_CP932 = 57516
const UNDERSCORE_DEC8 = 57517
const UNDERSCORE_EUCJPMS = 57518
const UNDERSCORE_EUCKR = 57519
const UNDERSCORE_GB18030 = 57520
const UNDERSCORE_GB2312 = 57521
const UNDERSCORE_GBK = 57522
const UNDERSCORE_GEOSTD8 = 57523
const UNDERSCORE_GREEK = 57524
const UNDERSCORE_HEBREW = 57525
const UNDERSCORE_HP8 = 57526
const UNDERSCORE_KEYBCS2 = 57527
const UNDERSCORE_KOI8R = 57528
const UNDERSCORE_KOI8U = 57529
const UNDERSCORE_LATIN1 = 57530
const UNDERSCORE_LATIN2 = 57531
const UNDERSCORE_LATIN5 = 57532
const UNDERSCORE_LATIN7 = 57533
const UNDERSCORE_MACCE = 57534
const UNDERSCORE_MACROMAN = 57535
const UNDERSCORE_SJIS = 57536
const UNDERSCORE_SWE7 = 57537
const UNDERSCORE_TIS620 = 57538
const UNDERSCORE_UCS2 = 57539
const UNDERSCORE_UJIS = 57540
const UNDERSCORE_UTF16 = 57541
const UNDERSCORE_UTF16LE = 57542
const UNDERSCORE_UTF32 = 57543
const UNDERSCORE_UTF8 = 57544
const UNDERSCORE_UTF8MB4 = 57545
const UNDERSCORE_UTF8MB3 = 57546
const INTERVAL = 57547
const WINDOW_EXPR = 57548
const JSON_EXTRACT_OP = 57549
const JSON_UNQUOTE_EXTRACT_OP = 57550
const CREATE = 57551
const ALTER = 57552
const DROP = 57553
const RENAME = 57554
const ANALYZE = 57555
const ADD = 57556
const FLUSH = 57557
const CHANGE = 57558
const MODIFY = 57559
const DEALLOCATE = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const FLOAT4_TYPE = 57660
const FLOAT8_TYPE = 57661
const DECIMAL_TYPE = 57662
const NUMERIC = 57663
const TIME = 57664
const TIMESTAMP = 57665
const DATETIME = 57666
const YEAR = 57667
const CHAR = 57668
const VARCHAR = 57669
const BOOL = 57670
const CHARACTER = 57671
const VARBINARY = 57672
const NCHAR = 57673
const TEXT = 57674
const TINYTEXT = 57675
const MEDIUMTEXT = 57676
const LONGTEXT = 57677
const BLOB = 57678
const TINYBLOB = 57679
const MEDIUMBLOB = 57680
const LONGBLOB = 57681
const JSON = 57682
const JSON_SCHEMA_VALID = 57683
const JSON_SCHEMA_VALIDATION_REPORT = 57684
const ENUM = 57685
const GEOMETRY = 57686
const POINT = 57687
const LINESTRING = 57688
const POLYGON = 57689
const GEOMCOLLECTION = 57690
const GEOMETRYCOLLECTION = 57691
const MULTIPOINT = 57692
const MULTILINESTRING = 57693
const MULTIPOLYGON = 57694
const ASCII = 57695
const UNICODE = 57696
const NULLX = 57697
const AUTO_INCREMENT = 57698
const APPROXNUM = 57699
const SIGNED = 57700
const UNSIGNED = 57701
const ZEROFILL = 57702
const PURGE = 57703
const BEFORE = 57704
const CODE = 57705
const COLLATION = 57706
const COLUMNS = 57707
const DATABASES = 57708
const ENGINES = 57709
const EVENT = 57710
const EXTENDED = 57711
const FIELDS = 57712
const FULL = 57713
const FUNCTION = 57714
const GTID_EXECUTED = 57715
const KEYSPACES = 57716
const OPEN = 57717
const PLUGINS = 57718
const PRIVILEGES = 57719
const PROCESSLIST = 57720
const SCHEMAS = 57721
const TABLES = 57722
const TRIGGERS = 57723
const USER = 57724
const VGTID_EXECUTED = 57725
const VITESS_KEYSPACES = 57726
const VITESS_METADATA = 57727
const VITESS_MIGRATIONS = 57728
const VITESS_REPLICATION_STATUS = 57729
const VITESS_SHARDS = 57730
const VITESS_TABLETS = 57731
const VITESS_TARGET = 57732
const VSCHEMA = 57733
const VITESS_THROTTLED_APPS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const CURRENT_TIMESTAMP = 57747
const DATABASE = 57748
const CURRENT_DATE = 57749
const CURDATE = 57750
const NOW = 57751
const CURTIME = 57752
const CURRENT_TIME = 57753
const LOCALTIME = 57754
const LOCALTIMESTAMP = 57755
const CURRENT_USER = 57756
const UTC_DATE = 57757
const UTC_TIME = 57758
const UTC_TIMESTAMP = 57759
const SYSDATE = 57760
const DAY = 57761
const DAY_HOUR = 57762
const DAY_MICROSECOND = 57763
const DAY_MINUTE = 57764
const DAY_SECOND = 57765
const HOUR = 57766
const HOUR_MICROSECOND = 57767
const HOUR_MINUTE = 57768
const HOUR_SECOND = 57769
const MICROSECOND = 57770
const MINUTE = 57771
const MINUTE_MICROSECOND = 57772
const MINUTE_SECOND = 57773
const MONTH = 57774
const QUARTER = 57775
const SECOND = 57776
const SECOND_MICROSECOND = 57777
const YEAR_MONTH = 57778
const WEEK = 57779
const REPLACE = 57780
const CONVERT = 57781
const CAST = 57782
const SUBSTR = 57783
const SUBSTRING = 57784
const SEPARATOR = 57785
const TIMESTAMPADD = 57786
const TIMESTAMPDIFF = 57787
const WEIGHT_STRING = 57788
const LTRIM = 57789
const RTRIM = 57790
const TRIM = 57791
const JSON_ARRAY = 57792
const JSON_OBJECT = 57793
const JSON_QUOTE = 57794
const JSON_DEPTH = 57795
const JSON_TYPE = 57796
const JSON_LENGTH = 57797
const JSON_VALID = 57798
const JSON_ARRAY_APPEND = 57799
const JSON_ARRAY_INSERT = 57800
const JSON_INSERT = 57801
const JSON_MERGE = 57802
const JSON_MERGE_PATCH = 57803
const JSON_MERGE_PRESERVE = 57804
const JSON_REMOVE = 57805
const JSON_REPLACE = 57806
const JSON_SET = 57807
const JSON_UNQUOTE = 57808
const COUNT = 57809
const AVG = 57810
const MAX = 57811
const MIN = 57812
const SUM = 57813
const GROUP_CONCAT = 57814
const BIT_AND = 57815
const BIT_OR = 57816
const BIT_XOR = 57817
const STD = 57818
const STDDEV = 57819
const STDDEV_POP = 57820
const STDDEV_SAMP = 57821
const VAR_POP = 57822
const VAR_SAMP = 57823
const VARIANCE = 57824
const REGEXP_INSTR = 57825
const REGEXP_LIKE = 57826
const REGEXP_REPLACE = 57827
const REGEXP_SUBSTR = 57828
const ExtractValue = 57829
const UpdateXML = 57830
const GET_LOCK = 57831
const RELEASE_LOCK = 57832
const RELEASE_ALL_LOCKS = 57833
const IS_FREE_LOCK = 57834
const IS_USED_LOCK = 57835
const LOCATE = 57836
const POSITION = 57837
const ST_GeometryCollectionFromText = 57838
const ST_GeometryFromText = 57839
const ST_LineStringFromText = 57840
const ST_MultiLineStringFromText = 57841
const ST_MultiPointFromText = 57842
const ST_MultiPolygonFromText = 57843
const ST_PointFromText = 57844
const ST_PolygonFromText = 57845
const ST_GeometryCollectionFromWKB = 57846
const ST_GeometryFromWKB = 57847
const ST_LineStringFromWKB = 57848
const ST_MultiLineStringFromWKB = 57849
const ST_MultiPointFromWKB = 57850
const ST_MultiPolygonFromWKB = 57851
const ST_PointFromWKB = 57852
const ST_PolygonFromWKB = 57853
const ST_AsBinary = 57854
const ST_AsText = 57855
const ST_Dimension = 57856
const ST_Envelope = 57857
const ST_IsSimple = 57858
const ST_IsEmpty = 57859
const ST_GeometryType = 57860
const ST_X = 57861
const ST_Y = 57862
const ST_Latitude = 57863
const ST_Longitude = 57864
const ST_EndPoint = 57865
const ST_IsClosed = 57866
const ST_Length = 57867
const ST_NumPoints = 57868
const ST_StartPoint = 57869
const ST_PointN = 57870
const ST_Area = 57871
const ST_Centroid = 57872
const ST_ExteriorRing = 57873
const ST_InteriorRingN = 57874
const ST_NumInteriorRings = 57875
const MATCH = 57876
const AGAINST = 57877
const BOOLEAN = 57878
const LANGUAGE = 57879
const WITH = 57880
const QUERY = 57881
const EXPANSION = 57882
const WITHOUT = 57883
const VALIDATION = 57884
const UNUSED = 57885
const ARRAY = 57886
const BYTE = 57887
const CUME_DIST = 57888
const DESCRIPTION = 57889
const DENSE_RANK = 57890
const EMPTY = 57891
const EXCEPT = 57892
const FIRST_VALUE = 57893
const GROUPING = 57894
const GROUPS = 57895
const JSON_TABLE = 57896
const LAG = 57897
const LAST_VALUE = 57898
const LATERAL = 57899
const LEAD = 57900
const NTH_VALUE = 57901
const NTILE = 57902
const OF = 57903
const OVER = 57904
const PERCENT_RANK = 57905
const RANK = 57906
const RECURSIVE = 57907
const ROW_NUMBER = 57908
const SYSTEM = 57909
const WINDOW = 57910
const ACTIVE = 57911
const ADMIN = 57912
const AUTOEXTEND_SIZE = 57913
const BUCKETS = 57914
const CLONE = 57915
const COLUMN_FORMAT = 57916
const COMPONENT = 57917
const DEFINITION = 57918
const ENFORCED = 57919
const ENGINE_ATTRIBUTE = 57920
const EXCLUDE = 57921
const FOLLOWING = 57922
const GET_MASTER_PUBLIC_KEY = 57923
const HISTOGRAM = 57924
const HISTORY = 57925
const INACTIVE = 57926
const INVISIBLE = 57927
const LOCKED = 57928
const MASTER_COMPRESSION_ALGORITHMS = 57929
const MASTER_PUBLIC_KEY_PATH = 57930
const MASTER_TLS_CIPHERSUITES = 57931
const MASTER_ZSTD_COMPRESSION_LEVEL = 57932
const NESTED = 57933
const NETWORK_NAMESPACE = 57934
const NOWAIT = 57935
const NULLS = 57936
const OJ = 57937
const OLD = 57938
const OPTIONAL = 57939
const ORDINALITY = 57940
const ORGANIZATION = 57941
const OTHERS = 57942
const PARTIAL = 57943
const PATH = 57944
const PERSIST = 57945
const PERSIST_ONLY = 57946
const PRECEDING = 57947
const PRIVILEGE_CHECKS_USER = 57948
const PROCESS = 57949
const RANDOM = 57950
const REFERENCE = 57951
const REQUIRE_ROW_FORMAT = 57952
const RESOURCE = 57953
const RESPECT = 57954
const RESTART = 57955
const RETAIN = 57956
const REUSE = 57957
const ROLE = 57958
const SECONDARY = 57959
const SECONDARY_ENGINE = 57960
const SECONDARY_ENGINE_ATTRIBUTE = 57961
const SECONDARY_LOAD = 57962
const SECONDARY_UNLOAD = 57963
const SIMPLE = 57964
const SKIP = 57965
const SRID = 57966
const THREAD_PRIORITY = 57967
const TIES = 57968
const UNBOUNDED = 57969
const VCPU = 57970
const VISIBLE = 57971
const RETURNING = 57972
const FORMAT_BYTES = 57973
const FORMAT_PICO_TIME = 57974
const PS_CURRENT_THREAD_ID = 57975
const PS_THREAD_ID = 57976
const GTID_SUBSET = 57977
const GTID_SUBTRACT = 57978
const WAIT_FOR_EXECUTED_GTID_SET = 57979
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57980
const FORMAT = 57981
const TREE = 57982
const VITESS = 57983
const TRADITIONAL = 57984
const VTEXPLAIN = 57985
const VEXPLAIN = 57986
const PLAN = 57987
const LOCAL = 57988
const LOW_PRIORITY = 57989
const NO_WRITE_TO_BINLOG = 57990
const LOGS = 57991
const ERROR = 57992
const GENERAL = 57993
const HOSTS = 57994
const OPTIMIZER_COSTS = 57995
const USER_RESOURCES = 57996
const SLOW = 57997
const CHANNEL = 57998
const RELAY = 57999
const EXPORT = 58000
const CURRENT = 58001
const ROW = 58002
const ROWS = 58003
const AVG_ROW_LENGTH = 58004
const CONNECTION = 58005
const CHECKSUM = 58006
const DELAY_KEY_WRITE = 58007
const ENCRYPTION = 58008
const ENGINE = 58009
const INSERT_METHOD = 58010
const MAX_ROWS = 58011
const MIN_ROWS = 58012
const PACK_KEYS = 58013
const PASSWORD = 58014
const FIXED = 58015
const DYNAMIC = 58016
const COMPRESSED = 58017
const REDUNDANT = 58018
const COMPACT = 58019
const ROW_FORMAT = 58020
const STATS_AUTO_RECALC = 58021
const STATS_PERSISTENT = 58022
const STATS_SAMPLE_PAGES = 58023
const STORAGE = 58024
const MEMORY = 58025
const DISK = 58026
const PARTITIONS = 58027
const LINEAR = 58028
const RANGE = 58029
const LIST = 58030
const SUBPARTITION = 58031
const SUBPARTITIONS = 58032
const HASH = 58033

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"NOW",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	709, 158,
	-2, 166,
	-1, 52,
	135, 166,
	177, 166,
	346, 166,
	-2, 522,
	-1, 60,
	36, 771,
	240, 771,
	251, 771,
	286, 785,
	287, 785,
	-2, 773,
	-1, 65,
	242, 809,
	-2, 807,
	-1, 120,
	239, 1546,
	-2, 132,
	-1, 122,
	1, 159,
	709, 159,
	-2, 166,
	-1, 133,
	136, 407,
	245, 407,
	-2, 511,
	-1, 152,
	135, 166,
	177, 166,
	346, 166,
	-2, 531,
	-1, 702,
	163, 40,
	-2, 44,
	-1, 896,
	87, 1563,
	-2, 1417,
	-1, 897,
	87, 1564,
	222, 1568,
	-2, 1418,
	-1, 898,
	222, 1567,
	-2, 41,
	-1, 978,
	60, 883,
	-2, 898,
	-1, 1065,
	250, 42,
	255, 42,
	-2, 418,
	-1, 1150,
	1, 579,
	709, 579,
	-2, 166,
	-1, 1453,
	222, 1568,
	-2, 1418,
	-1, 1648,
	60, 884,
	-2, 903,
	-1, 1649,
	60, 885,
	-2, 904,
	-1, 1700,
	135, 166,
	177, 166,
	346, 166,
	-2, 457,
	-1, 1781,
	136, 407,
	245, 407,
	-2, 511,
	-1, 1790,
	250, 43,
	255, 43,
	-2, 419,
	-1, 2195,
	222, 1572,
	-2, 1566,
	-1, 2196,
	222, 1568,
	-2, 1564,
	-1, 2296,
	135, 166,
	177, 166,
	346, 166,
	-2, 458,
	-1, 2303,
	26, 187,
	-2, 189,
	-1, 2738,
	78, 97,
	88, 97,
	-2, 962,
	-1, 2807,
	684, 695,
	-2, 669,
	-1, 3000,
	50, 1514,
	-2, 1508,
	-1, 3766,
	684, 695,
	-2, 683,
	-1, 3855,
	90, 627,
	95, 627,
	105, 627,
	179, 627,
	180, 627,
	181, 627,
	182, 627,
	183, 627,
	184, 627,
	185, 627,
	186, 627,
	187, 627,
	188, 627,
	189, 627,
	190, 627,
	191, 627,
	192, 627,
	193, 627,
	194, 627,
	195, 627,
	196, 627,
	197, 627,
	198, 627,
	199, 627,
	200, 627,
	201, 627,
	202, 627,
	203, 627,
	204, 627,
	205, 627,
	206, 627,
	207, 627,
	208, 627,
	209, 627,
	210, 627,
	211, 627,
	212, 627,
	213, 627,
	214, 627,
	215, 627,
	216, 627,
	217, 627,
	218, 627,
	219, 627,
	220, 627,
	-2, 1928,
}

const yyPrivate = 57344

const yyLast = 52288

var yyAct = [...]int{
	1656, 3928, 907, 3939, 3747, 900, 3896, 899, 3832, 724,
	3897, 2293, 3413, 3270, 3853, 1703, 1217, 3797, 3150, 1909,
	3820, 2224, 3052, 3059, 3731, 3663, 865, 2244, 3110, 41,
	3115, 3112, 3111, 3109, 3114, 3113, 3013, 2638, 862, 1964,
	3729, 3488, 5, 3400, 2672, 866, 1215, 3101, 3016, 3719,
	3129, 706, 2367, 2959, 3017, 3014, 3309, 3303, 3130, 2226,
	994, 3067, 2248, 2711, 3493, 734, 3132, 2264, 861, 3329,
	2267, 860, 3011, 3001, 2698, 3295, 2804, 2773, 700, 1027,
	2335, 2774, 1163, 2281, 2398, 2355, 971, 1663, 2330, 2723,
	2772, 995, 40, 2269, 42, 2852, 973, 2704, 161, 3156,
	1650, 2268, 2690, 2674, 1806, 2191, 2150, 2151, 2844, 1788,
	975, 1759, 979, 2354, 2337, 2415, 2034, 2868, 3459, 3460,
	1097, 3458, 2015, 2183, 2256, 147, 701, 1060, 2765, 1073,
	1692, 997, 1055, 102, 2740, 2376, 1672, 2271, 103, 1630,
	1465, 98, 1377, 2038, 1905, 1795, 1034, 1066, 2352, 1031,
	1887, 1992, 1035, 1061, 716, 1062, 2326, 1063, 1691, 711,
	97, 704, 2046, 1012, 1014, 1677, 1972, 2192, 985, 2109,
	1449, 2327, 1192, 1425, 982, 1963, 1213, 83, 980, 1206,
	981, 1392, 2019, 105, 1754, 1780, 1916, 125, 1146, 130,
	131, 983, 165, 123, 124, 1007, 82, 691, 710, 2249,
	1469, 3756, 2797, 96, 3929, 2369, 2370, 2371, 3782, 1474,
	3401, 3098, 2369, 2827, 2826, 2413, 2795, 1626, 91, 670,
	1872, 3393, 93, 1393, 3880, 2860, 1002, 1006, 3356, 93,
	2861, 93, 3463, 3778, 3783, 104, 3777, 1979, 132, 988,
	2221, 2222, 1978, 703, 126, 1028, 1977, 916, 917, 918,
	1995, 1102, 1976, 676, 1975, 1974, 1947, 1162, 3874, 989,
	636, 1053, 2460, 694, 1077, 695, 2670, 2997, 1388, 692,
	1099, 2817, 1393, 2700, 1021, 3463, 2, 2963, 3120, 3900,
	974, 2402, 1409, 1116, 1117, 1118, 1110, 1121, 1122, 1123,
	1124, 696, 1076, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1051, 1103, 1106, 1107, 1022, 126, 1050, 1049, 972, 3462,
	109, 110, 111, 996, 114, 2401, 1052, 120, 3884, 3120,
	189, 1403, 1657, 630, 3118, 1044, 3949, 3778, 3895, 3882,
	2346, 1039, 3117, 3919, 3275, 689, 690, 916, 917, 918,
	3274, 2400, 2820, 3883, 3732, 967, 968, 969, 970, 676,
	3124, 978, 3462, 2340, 3881, 1119, 2639, 188, 1984, 670,
	3175, 93, 3839, 3659, 1020, 1024, 864, 3658, 3406, 1101,
	1403, 3407, 3878, 126, 84, 3118, 1100, 86, 3910, 1009,
	1010, 127, 3669, 149, 2469, 3425, 3833, 1379, 3863, 84,
	3414, 3821, 3829, 670, 170, 2395, 3668, 2024, 3858, 3761,
	3424, 3124, 2252, 3195, 1769, 84, 3861, 1406, 670, 1407,
	1408, 2749, 84, 2714, 2748, 3867, 3868, 2750, 2834, 2835,
	671, 3049, 3050, 3069, 3070, 160, 2288, 2289, 2671, 1399,
	3862, 148, 1391, 1956, 1957, 1693, 667, 1694, 2715, 2287,
	1199, 3048, 1201, 2859, 2466, 2843, 1187, 1188, 1210, 2467,
	167, 1170, 93, 168, 3506, 1048, 1171, 1155, 1156, 1182,
	965, 964, 3839, 3121, 1169, 2798, 1168, 93, 1020, 1024,
	864, 1389, 136, 137, 159, 158, 187, 1170, 1399, 2223,
	1198, 1200, 1171, 93, 652, 3748, 1912, 2761, 670, 1158,
	93, 1183, 3152, 1176, 2306, 2305, 3306, 650, 3183, 3901,
	3181, 2339, 2458, 2707, 2708, 670, 670, 2902, 1689, 1955,
	684, 1959, 670, 1046, 3121, 1145, 688, 1149, 682, 2845,
	3902, 3157, 1862, 1634, 2416, 2377, 1043, 1378, 2805, 1045,
	1120, 3707, 3068, 3708, 2830, 3145, 2436, 647, 2437, 3931,
	2438, 2421, 1208, 3146, 3071, 1888, 662, 1203, 2252, 1191,
	1189, 2847, 2461, 2462, 2464, 2463, 1893, 1185, 1186, 3395,
	1190, 657, 1151, 1209, 3394, 2439, 1863, 1126, 1864, 1125,
	671, 660, 3154, 2418, 3643, 3391, 153, 134, 156, 141,
	133, 1086, 154, 155, 3153, 1184, 1196, 1177, 1056, 171,
	1197, 2420, 1057, 2380, 2250, 2251, 2422, 3467, 177, 142,
	1202, 1084, 2265, 1637, 671, 2428, 2424, 2426, 2427, 2425,
	2429, 2430, 1057, 145, 143, 138, 139, 140, 144, 671,
	1095, 1094, 3875, 1913, 1195, 135, 1093, 1068, 1048, 1092,
	1040, 1091, 1090, 2419, 146, 1089, 1773, 1042, 1041, 637,
	1047, 639, 653, 1088, 673, 1096, 672, 643, 1083, 641,
	645, 654, 646, 2962, 640, 3071, 651, 1440, 1440, 642,
	655, 656, 659, 663, 664, 665, 661, 658, 3950, 649,
	674, 1032, 2903, 1048, 1144, 1032, 1069, 1180, 3907, 1030,
	1032, 1794, 1906, 1023, 1017, 1015, 1046, 188, 3943, 2353,
	3390, 2467, 1008, 1013, 2675, 2677, 1075, 2848, 2406, 671,
	2405, 1398, 1395, 1396, 1397, 1402, 1404, 1401, 188, 1400,
	1166, 127, 1172, 1173, 1174, 1175, 671, 671, 1902, 1394,
	1380, 2851, 162, 671, 170, 1113, 3091, 2829, 1767, 1087,
	1766, 1765, 127, 1690, 2815, 1075, 1211, 1212, 1148, 1903,
	2250, 2251, 1763, 2864, 2481, 170, 634, 629, 1451, 1085,
	1398, 1395, 1396, 1397, 1402, 1404, 1401, 1054, 1400, 2832,
	2799, 2842, 3755, 2796, 2841, 1441, 1442, 2754, 1394, 2397,
	1896, 1105, 1894, 1895, 3876, 1897, 1898, 1068, 3744, 3343,
	167, 1104, 3325, 168, 2745, 3835, 2763, 1023, 1017, 1015,
	1793, 2710, 2399, 3307, 2647, 2027, 1681, 1588, 1160, 1074,
	122, 167, 913, 1112, 168, 157, 187, 2343, 2705, 913,
	635, 913, 2294, 1047, 1892, 1440, 1437, 3834, 1370, 1204,
	87, 1432, 1433, 1435, 1434, 1436, 1437, 187, 3047, 1420,
	991, 2819, 1207, 3769, 117, 1371, 1372, 1098, 1074, 1193,
	1917, 3386, 3319, 1147, 1068, 1071, 1072, 2344, 1032, 2417,
	1968, 1165, 1065, 1069, 2342, 1899, 2854, 3461, 1047, 1695,
	2888, 2853, 2676, 1447, 1443, 1444, 1445, 1446, 1874, 1873,
	1875, 1876, 1877, 1064, 1457, 2818, 3354, 3355, 2039, 3423,
	2047, 1179, 2039, 2788, 2498, 3835, 2854, 1075, 2345, 3866,
	3911, 2853, 1181, 1408, 2048, 3502, 1387, 3361, 2341, 3360,
	3461, 2384, 1167, 1803, 150, 3055, 118, 151, 3941, 3122,
	3123, 3942, 1802, 3940, 1075, 3258, 2468, 3834, 1792, 171,
	92, 675, 3126, 2394, 1471, 2392, 1472, 1473, 177, 1624,
	2389, 1997, 1086, 3865, 1084, 92, 1016, 163, 1476, 1477,
	171, 3903, 668, 2869, 175, 1998, 1438, 1439, 1996, 177,
	3056, 92, 1407, 1408, 987, 3344, 1157, 669, 92, 1461,
	3122, 3123, 1154, 1889, 2396, 1890, 3799, 3737, 1891, 2393,
	3945, 1658, 1660, 3126, 3058, 1428, 1429, 1430, 1431, 1432,
	1433, 1435, 1434, 1436, 1437, 183, 1194, 1918, 3951, 1640,
	1074, 1150, 3053, 1644, 1164, 1625, 1068, 1071, 1072, 975,
	1032, 1409, 3651, 3650, 1065, 1069, 1075, 3641, 3436, 3069,
	3070, 3800, 3738, 3420, 2389, 3421, 3054, 1074, 697, 1111,
	3435, 3368, 1638, 1108, 2045, 3367, 3357, 2871, 164, 169,
	166, 172, 173, 174, 176, 178, 179, 180, 181, 1075,
	1016, 1986, 1988, 1989, 182, 184, 185, 186, 1657, 3099,
	3060, 1641, 162, 2391, 1426, 2044, 1882, 1642, 3087, 1625,
	2770, 102, 1643, 1880, 2188, 1987, 103, 1594, 1595, 1596,
	1597, 1598, 1599, 162, 1409, 3952, 3172, 2769, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1435, 1434, 1436, 1437, 2473,
	2474, 2475, 1631, 3149, 2768, 2349, 1618, 2881, 2880, 2879,
	1883, 1867, 2873, 1866, 2877, 1800, 2872, 1865, 2870, 1074,
	1869, 105, 1855, 2875, 1078, 1068, 1849, 1409, 3068, 1080,
	1881, 1846, 2874, 1081, 1079, 998, 1845, 1879, 1004, 1004,
	3071, 1659, 1835, 1786, 1409, 1838, 1406, 1840, 1407, 1408,
	2876, 2878, 1074, 1844, 1082, 2890, 1815, 1078, 1068, 2188,
	1374, 1628, 1080, 2185, 3351, 676, 1081, 1079, 3915, 1657,
	676, 1409, 2187, 1770, 1771, 1772, 1662, 1911, 1689, 974,
	3904, 1409, 2495, 1798, 1868, 1779, 911, 1839, 1808, 1857,
	1809, 1639, 1811, 1813, 2752, 676, 1817, 1819, 1821, 1823,
	1825, 1796, 1796, 2524, 1426, 1686, 1687, 1422, 3764, 1423,
	972, 3913, 1657, 916, 917, 918, 2365, 2364, 1797, 1406,
	3763, 1407, 1408, 1424, 1438, 1439, 1421, 1762, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1435, 1434, 1436, 1437, 1666,
	1847, 1848, 2363, 2362, 1776, 3741, 1853, 1854, 1777, 1775,
	1789, 2361, 2360, 1657, 1645, 2494, 3057, 2696, 3930, 1921,
	3891, 1657, 1406, 2534, 1407, 1408, 1925, 3757, 1927, 1928,
	1929, 1930, 3740, 1405, 1657, 1934, 3739, 163, 3646, 1406,
	3630, 1407, 1408, 3629, 175, 1667, 108, 1946, 1430, 1431,
	1432, 1433, 1435, 1434, 1436, 1437, 3501, 107, 163, 106,
	99, 108, 1907, 1426, 3499, 175, 1406, 101, 1407, 1408,
	3432, 100, 107, 1843, 106, 99, 1406, 1623, 1407, 1408,
	2087, 1768, 1622, 101, 1621, 183, 100, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1435, 1434, 1436, 1437, 1051, 1405,
	1657, 1919, 1920, 126, 1050, 1049, 183, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1411, 1924, 2696, 3828, 2696, 3807,
	2696, 3803, 1931, 1932, 1933, 1923, 1657, 1657, 164, 169,
	166, 172, 173, 174, 176, 178, 179, 180, 181, 1944,
	1409, 1657, 1657, 1945, 182, 184, 185, 186, 1409, 164,
	169, 166, 172, 173, 174, 176, 178, 179, 180, 181,
	1409, 3790, 1657, 3404, 3754, 182, 184, 185, 186, 1426,
	41, 2863, 3365, 41, 2079, 2068, 2069, 2070, 2071, 2081,
	2072, 2073, 2074, 2086, 2082, 2075, 2076, 2083, 2084, 2085,
	2077, 2078, 2080, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1435, 1434, 1436, 1437, 2022, 2022, 3350, 1409, 3158, 2020,
	2020, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1434,
	1436, 1437, 3654, 1657, 3845, 1657, 1426, 1993, 2696, 3642,
	3677, 2042, 3843, 1657, 3061, 1409, 2043, 3155, 3065, 3173,
	3404, 1657, 1409, 3090, 3672, 3064, 3676, 1624, 2536, 1451,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1434, 1436,
	1437, 2696, 3402, 1409, 2486, 3089, 2040, 2389, 1657, 3323,
	1657, 2105, 2779, 1409, 2766, 1406, 1620, 1407, 1408, 3066,
	1409, 2606, 1657, 1406, 3062, 1407, 1408, 1409, 2741, 3063,
	2741, 3841, 1657, 3080, 3079, 1406, 2449, 1407, 1408, 1990,
	1426, 2448, 2480, 3077, 3078, 1670, 1952, 1953, 1409, 3075,
	3076, 3634, 1409, 1625, 3075, 3074, 2720, 1657, 83, 3716,
	1657, 83, 1969, 2411, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1435, 1434, 1436, 1437, 2410, 1994, 2467, 2828, 1758,
	2809, 3633, 1406, 2181, 1407, 1408, 2001, 3714, 1657, 2802,
	2803, 2742, 2247, 2742, 2488, 2229, 1999, 3711, 1657, 2696,
	2695, 2744, 101, 2467, 2487, 2195, 3412, 1409, 2194, 2210,
	1406, 1669, 1407, 1408, 2491, 1657, 2806, 1406, 1409, 1407,
	1408, 2026, 2025, 1657, 107, 2023, 1658, 2217, 1409, 2532,
	2033, 2035, 3697, 1657, 1409, 2193, 3294, 1657, 1406, 1948,
	1407, 1408, 2049, 2050, 2051, 2052, 1914, 1878, 1406, 1870,
	1407, 1408, 1860, 2184, 1409, 1406, 2063, 1407, 1408, 1856,
	2241, 1657, 1406, 2186, 1407, 1408, 1852, 2000, 1851, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 1850, 1406, 1668, 1407, 1408, 1406, 1205, 1407,
	1408, 3287, 1657, 1405, 2692, 2784, 2198, 2199, 2195, 1409,
	3012, 2262, 2234, 1657, 2235, 1758, 1757, 1701, 1700, 101,
	2712, 3318, 3338, 2275, 3042, 2303, 102, 2302, 3284, 1657,
	2719, 103, 2099, 1409, 2467, 3318, 1405, 1410, 2193, 1409,
	2712, 3320, 2110, 1409, 3795, 2390, 102, 3768, 3282, 1657,
	2696, 103, 1406, 1409, 1407, 1408, 2720, 3279, 1409, 3077,
	2101, 2240, 2985, 1406, 2286, 1407, 1408, 2197, 1466, 2491,
	2200, 2201, 2350, 1406, 2606, 1407, 1408, 2491, 2521, 1406,
	2520, 1407, 1408, 2389, 2372, 2720, 2255, 2312, 2313, 2314,
	2315, 2298, 2720, 3249, 1657, 1661, 2216, 2219, 1409, 1406,
	2025, 1407, 1408, 2389, 2175, 2176, 2177, 2178, 2179, 2297,
	1970, 988, 3318, 2228, 1954, 1901, 1409, 3247, 1657, 1688,
	1409, 1059, 1058, 3245, 1657, 2239, 1409, 3243, 1657, 977,
	2307, 93, 2308, 2309, 2310, 2311, 1409, 3241, 1657, 2301,
	2242, 3102, 3239, 1657, 1406, 3871, 1407, 1408, 2318, 2319,
	2320, 2321, 2332, 2338, 2260, 2218, 2378, 1409, 1021, 2285,
	3810, 2110, 2284, 2283, 2279, 2300, 3665, 2299, 1406, 1664,
	1407, 1408, 1409, 3631, 1406, 2375, 1407, 1408, 1406, 3513,
	1407, 1408, 3237, 1657, 1409, 3385, 3369, 3382, 1406, 3363,
	1407, 1408, 3200, 1406, 2348, 1407, 1408, 1409, 1022, 2776,
	3235, 1657, 3199, 3151, 3233, 1657, 1760, 93, 2331, 1149,
	3231, 1657, 2383, 3147, 2333, 2386, 3190, 2387, 2329, 3666,
	3289, 2347, 3104, 2351, 1077, 3100, 1831, 2359, 2403, 2322,
	2324, 2325, 2810, 1406, 1796, 1407, 1408, 3370, 3371, 3372,
	1409, 3229, 1657, 2328, 1409, 2323, 2317, 2381, 2382, 2333,
	2385, 1406, 1076, 1407, 1408, 1406, 3285, 1407, 1408, 2316,
	1885, 1406, 1791, 1407, 1408, 1787, 1756, 3373, 3227, 1657,
	119, 1406, 2775, 1407, 1408, 2346, 2407, 1832, 1833, 1834,
	2408, 2409, 1657, 3330, 3331, 2404, 2232, 3925, 1950, 3923,
	3898, 3776, 1406, 3702, 1407, 1408, 3333, 3096, 3095, 3094,
	1827, 3012, 2789, 2443, 3336, 3772, 3034, 1406, 3335, 1407,
	1408, 3035, 2451, 2452, 3374, 3375, 3376, 2454, 3032, 1406,
	2776, 1407, 1408, 3033, 3225, 1657, 2455, 3031, 3223, 1657,
	3030, 1665, 1406, 3667, 1407, 1408, 3324, 2484, 1673, 2246,
	3483, 2489, 3482, 2238, 2492, 2990, 2493, 1828, 1829, 1830,
	1951, 2500, 1993, 2989, 2195, 2502, 2503, 2194, 2442, 3736,
	3492, 3494, 2414, 3314, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2483, 1406, 1761, 1407, 1408, 1406,
	2999, 1407, 1408, 1900, 2485, 2725, 2728, 2729, 2730, 2726,
	3481, 2727, 2731, 1409, 3073, 3330, 3331, 1409, 963, 2759,
	2525, 2526, 2527, 2528, 2529, 3311, 2531, 2457, 2780, 1115,
	2533, 1114, 1409, 3310, 2538, 2539, 3036, 2540, 2729, 2730,
	2543, 1409, 2544, 2546, 2548, 2549, 2550, 2551, 2552, 2553,
	2555, 2557, 2558, 2559, 2561, 3166, 2563, 2564, 2566, 2568,
	2570, 2572, 2574, 2576, 2578, 2580, 2582, 2584, 2586, 2588,
	2590, 2592, 2594, 2596, 2598, 2600, 2601, 2602, 2476, 2604,
	2605, 1994, 2465, 992, 2608, 2047, 2775, 2857, 2612, 1373,
	2478, 993, 2617, 2618, 2619, 2620, 2816, 3221, 1657, 2048,
	1409, 3219, 1657, 127, 99, 2631, 2632, 2633, 2634, 2635,
	2636, 2497, 1409, 2640, 2641, 100, 3205, 1657, 1409, 3316,
	101, 2643, 2645, 1409, 1915, 3188, 1657, 99, 2648, 2649,
	2650, 2651, 2652, 3937, 101, 1409, 2435, 3092, 100, 2659,
	2660, 3850, 2661, 1409, 2446, 2664, 2666, 2241, 1406, 2668,
	1407, 1408, 1406, 3753, 1407, 1408, 3661, 3002, 3004, 2680,
	1409, 108, 3072, 2022, 2733, 2530, 3005, 1406, 2020, 1407,
	1408, 2477, 107, 2479, 106, 1409, 1406, 2243, 1407, 1408,
	1409, 1000, 1001, 101, 2667, 1657, 2257, 2258, 2434, 2433,
	2432, 2431, 1409, 2988, 2504, 3296, 2665, 1657, 1409, 2257,
	2258, 2987, 2644, 1657, 2471, 108, 106, 2621, 1657, 3724,
	3723, 2519, 3705, 3500, 3489, 3498, 107, 2679, 106, 2613,
	1657, 41, 1409, 3497, 3490, 3383, 3315, 2599, 1657, 3313,
	2734, 3105, 2373, 2736, 2716, 1406, 1774, 1407, 1408, 2682,
	2697, 2684, 999, 107, 2597, 1657, 108, 1406, 1409, 1407,
	1408, 3304, 2712, 1406, 1409, 1407, 1408, 107, 1406, 3926,
	1407, 1408, 3927, 3926, 2595, 1657, 3471, 2692, 2904, 1409,
	1406, 2693, 1407, 1408, 2735, 2522, 2593, 1657, 1406, 2706,
	1407, 1408, 2591, 1657, 2230, 1682, 1674, 1631, 3927, 2669,
	112, 113, 3742, 3349, 1409, 1406, 1625, 1407, 1408, 990,
	1967, 2762, 2764, 10, 3, 1965, 2589, 1657, 9, 95,
	1406, 2689, 1407, 1408, 1, 1406, 1966, 1407, 1408, 8,
	1376, 1375, 2709, 3353, 3860, 2755, 648, 1406, 2694, 1407,
	1408, 2801, 3256, 1406, 2220, 1407, 1408, 1629, 2587, 1657,
	3899, 3856, 3857, 2681, 1871, 2743, 1861, 2746, 3415, 2825,
	2149, 3662, 2338, 2585, 1657, 3108, 2756, 1406, 2753, 1407,
	1408, 2379, 3381, 2336, 1980, 1981, 1982, 1983, 1067, 152,
	2295, 2296, 3823, 116, 2823, 2739, 2767, 1025, 3252, 1991,
	115, 2777, 1070, 1406, 1178, 1407, 1408, 2374, 3405, 1406,
	2778, 1407, 1408, 2760, 2304, 2781, 2782, 2786, 1707, 1705,
	2790, 2791, 2792, 1706, 1406, 2785, 1407, 1408, 1704, 1709,
	1708, 2822, 3174, 2523, 2028, 2029, 3257, 1958, 683, 2031,
	2732, 1004, 1004, 2036, 2811, 2812, 677, 2041, 1779, 1406,
	190, 1407, 1408, 1696, 1675, 2892, 2893, 2894, 2895, 2896,
	3271, 1109, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 638, 3081, 2901, 2412, 2088, 2089, 2090, 2091,
	2092, 2093, 2095, 1409, 2100, 644, 2102, 2103, 2104, 2821,
	2106, 2107, 2108, 2846, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2882, 2897, 2865, 2885, 2849,
	2180, 2883, 2182, 1458, 2189, 2190, 1004, 3197, 1004, 1004,
	1004, 1004, 1004, 2855, 1949, 2986, 2856, 2747, 1019, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 1011, 2211, 2212,
	2213, 2214, 2215, 2866, 2725, 2728, 2729, 2730, 2726, 2231,
	2727, 2731, 2683, 1409, 1018, 3639, 3020, 2906, 1409, 3308,
	2998, 3000, 2699, 1655, 1651, 3003, 2996, 3735, 1406, 3491,
	1407, 1408, 3808, 2757, 1671, 3278, 1004, 2496, 1652, 2964,
	2037, 1448, 2272, 3466, 1985, 708, 707, 705, 2685, 2713,
	1412, 901, 2673, 1683, 2969, 1409, 2724, 2966, 2253, 2254,
	2722, 2721, 1409, 2236, 2237, 1654, 2444, 1653, 2884, 2280,
	3332, 2184, 3328, 2184, 2937, 3852, 2274, 2270, 3021, 2275,
	2691, 2186, 852, 2186, 2292, 851, 2867, 717, 709, 2947,
	2948, 2949, 2950, 2951, 699, 1409, 3039, 2583, 1657, 850,
	1409, 849, 2581, 1657, 979, 3346, 3134, 2275, 2275, 2275,
	2275, 2275, 2968, 3015, 2992, 3836, 3024, 2969, 3015, 2831,
	3041, 3018, 1911, 2993, 3148, 1409, 2965, 2275, 2967, 2833,
	2275, 2758, 3009, 3144, 1390, 1647, 693, 2980, 1038, 2579,
	1657, 3171, 3759, 2984, 2470, 2334, 2577, 1657, 1406, 3194,
	1407, 1408, 2991, 1406, 2994, 1407, 1408, 1646, 2066, 3006,
	3007, 2067, 3766, 3116, 3399, 2981, 2982, 2983, 3097, 2807,
	980, 3043, 981, 2366, 3044, 3026, 3027, 68, 3029, 2575,
	1657, 3037, 3025, 3023, 3196, 3028, 102, 2939, 3045, 2941,
	1406, 103, 1407, 1408, 45, 3730, 3796, 1406, 3128, 1407,
	1408, 848, 845, 3468, 3107, 2952, 2953, 2954, 2955, 2573,
	1657, 3469, 3084, 3051, 3470, 3083, 3082, 2960, 2961, 3779,
	3780, 844, 3781, 3168, 2094, 1386, 1383, 3873, 1960, 94,
	1406, 36, 1407, 1408, 1409, 1406, 35, 1407, 1408, 1409,
	34, 33, 3106, 3185, 3186, 3187, 3135, 3189, 3191, 3136,
	3127, 32, 26, 25, 24, 2338, 3085, 3086, 3142, 1409,
	1406, 3198, 1407, 1408, 1409, 23, 3202, 3203, 3204, 3206,
	3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216,
	3217, 3218, 3220, 3222, 3224, 3226, 3228, 3230, 3232, 3234,
	3236, 3238, 3240, 3242, 3244, 3246, 3248, 3250, 3164, 3165,
	3251, 3162, 3253, 3254, 3255, 3161, 3159, 3259, 3260, 3261,
	3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 2571, 1657,
	22, 29, 3179, 2569, 1657, 1409, 3276, 19, 21, 3280,
	20, 3281, 3283, 18, 3286, 3288, 3119, 3290, 3291, 3292,
	3293, 3176, 3177, 3193, 3178, 3299, 3894, 3180, 2663, 3182,
	3169, 3184, 3936, 121, 54, 51, 49, 3273, 129, 128,
	52, 48, 1152, 46, 3277, 31, 30, 17, 16, 1406,
	1409, 1407, 1408, 15, 1406, 14, 1407, 1408, 13, 1409,
	3321, 3322, 12, 11, 3326, 7, 3170, 1409, 6, 39,
	38, 1409, 28, 37, 1406, 27, 1407, 1408, 4, 1406,
	2794, 1407, 1408, 2368, 1409, 0, 0, 0, 0, 2567,
	1657, 0, 0, 0, 0, 3302, 1409, 0, 3297, 3298,
	0, 1409, 0, 0, 3300, 0, 1409, 0, 2499, 2275,
	1409, 3305, 0, 0, 3312, 1409, 0, 0, 2505, 2506,
	2507, 2508, 1409, 0, 0, 0, 3317, 0, 3327, 1409,
	0, 0, 0, 0, 2565, 1657, 0, 0, 3334, 1409,
	1406, 0, 1407, 1408, 1657, 0, 0, 3341, 3342, 3339,
	0, 2560, 1657, 3340, 0, 2556, 1657, 0, 0, 0,
	0, 3347, 3348, 1466, 3135, 1409, 3337, 3136, 2554, 1657,
	3403, 1409, 3388, 3389, 0, 0, 0, 3364, 0, 3366,
	2547, 1657, 0, 3409, 3410, 1406, 3905, 1407, 1408, 0,
	2545, 1657, 0, 0, 1406, 3752, 1407, 1408, 1409, 0,
	3638, 0, 1406, 1409, 1407, 1408, 1406, 3387, 1407, 1408,
	0, 0, 3422, 0, 2771, 3426, 0, 1409, 0, 1406,
	0, 1407, 1408, 2662, 0, 0, 3358, 3359, 1409, 0,
	0, 1406, 0, 1407, 1408, 0, 1406, 1409, 1407, 1408,
	0, 1406, 3437, 1407, 1408, 1406, 0, 1407, 1408, 2658,
	1406, 0, 1407, 1408, 0, 2657, 0, 1406, 1409, 1407,
	1408, 0, 912, 0, 1406, 85, 1407, 1408, 0, 0,
	0, 3411, 0, 0, 1406, 0, 1407, 1408, 0, 3392,
	3427, 0, 2656, 3396, 3397, 3398, 1409, 2655, 0, 0,
	1655, 1651, 1409, 0, 0, 3431, 1409, 0, 3457, 0,
	1406, 2654, 1407, 1408, 0, 1652, 1406, 0, 1407, 1408,
	1409, 3465, 2653, 0, 0, 0, 0, 0, 0, 3472,
	1409, 2642, 0, 0, 1673, 1409, 0, 0, 0, 0,
	1648, 1649, 1654, 1406, 1653, 1407, 1408, 0, 1406, 0,
	1407, 1408, 2637, 0, 0, 0, 976, 0, 85, 0,
	0, 0, 1406, 0, 1407, 1408, 0, 0, 0, 0,
	0, 3486, 0, 1406, 0, 1407, 1408, 976, 0, 0,
	2630, 0, 1406, 0, 1407, 1408, 2629, 0, 0, 0,
	2628, 2022, 1037, 0, 0, 0, 2020, 1409, 0, 41,
	0, 0, 0, 1406, 2627, 1407, 1408, 3015, 0, 0,
	3487, 0, 3507, 0, 2626, 3496, 3018, 0, 0, 2625,
	3018, 0, 3495, 3509, 3503, 3505, 3464, 0, 0, 0,
	0, 1406, 0, 1407, 1408, 0, 0, 1406, 0, 1407,
	1408, 1406, 0, 1407, 1408, 0, 0, 0, 0, 0,
	3653, 3519, 1409, 3516, 3517, 1406, 0, 1407, 1408, 3660,
	1409, 0, 0, 3640, 3511, 1406, 0, 1407, 1408, 1409,
	1406, 0, 1407, 1408, 0, 1409, 0, 0, 0, 3670,
	3671, 2624, 3673, 3636, 3674, 3675, 3637, 3644, 0, 3678,
	3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688,
	3689, 3690, 3691, 3692, 3693, 3694, 3695, 3696, 3652, 3698,
	3701, 3664, 0, 3657, 3656, 3635, 2022, 0, 0, 0,
	3455, 2020, 0, 0, 0, 3710, 3712, 3713, 3715, 3717,
	3718, 3720, 1406, 0, 1407, 1408, 2623, 0, 0, 0,
	0, 0, 0, 0, 2622, 0, 1409, 0, 0, 0,
	0, 2862, 0, 2616, 0, 0, 0, 0, 0, 2615,
	0, 0, 0, 0, 3647, 3648, 3649, 0, 0, 3750,
	1004, 3515, 3706, 2886, 2887, 1409, 3709, 2889, 0, 3728,
	2891, 3727, 0, 1409, 3725, 3726, 0, 1406, 0, 1407,
	1408, 3746, 0, 1409, 0, 1406, 0, 1407, 1408, 2898,
	2899, 2900, 3018, 3704, 1406, 3743, 1407, 1408, 0, 0,
	1406, 2905, 1407, 1408, 2907, 2908, 2909, 0, 0, 0,
	2910, 2911, 3745, 0, 2912, 0, 2913, 3699, 3700, 0,
	2614, 1409, 0, 2914, 0, 2915, 0, 0, 0, 2916,
	0, 2917, 0, 1409, 2918, 0, 2919, 0, 2920, 0,
	2921, 0, 2922, 3749, 2923, 0, 2924, 0, 2925, 2611,
	2926, 0, 2927, 0, 2928, 1409, 2929, 2610, 2930, 1409,
	2931, 0, 2932, 0, 2933, 1409, 2934, 2609, 2935, 0,
	1409, 1406, 2936, 1407, 1408, 2152, 2938, 0, 0, 2940,
	0, 0, 2942, 2943, 2944, 2945, 3703, 0, 1409, 0,
	2946, 2152, 2152, 2152, 2152, 2152, 0, 0, 0, 3751,
	1406, 0, 1407, 1408, 0, 2607, 2956, 0, 1406, 0,
	1407, 1408, 0, 0, 1409, 1004, 0, 2603, 1406, 0,
	1407, 1408, 2970, 2971, 2972, 2973, 2974, 2975, 41, 3758,
	0, 2976, 2977, 3770, 2978, 0, 2979, 0, 3765, 2562,
	3775, 3767, 0, 2542, 0, 0, 0, 3762, 3734, 2541,
	0, 0, 0, 0, 2537, 0, 1406, 0, 1407, 1408,
	3791, 1409, 0, 0, 0, 0, 3792, 3793, 1406, 0,
	1407, 1408, 2535, 0, 0, 0, 0, 0, 0, 0,
	0, 3010, 0, 0, 3785, 0, 0, 3786, 3804, 0,
	1406, 0, 1407, 1408, 1406, 0, 1407, 1408, 2501, 0,
	1406, 0, 1407, 1408, 0, 1406, 3040, 1407, 1408, 3794,
	0, 0, 0, 0, 3830, 3831, 0, 0, 0, 3801,
	41, 3015, 0, 1406, 0, 1407, 1408, 3837, 3840, 3842,
	3844, 3838, 0, 3809, 3822, 3814, 0, 3819, 3816, 3815,
	3813, 3818, 3817, 0, 3811, 2490, 0, 0, 0, 1406,
	3806, 1407, 1408, 3872, 0, 3664, 3825, 0, 0, 0,
	3848, 0, 0, 0, 0, 0, 3851, 3103, 0, 0,
	3869, 3859, 3864, 0, 0, 0, 0, 0, 0, 3837,
	0, 0, 3879, 3838, 0, 0, 0, 3877, 0, 0,
	0, 0, 0, 3890, 0, 0, 1406, 0, 1407, 1408,
	0, 0, 0, 0, 0, 0, 0, 3888, 0, 0,
	3893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3912, 3914, 3916, 1214,
	3909, 1214, 1214, 1911, 0, 0, 3908, 2022, 0, 3906,
	0, 0, 2020, 3917, 3924, 3920, 3918, 3922, 0, 0,
	0, 0, 0, 0, 0, 3774, 0, 3837, 3935, 3192,
	3932, 3838, 0, 3784, 0, 0, 3938, 0, 0, 0,
	0, 3944, 3946, 3201, 3947, 3948, 0, 0, 0, 0,
	0, 976, 1450, 1455, 1456, 0, 1459, 0, 1460, 1462,
	1463, 1464, 2022, 1467, 1468, 1470, 1470, 2020, 1470, 1470,
	1475, 1475, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 3955, 3956, 3700, 3954, 1587, 3921, 1589, 1590,
	1591, 1592, 1593, 1461, 0, 0, 0, 0, 0, 0,
	1475, 1475, 1475, 1475, 1475, 1475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3384,
	0, 0, 3953, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 976, 0, 0, 0, 976,
	0, 0, 0, 0, 0, 976, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 3428, 0, 3429,
	2800, 0, 3430, 0, 0, 3433, 3434, 0, 0, 0,
	0, 0, 0, 127, 3438, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 3439, 0,
	3440, 0, 3441, 0, 3442, 0, 3443, 0, 3444, 0,
	3445, 0, 3446, 0, 3447, 0, 3448, 0, 3449, 0,
	3450, 0, 3451, 0, 3452, 0, 3453, 160, 3454, 0,
	0, 0, 0, 148, 0, 3456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 168, 0, 0, 3473, 0,
	3892, 3474, 0, 3475, 3476, 0, 3477, 0, 3478, 0,
	1724, 188, 0, 3479, 1782, 1783, 159, 158, 187, 0,
	0, 0, 1778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 149, 3504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 3512,
	0, 0, 3514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 3632, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 153, 1784,
	156, 0, 1781, 0, 154, 155, 1782, 1783, 159, 158,
	187, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 84, 43, 44,
	86, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 47, 75, 76, 0, 73, 77, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3733, 0,
	0, 0, 0, 61, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	153, 1784, 156, 0, 1781, 0, 154, 155, 0, 1725,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1214, 1214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 85,
	0, 1738, 1741, 1742, 1743, 1744, 1745, 1746, 0, 1747,
	1748, 1750, 1751, 1749, 1752, 1753, 1726, 1727, 1728, 1729,
	1710, 1711, 1739, 897, 1713, 0, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 0, 0, 1723, 1730, 1731,
	1732, 1733, 0, 1734, 1735, 1736, 1737, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 53, 56, 55, 58, 0,
	72, 0, 0, 81, 78, 0, 162, 0, 193, 0,
	0, 193, 0, 0, 0, 681, 0, 0, 0, 0,
	687, 3773, 0, 0, 0, 0, 0, 60, 89, 88,
	0, 193, 70, 71, 57, 0, 0, 0, 0, 0,
	79, 80, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3787, 0, 0, 3788, 0, 3789, 0, 0, 0, 0,
	0, 687, 193, 687, 0, 0, 150, 0, 0, 151,
	0, 0, 62, 63, 0, 64, 65, 66, 67, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 3870,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	3885, 151, 3886, 0, 3887, 0, 0, 0, 0, 0,
	164, 169, 166, 172, 173, 174, 176, 178, 179, 180,
	181, 0, 0, 0, 0, 0, 182, 184, 185, 186,
	0, 163, 0, 87, 0, 0, 0, 0, 175, 2273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3933, 0, 3934, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 164, 169, 166, 172, 173, 174, 176, 178,
	179, 180, 181, 92, 0, 0, 0, 0, 182, 184,
	185, 186, 0, 0, 1037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 966, 0, 914, 0, 0,
	0, 902, 915, 916, 917, 918, 903, 0, 0, 904,
	905, 0, 906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 911, 919, 920, 0,
	0, 0, 0, 0, 0, 0, 1033, 0, 0, 69,
	1738, 1741, 1742, 1743, 1744, 1745, 1746, 0, 1747, 1748,
	1750, 1751, 1749, 1752, 1753, 1726, 1727, 1728, 1729, 1710,
	1711, 1739, 0, 1713, 0, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 3137, 3138, 1723, 1730, 1731, 1732,
	1733, 0, 1734, 1735, 1736, 1737, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3139,
	0, 0, 0, 0, 0, 0, 0, 2482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 93, 193, 0, 914, 193, 0,
	0, 902, 915, 916, 917, 918, 903, 0, 0, 904,
	905, 0, 906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 911, 919, 920, 0,
	687, 0, 687, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3140, 3141, 0, 0,
	0, 0, 687, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 3137, 3138, 0, 0, 0, 0,
	0, 0, 0, 1453, 0, 0, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 0, 867,
	0, 0, 0, 871, 0, 0, 868, 869, 0, 0,
	0, 870, 872, 0, 0, 0, 2646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3139,
	0, 0, 0, 0, 0, 0, 0, 0, 2678, 0,
	0, 0, 0, 914, 0, 2188, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2717, 2718, 0,
	0, 0, 0, 0, 0, 0, 2273, 0, 0, 976,
	2737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3140, 3141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1453, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 687, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2814, 0, 0, 0, 1153, 193, 1159,
	0, 0, 1161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1453, 0, 0, 0, 0, 0, 687, 687, 0, 687,
	0, 687, 687, 0, 687, 687, 687, 687, 687, 687,
	0, 0, 0, 0, 0, 0, 0, 1453, 0, 0,
	1453, 687, 1453, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 914, 0, 687, 0, 193, 915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 687, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2957, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3019, 0,
	85, 0, 0, 2273, 2273, 2273, 2273, 2273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2273, 0, 0, 2273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 687, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	3125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 1841, 0, 0,
	0, 1453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 687,
	0, 0, 1886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 0, 0, 0, 0,
	0, 0, 1926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2273, 193, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 3345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 687, 0, 0, 2196, 193, 0, 193, 0,
	193, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 687, 0, 0, 896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 687, 0, 0,
	0, 687, 687, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3480, 193,
	3484, 3485, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 193, 0, 0, 193,
	0, 193, 0, 3019, 0, 85, 686, 3019, 686, 0,
	193, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	0, 2196, 2259, 0, 0, 0, 0, 0, 0, 0,
	2263, 0, 2266, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 3760, 0, 0, 0,
	0, 0, 687, 1973, 0, 0, 0, 0, 0, 0,
	2423, 0, 0, 687, 85, 0, 0, 0, 0, 2440,
	2441, 0, 0, 2445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2450, 0, 0, 193, 0, 0,
	0, 2453, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3805, 0, 0, 0, 0, 85, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 193, 193, 193, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3889, 0, 0, 193, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 1369, 686, 686, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 854, 0, 0, 0, 0, 0, 0, 1452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1005, 1005, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 0, 2738, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 1452, 0, 0, 0,
	2787, 0, 0, 0, 687, 0, 0, 0, 1453, 0,
	0, 687, 687, 1453, 193, 193, 193, 193, 193, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 193, 0, 193, 0, 0, 193, 193, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 686, 0,
	0, 0, 0, 0, 0, 0, 2836, 2837, 2838, 2839,
	2840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	1973, 2850, 0, 686, 0, 0, 687, 0, 0, 1453,
	0, 0, 0, 0, 687, 0, 0, 0, 686, 193,
	0, 0, 0, 0, 0, 2858, 0, 0, 0, 1755,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 686, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 1452, 1801, 0, 0, 1804,
	1805, 686, 686, 0, 686, 0, 686, 686, 0, 686,
	686, 686, 686, 686, 686, 0, 0, 0, 0, 0,
	0, 0, 1452, 1836, 1837, 1452, 686, 1452, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1904, 0, 0, 686, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 193, 193,
	193, 0, 0, 0, 0, 0, 0, 0, 687, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 633, 0, 0, 633, 3093, 0, 0,
	0, 0, 0, 0, 0, 687, 687, 687, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 686,
	853, 0, 0, 3131, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 3143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 3160, 0, 0, 3163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1454, 0, 0, 0, 0, 0, 685, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1452,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	686, 0, 0, 0, 0, 0, 1452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1029, 0,
	1036, 0, 0, 686, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1453, 0, 0, 0, 0, 687, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 1454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3362,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3377,
	0, 0, 3378, 3379, 3380, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 686, 0, 0,
	686, 0, 0, 0, 687, 0, 0, 0, 687, 687,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 2356, 2357, 2358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 1454, 0,
	686, 1799, 0, 0, 1799, 0, 1799, 0, 0, 0,
	0, 0, 2388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1454, 0, 0, 1454, 0,
	1454, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 686, 0, 0,
	0, 1858, 686, 0, 0, 0, 686, 686, 0, 0,
	0, 193, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	193, 0, 1910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 1936, 633, 633, 633,
	633, 633, 633, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1453, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 2196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1452, 0, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 1216,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1005, 1005, 0, 0, 0, 1454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2751, 0, 0, 0, 0, 0, 1005,
	1910, 1005, 1005, 1005, 1005, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1636, 0, 0, 0, 1858, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 986, 0, 1679, 0, 0, 0, 686,
	0, 0, 0, 1799, 1799, 0, 633, 0, 686, 0,
	1697, 0, 0, 1910, 633, 0, 633, 0, 633, 2282,
	0, 0, 0, 0, 1452, 2824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 1807, 0, 1807, 0, 1807, 1807,
	0, 1816, 1807, 1807, 1807, 1807, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1029, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 633, 633, 0, 0, 633, 0, 2447,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 0, 0, 633, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 1452, 0, 0, 686, 686, 1452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1454, 0, 1910,
	1216, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 1452, 0, 0, 0, 0, 686,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3167, 0, 0, 0, 0, 2064, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 3352,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 0,
	0, 2793, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	633, 633, 633, 633, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 686, 686, 686, 633, 633, 1029, 0, 0, 0,
	0, 0, 1036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 1029,
	0, 0, 0, 0, 2016, 0, 0, 0, 2016, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1452, 0, 0,
	0, 0, 686, 0, 686, 0, 0, 0, 0, 2459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	686, 0, 0, 0, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1454, 0, 0, 0,
	0, 1454, 633, 633, 633, 633, 633, 0, 0, 0,
	0, 0, 0, 0, 3038, 0, 0, 0, 0, 0,
	1858, 0, 633, 0, 0, 633, 3046, 1910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 686, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 1454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 0, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1452, 0, 686, 2245, 0, 0, 0, 0, 0,
	0, 2808, 0, 0, 633, 0, 0, 0, 0, 0,
	2813, 0, 0, 0, 0, 0, 0, 686, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 633, 686, 0, 633, 633, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 3537, 3539, 3538, 3589, 3590, 3591, 3592, 3593,
	3594, 3595, 758, 0, 0, 0, 0, 0, 686, 0,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2958, 1858, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 3022, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3543, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3551, 3552, 0, 0, 3614, 3613, 3612, 0,
	0, 3610, 3611, 3609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 0, 0, 0, 0,
	0, 2245, 0, 0, 0, 0, 867, 0, 735, 736,
	871, 738, 739, 868, 869, 0, 733, 737, 870, 872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 756, 757, 3536, 3540, 3541,
	3542, 3553, 3587, 3588, 3596, 3598, 827, 3597, 3599, 3600,
	3601, 3604, 3605, 3606, 3607, 3602, 3603, 3608, 3520, 3524,
	3521, 3522, 3523, 3535, 3525, 3526, 3527, 3528, 3529, 3530,
	3531, 3532, 3533, 3534, 3615, 3616, 3617, 3618, 3619, 3620,
	3546, 3550, 3549, 3547, 3548, 3544, 3545, 3572, 3571, 3573,
	3574, 3575, 3576, 3577, 3578, 3580, 3579, 3581, 3582, 3583,
	3584, 3585, 3586, 3554, 3555, 3558, 3559, 3557, 3556, 3560,
	3569, 3570, 3561, 3562, 3563, 3564, 3565, 3566, 3568, 3567,
	810, 811, 812, 813, 814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 873, 3272, 874,
	0, 0, 878, 0, 0, 0, 880, 879, 0, 881,
	847, 846, 0, 0, 875, 876, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2245, 2245, 0, 0, 0,
	0, 3824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 3416, 3417, 3418, 3419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3508, 0, 3510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3721, 0, 0, 0, 3721, 3721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1216,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	3272, 0, 3854, 1352, 1336, 506, 0, 1279, 1355, 1248,
	1267, 1365, 1270, 1273, 1315, 1226, 1293, 405, 1264, 1219,
	1252, 1221, 1259, 1222, 1250, 1281, 263, 1247, 1338, 1297,
	1354, 356, 260, 1228, 1253, 419, 1269, 200, 1317, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 1361, 360, 1303, 0, 485, 390, 0,
	0, 0, 1283, 1342, 1291, 1329, 1278, 1316, 1236, 1302,
	1356, 1265, 1312, 1357, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 3826, 898, 0, 0, 0,
	0, 3827, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 1261, 1309, 1351, 1262, 1311, 258, 313,
	265, 257, 544, 1362, 1341, 1225, 1290, 1350, 0, 0,
	224, 1353, 1285, 0, 1314, 0, 1368, 1220, 1305, 0,
	1223, 1227, 1364, 1346, 1256, 268, 0, 0, 0, 0,
	0, 0, 0, 1282, 1292, 1326, 1330, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 1301, 0,
	0, 0, 1232, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 1235, 0, 1255, 1327, 0, 1218, 290, 1229, 391,
	250, 0, 442, 1334, 1345, 1277, 586, 1349, 1275, 1274,
	1321, 1233, 1340, 1268, 355, 1231, 322, 195, 220, 0,
	1266, 401, 450, 462, 1339, 1251, 1260, 248, 1258, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 1300,
	1319, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 1230, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 1246, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 1335, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	1324, 1367, 414, 461, 235, 566, 484, 1240, 1245, 1238,
	0, 1306, 1241, 1239, 1295, 1296, 1242, 1358, 1359, 1360,
	1343, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	1328, 1234, 0, 1243, 1244, 1337, 1347, 1348, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 1299, 194, 216, 358,
	1363, 443, 281, 606, 576, 571, 201, 218, 1237, 255,
	1249, 1257, 0, 1263, 1271, 1272, 1284, 1286, 1287, 1288,
	1289, 1307, 1308, 1310, 1318, 1320, 1323, 1325, 1332, 1344,
	1366, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 1298,
	1304, 371, 274, 297, 312, 1313, 575, 490, 222, 455,
	283, 246, 1331, 1333, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 1294, 1322,
	366, 540, 541, 308, 386, 0, 0, 0, 1352, 1336,
	506, 0, 1279, 1355, 1248, 1267, 1365, 1270, 1273, 1315,
	1226, 1293, 405, 1264, 1219, 1252, 1221, 1259, 1222, 1250,
	1281, 263, 1247, 1338, 1297, 1354, 356, 260, 1228, 1253,
	419, 1269, 200, 1317, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 1361, 360,
	1303, 0, 485, 390, 0, 0, 0, 1283, 1342, 1291,
	1329, 1278, 1316, 1236, 1302, 1356, 1265, 1312, 1357, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 1261, 1309,
	1351, 1262, 1311, 258, 313, 265, 257, 544, 1362, 1341,
	1225, 1290, 1350, 0, 0, 224, 1353, 1285, 0, 1314,
	0, 1368, 1220, 1305, 0, 1223, 1227, 1364, 1346, 1256,
	268, 0, 0, 0, 0, 0, 0, 0, 1282, 1292,
	1326, 1330, 1276, 0, 0, 0, 0, 0, 0, 3047,
	0, 1254, 0, 1301, 0, 0, 0, 1232, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 1235, 0, 1255, 1327,
	0, 1218, 290, 1229, 391, 250, 0, 442, 1334, 1345,
	1277, 586, 1349, 1275, 1274, 1321, 1233, 1340, 1268, 355,
	1231, 322, 195, 220, 0, 1266, 401, 450, 462, 1339,
	1251, 1260, 248, 1258, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 1300, 1319, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 1230, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 1246, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 1335, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 1324, 1367, 414, 461, 235,
	566, 484, 1240, 1245, 1238, 0, 1306, 1241, 1239, 1295,
	1296, 1242, 1358, 1359, 1360, 1343, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 1328, 1234, 0, 1243, 1244,
	1337, 1347, 1348, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 1299, 194, 216, 358, 1363, 443, 281, 606, 576,
	571, 201, 218, 1237, 255, 1249, 1257, 0, 1263, 1271,
	1272, 1284, 1286, 1287, 1288, 1289, 1307, 1308, 1310, 1318,
	1320, 1323, 1325, 1332, 1344, 1366, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 1298, 1304, 371, 274, 297, 312,
	1313, 575, 490, 222, 455, 283, 246, 1331, 1333, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 1294, 1322, 366, 540, 541, 308, 386,
	0, 0, 0, 1352, 1336, 506, 0, 1279, 1355, 1248,
	1267, 1365, 1270, 1273, 1315, 1226, 1293, 405, 1264, 1219,
	1252, 1221, 1259, 1222, 1250, 1281, 263, 1247, 1338, 1297,
	1354, 356, 260, 1228, 1253, 419, 1269, 200, 1317, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 1361, 360, 1303, 0, 485, 390, 0,
	0, 0, 1283, 1342, 1291, 1329, 1278, 1316, 1236, 1302,
	1356, 1265, 1312, 1357, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 1261, 1309, 1351, 1262, 1311, 258, 313,
	265, 257, 544, 1362, 1341, 1225, 1290, 1350, 0, 0,
	224, 1353, 1285, 0, 1314, 0, 1368, 1220, 1305, 0,
	1223, 1227, 1364, 1346, 1256, 268, 0, 0, 0, 0,
	0, 0, 0, 1282, 1292, 1326, 1330, 1276, 0, 0,
	0, 0, 0, 0, 3008, 0, 1254, 0, 1301, 0,
	0, 0, 1232, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 1235, 0, 1255, 1327, 0, 1218, 290, 1229, 391,
	250, 0, 442, 1334, 1345, 1277, 586, 1349, 1275, 1274,
	1321, 1233, 1340, 1268, 355, 1231, 322, 195, 220, 0,
	1266, 401, 450, 462, 1339, 1251, 1260, 248, 1258, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 1300,
	1319, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 1230, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 1246, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 1335, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	1324, 1367, 414, 461, 235, 566, 484, 1240, 1245, 1238,
	0, 1306, 1241, 1239, 1295, 1296, 1242, 1358, 1359, 1360,
	1343, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	1328, 1234, 0, 1243, 1244, 1337, 1347, 1348, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 1299, 194, 216, 358,
	1363, 443, 281, 606, 576, 571, 201, 218, 1237, 255,
	1249, 1257, 0, 1263, 1271, 1272, 1284, 1286, 1287, 1288,
	1289, 1307, 1308, 1310, 1318, 1320, 1323, 1325, 1332, 1344,
	1366, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 1298,
	1304, 371, 274, 297, 312, 1313, 575, 490, 222, 455,
	283, 246, 1331, 1333, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 1294, 1322,
	366, 540, 541, 308, 386, 0, 0, 0, 1352, 1336,
	506, 0, 1279, 1355, 1248, 1267, 1365, 1270, 1273, 1315,
	1226, 1293, 405, 1264, 1219, 1252, 1221, 1259, 1222, 1250,
	1281, 263, 1247, 1338, 1297, 1354, 356, 260, 1228, 1253,
	419, 1269, 200, 1317, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 1361, 360,
	1303, 0, 485, 390, 0, 0, 0, 1283, 1342, 1291,
	1329, 1278, 1316, 1236, 1302, 1356, 1265, 1312, 1357, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 1261, 1309,
	1351, 1262, 1311, 258, 313, 265, 257, 544, 1362, 1341,
	1225, 1290, 1350, 0, 0, 224, 1353, 1285, 0, 1314,
	0, 1368, 1220, 1305, 0, 1223, 1227, 1364, 1346, 1256,
	268, 0, 0, 0, 0, 0, 0, 0, 1282, 1292,
	1326, 1330, 1276, 0, 0, 0, 0, 0, 0, 2261,
	0, 1254, 0, 1301, 0, 0, 0, 1232, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 1235, 0, 1255, 1327,
	0, 1218, 290, 1229, 391, 250, 0, 442, 1334, 1345,
	1277, 586, 1349, 1275, 1274, 1321, 1233, 1340, 1268, 355,
	1231, 322, 195, 220, 0, 1266, 401, 450, 462, 1339,
	1251, 1260, 248, 1258, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 1300, 1319, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 1230, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 1246, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 1335, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 1324, 1367, 414, 461, 235,
	566, 484, 1240, 1245, 1238, 0, 1306, 1241, 1239, 1295,
	1296, 1242, 1358, 1359, 1360, 1343, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 1328, 1234, 0, 1243, 1244,
	1337, 1347, 1348, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 1299, 194, 216, 358, 1363, 443, 281, 606, 576,
	571, 201, 218, 1237, 255, 1249, 1257, 0, 1263, 1271,
	1272, 1284, 1286, 1287, 1288, 1289, 1307, 1308, 1310, 1318,
	1320, 1323, 1325, 1332, 1344, 1366, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 1298, 1304, 371, 274, 297, 312,
	1313, 575, 490, 222, 455, 283, 246, 1331, 1333, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 1294, 1322, 366, 540, 541, 308, 386,
	0, 0, 0, 1352, 1336, 506, 0, 1279, 1355, 1248,
	1267, 1365, 1270, 1273, 1315, 1226, 1293, 405, 1264, 1219,
	1252, 1221, 1259, 1222, 1250, 1281, 263, 1247, 1338, 1297,
	1354, 356, 260, 1228, 1253, 419, 1269, 200, 1317, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 1361, 360, 1303, 0, 485, 390, 0,
	0, 0, 1283, 1342, 1291, 1329, 1278, 1316, 1236, 1302,
	1356, 1265, 1312, 1357, 315, 243, 317, 199, 402, 486,
	279, 0, 93, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 1261, 1309, 1351, 1262, 1311, 258, 313,
	265, 257, 544, 1362, 1341, 1225, 1290, 1350, 0, 0,
	224, 1353, 1285, 0, 1314, 0, 1368, 1220, 1305, 0,
	1223, 1227, 1364, 1346, 1256, 268, 0, 0, 0, 0,
	0, 0, 0, 1282, 1292, 1326, 1330, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 1301, 0,
	0, 0, 1232, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 1235, 0, 1255, 1327, 0, 1218, 290, 1229, 391,
	250, 0, 442, 1334, 1345, 1277, 586, 1349, 1275, 1274,
	1321, 1233, 1340, 1268, 355, 1231, 322, 195, 220, 0,
	1266, 401, 450, 462, 1339, 1251, 1260, 248, 1258, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 1300,
	1319, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 1230, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 1246, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 1335, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	1324, 1367, 414, 461, 235, 566, 484, 1240, 1245, 1238,
	0, 1306, 1241, 1239, 1295, 1296, 1242, 1358, 1359, 1360,
	1343, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	1328, 1234, 0, 1243, 1244, 1337, 1347, 1348, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 1299, 194, 216, 358,
	1363, 443, 281, 606, 576, 571, 201, 218, 1237, 255,
	1249, 1257, 0, 1263, 1271, 1272, 1284, 1286, 1287, 1288,
	1289, 1307, 1308, 1310, 1318, 1320, 1323, 1325, 1332, 1344,
	1366, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 1298,
	1304, 371, 274, 297, 312, 1313, 575, 490, 222, 455,
	283, 246, 1331, 1333, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 1294, 1322,
	366, 540, 541, 308, 386, 0, 0, 0, 1352, 1336,
	506, 0, 1279, 1355, 1248, 1267, 1365, 1270, 1273, 1315,
	1226, 1293, 405, 1264, 1219, 1252, 1221, 1259, 1222, 1250,
	1281, 263, 1247, 1338, 1297, 1354, 356, 260, 1228, 1253,
	419, 1269, 200, 1317, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 1361, 360,
	1303, 0, 485, 390, 0, 0, 0, 1283, 1342, 1291,
	1329, 1278, 1316, 1236, 1302, 1356, 1265, 1312, 1357, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 1261, 1309,
	1351, 1262, 1311, 258, 313, 265, 257, 544, 1362, 1341,
	1225, 1290, 1350, 0, 0, 224, 1353, 1285, 0, 1314,
	0, 1368, 1220, 1305, 0, 1223, 1227, 1364, 1346, 1256,
	268, 0, 0, 0, 0, 0, 0, 0, 1282, 1292,
	1326, 1330, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 1254, 0, 1301, 0, 0, 0, 1232, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 1235, 0, 1255, 1327,
	0, 1218, 290, 1229, 391, 250, 0, 442, 1334, 1345,
	1277, 586, 1349, 1275, 1274, 1321, 1233, 1340, 1268, 355,
	1231, 322, 195, 220, 0, 1266, 401, 450, 462, 1339,
	1251, 1260, 248, 1258, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 1300, 1319, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 1230, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 1246, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 1335, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 1324, 1367, 414, 461, 235,
	566, 484, 1240, 1245, 1238, 0, 1306, 1241, 1239, 1295,
	1296, 1242, 1358, 1359, 1360, 1343, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 1328, 1234, 0, 1243, 1244,
	1337, 1347, 1348, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 1299, 194, 216, 358, 1363, 443, 281, 606, 576,
	571, 201, 218, 1237, 255, 1249, 1257, 0, 1263, 1271,
	1272, 1284, 1286, 1287, 1288, 1289, 1307, 1308, 1310, 1318,
	1320, 1323, 1325, 1332, 1344, 1366, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 1298, 1304, 371, 274, 297, 312,
	1313, 575, 490, 222, 455, 283, 246, 1331, 1333, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 1294, 1322, 366, 540, 541, 308, 386,
	0, 0, 0, 1352, 1336, 506, 0, 1279, 1355, 1248,
	1267, 1365, 1270, 1273, 1315, 1226, 1293, 405, 1264, 1219,
	1252, 1221, 1259, 1222, 1250, 1281, 263, 1247, 1338, 1297,
	1354, 356, 260, 1228, 1253, 419, 1269, 200, 1317, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 1361, 360, 1303, 0, 485, 390, 0,
	0, 0, 1283, 1342, 1291, 1329, 1278, 1316, 1236, 1302,
	1356, 1265, 1312, 1357, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 1261, 1309, 1351, 1262, 1311, 258, 313,
	265, 257, 544, 1362, 1341, 1225, 1290, 1350, 0, 0,
	224, 1353, 1285, 0, 1314, 0, 1368, 1220, 1305, 0,
	1223, 1227, 1364, 1346, 1256, 268, 0, 0, 0, 0,
	0, 0, 0, 1282, 1292, 1326, 1330, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 1301, 0,
	0, 0, 1232, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 1235, 0, 1255, 1327, 0, 1218, 290, 1229, 391,
	250, 0, 442, 1334, 1345, 1277, 586, 1349, 1275, 1274,
	1321, 1233, 1340, 1268, 355, 1231, 322, 195, 220, 0,
	1266, 401, 450, 462, 1339, 1251, 1260, 248, 1258, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 1300,
	1319, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 1230, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 1246, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 1335, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	1324, 1367, 414, 461, 235, 566, 484, 1240, 1245, 1238,
	0, 1306, 1241, 1239, 1295, 1296, 1242, 1358, 1359, 1360,
	1343, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	1328, 1234, 0, 1243, 1244, 1337, 1347, 1348, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 1299, 194, 216, 358,
	1363, 443, 281, 606, 576, 571, 201, 218, 1237, 255,
	1249, 1257, 0, 1263, 1271, 1272, 1284, 1286, 1287, 1288,
	1289, 1307, 1308, 1310, 1318, 1320, 1323, 1325, 1332, 1344,
	1366, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 1298,
	1304, 371, 274, 297, 312, 1313, 575, 490, 222, 455,
	283, 246, 1331, 1333, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 1294, 1322,
	366, 540, 541, 308, 386, 0, 0, 0, 1352, 1336,
	506, 0, 1279, 1355, 1248, 1267, 1365, 1270, 1273, 1315,
	1226, 1293, 405, 1264, 1219, 1252, 1221, 1259, 1222, 1250,
	1281, 263, 1247, 1338, 1297, 1354, 356, 260, 1228, 1253,
	419, 1269, 200, 1317, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 1361, 360,
	1303, 0, 485, 390, 0, 0, 0, 1283, 1342, 1291,
	1329, 1278, 1316, 1236, 1302, 1356, 1265, 1312, 1357, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 1261, 1309,
	1351, 1262, 1311, 258, 313, 265, 257, 544, 1362, 1341,
	1225, 1290, 1350, 0, 0, 224, 1353, 1285, 0, 1314,
	0, 1368, 1220, 1305, 0, 1223, 1227, 1364, 1346, 1256,
	268, 0, 0, 0, 0, 0, 0, 0, 1282, 1292,
	1326, 1330, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 1254, 0, 1301, 0, 0, 0, 1232, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 1235, 0, 1255, 1327,
	0, 1218, 290, 1229, 391, 250, 0, 442, 1334, 1345,
	1277, 586, 1349, 1275, 1274, 1321, 1233, 1340, 1268, 355,
	1231, 322, 195, 220, 0, 1266, 401, 450, 462, 1339,
	1251, 1260, 248, 1258, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 1300, 1319, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 1230, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 1246, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 1335, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 1324, 1367, 414, 461, 235,
	566, 484, 1240, 1245, 1238, 0, 1306, 1241, 1239, 1295,
	1296, 1242, 1358, 1359, 1360, 1343, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 1328, 1234, 0, 1243, 1244,
	1337, 1347, 1348, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 1299, 194, 216, 358, 1363, 443, 281, 606, 576,
	571, 201, 218, 1237, 255, 1249, 1257, 0, 1263, 1271,
	1272, 1284, 1286, 1287, 1288, 1289, 1307, 1308, 1310, 1318,
	1320, 1323, 1325, 1332, 1344, 1366, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 1298, 1304, 371, 274, 297, 312,
	1313, 575, 490, 222, 455, 283, 246, 1331, 1333, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 1294, 1322, 366, 540, 541, 308, 386,
	0, 0, 0, 0, 0, 506, 0, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 718, 0, 0, 0, 263, 723, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 730, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 726, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 93, 0, 0, 914, 898, 702, 864, 902,
	915, 916, 917, 918, 903, 0, 233, 904, 905, 240,
	906, 0, 863, 760, 762, 761, 817, 818, 819, 820,
	821, 822, 823, 758, 911, 919, 920, 0, 258, 313,
	265, 257, 544, 0, 0, 2096, 2097, 2098, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 698, 715,
	0, 729, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 713, 0, 0, 0, 0, 858, 0,
	714, 0, 0, 722, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 857, 0, 0, 586, 0, 0, 855,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 908, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 909, 910, 249, 608, 766, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 774, 775, 273, 299, 843, 842, 841,
	298, 300, 839, 840, 838, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 867, 856, 735,
	736, 871, 738, 739, 868, 869, 732, 733, 737, 870,
	872, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	859, 721, 720, 0, 728, 0, 756, 757, 759, 763,
	764, 765, 776, 815, 816, 824, 826, 827, 825, 828,
	829, 830, 833, 834, 835, 836, 831, 832, 837, 740,
	744, 741, 742, 743, 755, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 882, 883, 884, 885, 886,
	887, 769, 773, 772, 770, 771, 767, 768, 795, 794,
	796, 797, 798, 799, 800, 801, 803, 802, 804, 805,
	806, 807, 808, 809, 777, 778, 781, 782, 780, 779,
	783, 792, 793, 784, 785, 786, 787, 788, 789, 791,
	790, 810, 811, 812, 813, 814, 719, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 873, 255,
	874, 0, 0, 878, 0, 0, 0, 880, 879, 0,
	881, 847, 846, 0, 0, 875, 876, 0, 877, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 888, 889, 890, 891, 892, 893, 894,
	895, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 913, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 718, 0, 0, 0, 263, 723, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 730, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 726, 727, 0, 0, 0, 0, 0,
	0, 2290, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 93, 0, 0, 914, 898, 702, 864, 902, 915,
	916, 917, 918, 903, 0, 233, 904, 905, 240, 906,
	0, 863, 760, 762, 761, 817, 818, 819, 820, 821,
	822, 823, 758, 911, 919, 920, 2291, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 698, 715, 0,
	729, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 713, 0, 0, 0, 0, 858, 0, 714,
	0, 0, 722, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 857, 0, 0, 586, 0, 0, 855, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 908, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 909, 910, 249, 608, 766, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 774, 775, 273, 299, 843, 842, 841, 298,
	300, 839, 840, 838, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 867, 856, 735, 736,
	871, 738, 739, 868, 869, 732, 733, 737, 870, 872,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 859,
	721, 720, 0, 728, 0, 756, 757, 759, 763, 764,
	765, 776, 815, 816, 824, 826, 827, 825, 828, 829,
	830, 833, 834, 835, 836, 831, 832, 837, 740, 744,
	741, 742, 743, 755, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 882, 883, 884, 885, 886, 887,
	769, 773, 772, 770, 771, 767, 768, 795, 794, 796,
	797, 798, 799, 800, 801, 803, 802, 804, 805, 806,
	807, 808, 809, 777, 778, 781, 782, 780, 779, 783,
	792, 793, 784, 785, 786, 787, 788, 789, 791, 790,
	810, 811, 812, 813, 814, 719, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 873, 255, 874,
	0, 0, 878, 0, 0, 0, 880, 879, 0, 881,
	847, 846, 0, 0, 875, 876, 0, 877, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 888, 889, 890, 891, 892, 893, 894, 895,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 913, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 0, 386, 366,
	540, 541, 308, 84, 506, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 718, 0, 0, 0, 263, 723, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 730, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 726, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 93, 0, 0, 914, 898, 702, 864, 902, 915,
	916, 917, 918, 903, 0, 233, 904, 905, 240, 906,
	0, 863, 760, 762, 761, 817, 818, 819, 820, 821,
	822, 823, 758, 911, 919, 920, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 698, 715, 0,
	729, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 713, 0, 0, 0, 0, 858, 0, 714,
	0, 0, 722, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 857, 0, 0, 586, 0, 0, 855, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 908, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 909, 910, 249, 608, 766, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 774, 775, 273, 299, 843, 842, 841, 298,
	300, 839, 840, 838, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 867, 856, 735, 736,
	871, 738, 739, 868, 869, 732, 733, 737, 870, 872,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 859,
	721, 720, 0, 728, 0, 756, 757, 759, 763, 764,
	765, 776, 815, 816, 824, 826, 827, 825, 828, 829,
	830, 833, 834, 835, 836, 831, 832, 837, 740, 744,
	741, 742, 743, 755, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 882, 883, 884, 885, 886, 887,
	769, 773, 772, 770, 771, 767, 768, 795, 794, 796,
	797, 798, 799, 800, 801, 803, 802, 804, 805, 806,
	807, 808, 809, 777, 778, 781, 782, 780, 779, 783,
	792, 793, 784, 785, 786, 787, 788, 789, 791, 790,
	810, 811, 812, 813, 814, 719, 194, 216, 358, 92,
	443, 281, 606, 576, 571, 201, 218, 873, 255, 874,
	0, 0, 878, 0, 0, 0, 880, 879, 0, 881,
	847, 846, 0, 0, 875, 876, 0, 877, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 888, 889, 890, 891, 892, 893, 894, 895,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 913, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	718, 0, 0, 0, 263, 723, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 730, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 726, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	93, 0, 0, 914, 898, 702, 864, 902, 915, 916,
	917, 918, 903, 0, 233, 904, 905, 240, 906, 0,
	863, 760, 762, 761, 817, 818, 819, 820, 821, 822,
	823, 758, 911, 919, 920, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 698, 715, 0, 729,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	712, 713, 0, 0, 0, 0, 858, 0, 714, 0,
	0, 722, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 857, 0, 0, 586, 0, 0, 855, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 908, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 3812, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 909, 910, 249, 608, 766, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 774, 775, 273, 299, 843, 842, 841, 298, 300,
	839, 840, 838, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 867, 856, 735, 736, 871,
	738, 739, 868, 869, 732, 733, 737, 870, 872, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 859, 721,
	720, 0, 728, 0, 756, 757, 759, 763, 764, 765,
	776, 815, 816, 824, 826, 827, 825, 828, 829, 830,
	833, 834, 835, 836, 831, 832, 837, 740, 744, 741,
	742, 743, 755, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 882, 883, 884, 885, 886, 887, 769,
	773, 772, 770, 771, 767, 768, 795, 794, 796, 797,
	798, 799, 800, 801, 803, 802, 804, 805, 806, 807,
	808, 809, 777, 778, 781, 782, 780, 779, 783, 792,
	793, 784, 785, 786, 787, 788, 789, 791, 790, 810,
	811, 812, 813, 814, 719, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 873, 255, 874, 0,
	0, 878, 0, 0, 0, 880, 879, 0, 881, 847,
	846, 0, 0, 875, 876, 0, 877, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 888, 889, 890, 891, 892, 893, 894, 895, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	913, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 718,
	0, 0, 0, 263, 723, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	730, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 726, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 93,
	0, 1657, 914, 898, 702, 864, 902, 915, 916, 917,
	918, 903, 0, 233, 904, 905, 240, 906, 0, 863,
	760, 762, 761, 817, 818, 819, 820, 821, 822, 823,
	758, 911, 919, 920, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 698, 715, 0, 729, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	713, 0, 0, 0, 0, 858, 0, 714, 0, 0,
	722, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	857, 0, 0, 586, 0, 0, 855, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 908, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 909, 910, 249, 608, 766, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	774, 775, 273, 299, 843, 842, 841, 298, 300, 839,
	840, 838, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 867, 856, 735, 736, 871, 738,
	739, 868, 869, 732, 733, 737, 870, 872, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 859, 721, 720,
	0, 728, 0, 756, 757, 759, 763, 764, 765, 776,
	815, 816, 824, 826, 827, 825, 828, 829, 830, 833,
	834, 835, 836, 831, 832, 837, 740, 744, 741, 742,
	743, 755, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 882, 883, 884, 885, 886, 887, 769, 773,
	772, 770, 771, 767, 768, 795, 794, 796, 797, 798,
	799, 800, 801, 803, 802, 804, 805, 806, 807, 808,
	809, 777, 778, 781, 782, 780, 779, 783, 792, 793,
	784, 785, 786, 787, 788, 789, 791, 790, 810, 811,
	812, 813, 814, 719, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 873, 255, 874, 0, 0,
	878, 0, 0, 0, 880, 879, 0, 881, 847, 846,
	0, 0, 875, 876, 0, 877, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	888, 889, 890, 891, 892, 893, 894, 895, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 913,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 718, 0,
	0, 0, 263, 723, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 730,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	726, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 914, 898, 702, 864, 902, 915, 916, 917, 918,
	903, 0, 233, 904, 905, 240, 906, 0, 863, 760,
	762, 761, 817, 818, 819, 820, 821, 822, 823, 758,
	911, 919, 920, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 698, 715, 0, 729, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 712, 713,
	1003, 0, 0, 0, 858, 0, 714, 0, 0, 722,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 857,
	0, 0, 586, 0, 0, 855, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 908, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	909, 910, 249, 608, 766, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 774,
	775, 273, 299, 843, 842, 841, 298, 300, 839, 840,
	838, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 867, 856, 735, 736, 871, 738, 739,
	868, 869, 732, 733, 737, 870, 872, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 859, 721, 720, 0,
	728, 0, 756, 757, 759, 763, 764, 765, 776, 815,
	816, 824, 826, 827, 825, 828, 829, 830, 833, 834,
	835, 836, 831, 832, 837, 740, 744, 741, 742, 743,
	755, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 882, 883, 884, 885, 886, 887, 769, 773, 772,
	770, 771, 767, 768, 795, 794, 796, 797, 798, 799,
	800, 801, 803, 802, 804, 805, 806, 807, 808, 809,
	777, 778, 781, 782, 780, 779, 783, 792, 793, 784,
	785, 786, 787, 788, 789, 791, 790, 810, 811, 812,
	813, 814, 719, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 873, 255, 874, 0, 0, 878,
	0, 0, 0, 880, 879, 0, 881, 847, 846, 0,
	0, 875, 876, 0, 877, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 888,
	889, 890, 891, 892, 893, 894, 895, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 913, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 718, 0, 0,
	0, 263, 723, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 730, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 93, 0, 0,
	914, 898, 702, 864, 902, 915, 916, 917, 918, 903,
	0, 233, 904, 905, 240, 906, 0, 863, 760, 762,
	761, 817, 818, 819, 820, 821, 822, 823, 758, 911,
	919, 920, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 698, 715, 0, 729, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 713, 0,
	0, 0, 0, 858, 0, 714, 0, 0, 722, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 857, 0,
	0, 586, 0, 0, 855, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 908, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 909,
	910, 249, 608, 766, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 774, 775,
	273, 299, 843, 842, 841, 298, 300, 839, 840, 838,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 867, 856, 735, 736, 871, 738, 739, 868,
	869, 732, 733, 737, 870, 872, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 859, 721, 720, 0, 728,
	0, 756, 757, 759, 763, 764, 765, 776, 815, 816,
	824, 826, 827, 825, 828, 829, 830, 833, 834, 835,
	836, 831, 832, 837, 740, 744, 741, 742, 743, 755,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	882, 883, 884, 885, 886, 887, 769, 773, 772, 770,
	771, 767, 768, 795, 794, 796, 797, 798, 799, 800,
	801, 803, 802, 804, 805, 806, 807, 808, 809, 777,
	778, 781, 782, 780, 779, 783, 792, 793, 784, 785,
	786, 787, 788, 789, 791, 790, 810, 811, 812, 813,
	814, 719, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 873, 255, 874, 0, 0, 878, 0,
	0, 0, 880, 879, 0, 881, 847, 846, 0, 0,
	875, 876, 0, 877, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 888, 889,
	890, 891, 892, 893, 894, 895, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 913, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 718, 0, 0, 0,
	263, 723, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 730, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 726, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 93, 0, 0, 914,
	898, 1024, 864, 902, 915, 916, 917, 918, 903, 0,
	233, 904, 905, 240, 906, 0, 863, 760, 762, 761,
	817, 818, 819, 820, 821, 822, 823, 758, 911, 919,
	920, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 729, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 712, 713, 0, 0,
	0, 0, 858, 0, 714, 0, 0, 722, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	933, 934, 935, 936, 937, 938, 939, 940, 941, 942,
	943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 857, 0, 0,
	586, 0, 0, 855, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 908, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 909, 910,
	249, 608, 766, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 774, 775, 273,
	299, 843, 842, 841, 298, 300, 839, 840, 838, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 867, 856, 735, 736, 871, 738, 739, 868, 869,
	732, 733, 737, 870, 872, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 859, 721, 720, 0, 728, 0,
	756, 757, 759, 763, 764, 765, 776, 815, 816, 824,
	826, 827, 825, 828, 829, 830, 833, 834, 835, 836,
	831, 832, 837, 740, 744, 741, 742, 743, 755, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 882,
	883, 884, 885, 886, 887, 769, 773, 772, 770, 771,
	767, 768, 795, 794, 796, 797, 798, 799, 800, 801,
	803, 802, 804, 805, 806, 807, 808, 809, 777, 778,
	781, 782, 780, 779, 783, 792, 793, 784, 785, 786,
	787, 788, 789, 791, 790, 810, 811, 812, 813, 814,
	719, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 873, 255, 874, 0, 0, 878, 0, 0,
	0, 880, 879, 0, 881, 847, 846, 0, 0, 875,
	876, 0, 877, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 888, 889, 890,
	891, 892, 893, 894, 895, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 913, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435,
	1434, 1436, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 0, 0, 0, 0, 0,
	194, 216, 358, 0, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 1075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 1074, 586, 0,
	0, 0, 0, 0, 1071, 1072, 355, 1032, 322, 195,
	220, 1065, 1069, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 0, 0, 0, 0, 0, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 1620, 898, 0, 0,
	1617, 0, 0, 0, 0, 1615, 0, 233, 1616, 1614,
	240, 1619, 0, 863, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 0, 0, 0, 0, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 0,
	386, 366, 540, 541, 308, 84, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 93, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 0, 0, 0, 0, 0, 194, 216,
	358, 92, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 2277, 0, 0,
	2276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 1676,
	0, 366, 540, 541, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 1678, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 1680, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 1406, 0, 1407, 1408, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 0, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 0, 386,
	366, 540, 541, 308, 84, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 93, 0, 1657, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 0, 194, 216, 358,
	92, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 93, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	0, 0, 0, 0, 0, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 2277, 0, 0, 2276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 2227,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 1859, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 2225, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	0, 0, 0, 0, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 355, 1032, 322, 195, 220, 1030, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 0,
	0, 0, 0, 0, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 2227, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 1859, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 0, 0,
	0, 0, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 1657,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 586, 0, 0, 0, 3722, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 2017,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 0, 0, 0, 0,
	0, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 2702, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 0, 0, 0, 0, 0,
	194, 216, 358, 0, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 2687, 0, 0, 0, 0, 233, 0,
	0, 240, 2688, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 0, 0, 0, 0, 0, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 1699, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 1698, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 0, 0, 0, 0, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 678, 679, 680, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 0, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 586, 0, 0, 0, 3847,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	0, 0, 0, 0, 0, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 1859, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	0, 0, 0, 0, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 3722, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 0,
	0, 0, 0, 0, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 0, 0,
	0, 0, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 2278, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 1680,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 0, 0, 0, 0,
	0, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 0, 0, 0, 0, 0,
	194, 216, 358, 1971, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 1962, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 0, 0, 0, 0, 0, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	1826, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 0, 0, 0, 0, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 1824,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 0, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 1822, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	0, 0, 0, 0, 0, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 1820, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	0, 0, 0, 0, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 1818, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 0,
	0, 0, 0, 0, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 1814, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 0, 0,
	0, 0, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 1812, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 1810, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 0, 0, 0, 0,
	0, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 1785, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 0, 0, 0, 0, 0,
	194, 216, 358, 0, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 1684, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 0, 0, 0, 0, 0, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 93, 0, 0, 0, 898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 0, 0, 0, 0, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 0, 0, 0, 0, 0, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 1384, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	0, 0, 0, 0, 0, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 984, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 631, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	0, 0, 0, 0, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 0,
	0, 0, 0, 0, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	3855, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 0, 0,
	0, 0, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 0, 0, 0,
	0, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 0, 0, 0, 0,
	0, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 0, 0, 366, 540, 541, 308,
}

var yyPact = [...]int{
	-1000, -1000, 4448, -1000, -506, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2174, 2223, -1000, -1000, -1000, -1000, 2347, -1000, 757, 1873,
	-1000, 2141, 359, -1000, 51579, 518, -1000, 48783, 517, 642,
	268, 33405, -1000, 212, -1000, 199, 50181, 207, -1000, -1000,
	-1000, -1000, -400, 21520, 2043, 74, 73, 51579, -1000, -1000,
	-1000, -1000, 2308, 1810, -1000, 413, -1000, -1000, -1000, -1000,
	-1000, -1000, 48084, -1000, 864, -1000, -1000, 2160, 2151, 2356,
	678, 2110, -1000, 2255, 1810, -1000, 21520, 2292, 2227, 20821,
	20821, 459, -1000, -1000, 387, -1000, -1000, 28512, 51579, 36201,
	400, -1000, 2141, -1000, -1000, -1000, 84, -1000, 327, 1724,
	-1000, 1723, -1000, 608, 879, 383, 484, 464, 378, 370,
	367, 366, 364, 361, 356, 355, 385, -1000, 696, 696,
	-173, -180, 710, 541, 391, 391, 787, 493, 2065, 2063,
	-1000, -1000, 696, 696, 696, 363, 696, 696, 696, 696,
	296, 294, 696, 696, 696, 696, 696, 696, 696, 696,
	696, 696, 696, 696, 696, 696, 696, 696, 696, 445,
	2141, 287, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 51579,
	227, 51579, -1000, 586, 51579, -409, 845, 845, 79, 845,
	845, 845, 845, 217, 651, 72, -1000, 215, 281, 170,
	273, 834, 211, -1000, -1000, 270, 834, 1598, -1000, 683,
	266, 176, -1000, 845, 845, -1000, 14505, 162, 14505, 14505,
	-1000, 2126, -1000, -1000, -1000, -1000, -1000, 1068, -1000, -1000,
	-1000, -1000, -18, 488, -1000, -1000, -1000, -1000, 50181, 47385,
	244, -1000, -1000, 45, -1000, -1000, 1638, 1140, 21520, 1196,
	676, -1000, -1000, 1064, 648, -1000, -1000, -1000, -1000, -1000,
	551, -1000, 22219, 22219, 22219, 22219, -1000, -1000, 1734, 46686,
	1734, 1734, 22219, 1734, -1000, 22219, 1734, 1734, 1734, 21520,
	1734, 1734, 1734, 1734, -1000, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, -1000,
	-1000, -1000, -1000, 1734, 585, 1734, 1734, 1734, 1734, 1734,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1734, 1734, 1734,
	1734, 1734, 1734, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 24316, 1234, 1232,
	1227, -1000, 18724, 1734, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 51579, -1000, 1734, 230, 50181, 50181,
	341, 2255, 1810, -1000, 2308, 2267, 413, -1000, 3226, 1293,
	1277, 1164, 1810, 1697, 51579, -1000, 1772, -1000, -1000, -1000,
	-1000, 1959, 1195, 1594, -1000, -1000, -1000, -1000, 1523, 21520,
	-1000, -1000, 2341, -1000, 25715, 584, 2340, 45987, -1000, 459,
	459, 1721, 427, 32, -1000, -1000, -1000, -1000, 718, 32706,
	-1000, -1000, -1000, -1000, -1000, 1619, 51579, -1000, -1000, 4786,
	1079, -1000, 1869, -1000, 1617, -1000, 1809, 21520, 1817, 513,
	1079, 501, 500, 498, -1000, -41, -1000, -1000, -1000, -1000,
	-1000, -1000, 696, 696, 696, -1000, 376, 2286, 359, 4313,
	-1000, -1000, -1000, 45288, 1868, 1079, -1000, 1865, -1000, 791,
	555, 569, 569, 1079, -1000, -1000, 50880, 1079, 785, 776,
	1079, 1079, 50181, 50181, -1000, 44589, -1000, 43890, 43191, 1060,
	50181, 42492, 41793, 41094, 40395, 39696, -1000, 1958, -1000, 1884,
	-1000, -1000, -1000, 50880, 1079, 1079, 50880, 50181, 50880, 51579,
	1079, -1000, -1000, 381, -1000, -1000, 1057, 1040, 1035, 696,
	696, 1030, 1592, 1578, 1576, 696, 696, 1026, 1569, 34803,
	1562, 276, 1021, 1017, 1015, 1088, 1559, 188, 1557, 1041,
	1034, 1014, 50181, 1863, 51579, -1000, 265, 747, 476, 714,
	2141, 2028, 1717, 486, 510, 1079, 448, 448, 50181, -1000,
	15210, -1000, 254, -1000, 1556, 21520, -1000, 835, 834, 834,
	-1000, -1000, -1000, -1000, -1000, -1000, 845, 51579, 835, -1000,
	-1000, -1000, 834, 845, 51579, 845, 845, 845, 845, 834,
	834, 834, 845, 51579, 51579, 51579, 51579, 51579, 51579, 51579,
	51579, 51579, 14505, 683, 845, -410, -1000, 1549, -1000, -1000,
	1963, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14505,
	14505, -1000, -1000, -1000, -1000, -1000, 1716, -1000, 197, 27,
	202, -1000, 38997, 375, 709, -1000, 375, -1000, -1000, -1000,
	1712, 38298, -1000, -411, -412, -414, -420, -1000, -1000, -1000,
	-424, -429, -1000, -1000, -1000, 21520, 21520, 21520, 21520, -210,
	-1000, 932, 22219, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21520, 144, 796, 22219, 22219, 22219, 22219, 22219, 22219, 22219,
	22219, 22219, 22219, 22219, 22219, 22219, 22219, 22219, -1000, -1000,
	30609, 5684, 5684, 648, 648, 648, 648, -1000, -145, 1702,
	50880, -1000, -1000, -1000, 583, 21520, 21520, 648, -1000, 1079,
	18724, 22918, 20821, 20821, 21520, 741, 1140, 50880, 21520, -1000,
	1164, -1000, -1000, -1000, -1000, 969, -1000, -1000, 865, 2130,
	2130, 2130, 2130, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 21520, 2130, 50181, 50181, 978, 21520, 21520, 21520,
	21520, 21520, 21520, 17325, 21520, 21520, 22219, 21520, 21520, 21520,
	1164, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, 21520, 1164, 21520, 1067, 21520, 21520, 20821, 16620, 20821,
	20821, 20821, 20821, 20821, -1000, -1000, -1000, -1000, -1000, -1000,
	21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 1164, 21520,
	21520, 21520, 21520, 21520, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1278, 1292, 1251, 21520, -1000, 1699,
	-1000, -175, 27813, 21520, 1505, 2339, 1898, 50181, -1000, -1000,
	-1000, 2255, -1000, 2255, 1278, 2639, 1973, 20821, -1000, -1000,
	2639, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1572,
	-1000, 51579, 1697, 2221, 50181, 1966, 1502, 380, -1000, 21520,
	21520, 1688, -1000, 2241, 51579, -1000, -210, -1000, 37599, -1000,
	-1000, 13800, 51579, 337, 51579, -1000, 27114, 36900, 283, -1000,
	32, 1666, -1000, 35, 20, 18024, 645, -1000, -1000, -1000,
	710, 23617, 1628, 645, 129, -1000, -1000, -1000, 1809, -1000,
	1809, 1809, 1809, 1809, 380, 380, 380, 380, -1000, -1000,
	-1000, -1000, -1000, 1862, 1849, -1000, 1809, 1809, 1809, 1809,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1848, 1848, 1848,
	1846, 1846, 1811, 1811, 440, -1000, 21520, 262, 36201, 2228,
	1009, 3015, 265, 455, 1887, 1079, 1079, 1079, 455, -1000,
	1161, 1152, 1126, -1000, -498, 1686, -1000, -1000, 2282, -1000,
	-1000, 760, 817, 815, 912, 50181, 235, 328, -1000, 431,
	-1000, 36201, 1079, 774, 569, 1079, -1000, 1079, -1000, -1000,
	-1000, -1000, -1000, 1079, -1000, -1000, 1685, -1000, 1705, 936,
	808, 852, 806, 1685, -1000, -1000, -150, 1685, -1000, 1685,
	-1000, 1685, -1000, 1685, -1000, 1685, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 746, 208, -321, 50181, 235,
	468, -1000, 466, 30609, -1000, -1000, -1000, 30609, 30609, -1000,
	-1000, -1000, -1000, 1485, 1473, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -484, 51579, -1000, 242, 708, 302,
	362, 312, 51579, 311, 2237, 2236, 2235, 2234, 2182, 253,
	292, 51579, 51579, 448, 1916, 51579, 2187, 51579, -1000, -1000,
	-1000, -1000, 1451, 1446, -1000, 1140, 51579, -1000, -1000, 845,
	845, -1000, -1000, 51579, 845, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 845, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 51579,
	-1000, -1000, -1000, -1000, -18, 189, -1000, -1000, 50181, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -95, -1000,
	94, 39, 371, -1000, -1000, -1000, -1000, -1000, 2251, -1000,
	1140, 821, 761, -1000, 1734, -1000, -1000, 980, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 144, 22219, 22219, 22219,
	1400, 491, 1163, 1287, 820, 1121, 1121, 662, 662, 652,
	652, 652, 652, 652, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1426, -1000, 1734, 50880, 1534, 16620, 1478, 1516,
	1164, 3717, -1000, 1526, -1000, 1526, 1167, 745, -1000, 21520,
	1164, 3670, -1000, -1000, 1164, 1164, 21520, -1000, -1000, 21520,
	21520, 21520, 21520, 3015, 3015, 3015, 3015, 3015, 3015, 3015,
	3015, 3015, 3015, 21520, 1682, 1680, 2330, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1177, 3015,
	3015, 3015, 3015, 3015, 21520, 1614, -1000, -1000, -1000, 1185,
	3644, 1326, 3626, 3015, 3015, -1000, 3015, 3621, 3615, 1164,
	1638, 3062, 3052, 3015, 3015, 3015, 3015, 3015, 3040, 3027,
	3015, 3015, 3023, 3015, 3611, 3015, 3006, 2961, 2875, 2870,
	2761, 2731, 2698, 2691, 2654, 2649, 2335, 2320, 2288, 2264,
	2258, 2246, 2226, 2209, 3015, 3015, 3015, 3589, 3015, 1164,
	1676, -1000, 3577, 3015, 3539, 3529, 3521, 2201, 3492, 3421,
	3415, 3015, 3015, 3015, 2189, 3406, 3398, 3343, 3281, 3276,
	3266, 3252, 3248, 3242, 3015, 1251, 1251, 1251, 1251, 1251,
	3214, -213, 3015, 1164, -1000, -1000, -1000, -1000, -1000, 3193,
	2184, 1164, 1671, 1734, 582, -1000, -1000, 1526, 1164, 1164,
	1526, 1526, 3184, 3173, 3159, 3154, 3127, 3121, 3015, 3015,
	-1000, 3015, 3095, 2900, 2178, 2166, 1164, -1000, 1251, 51579,
	-1000, -397, -1000, 22, 629, 1734, -1000, 34803, 1164, -1000,
	5363, -1000, 982, -1000, -1000, -1000, -1000, -1000, 32007, 1679,
	2639, -1000, -1000, 1734, 1511, -1000, -1000, 380, 105, 31308,
	640, 640, 143, 1140, 1140, 21520, -1000, -1000, -1000, -1000,
	-1000, -1000, 579, 2306, 390, 1734, -1000, 1687, 2577, -1000,
	-1000, -1000, 2208, 25016, -1000, -1000, 1734, 1734, 51579, 1515,
	1513, -1000, 572, -1000, 1087, 1666, 32, 6, -1000, -1000,
	-1000, -1000, 1140, -1000, 1104, 347, 689, -1000, 435, -1000,
	-1000, -1000, -1000, 2048, 120, -1000, -1000, -1000, 234, 380,
	-1000, -1000, -1000, -1000, -1000, -1000, 1424, 1424, -1000, -1000,
	-1000, -1000, -1000, 1008, -1000, -1000, -1000, -1000, 991, -1000,
	-1000, 974, -1000, -1000, 3085, 1928, 262, -1000, -1000, 696,
	1422, -1000, -1000, 2058, 696, 696, 50181, -1000, -1000, 1606,
	2228, 242, 51579, 750, 1915, -1000, 1887, 1887, 1887, 51579,
	-1000, -1000, -1000, -1000, -1000, -1000, -486, 65, 388, -1000,
	-1000, -1000, 4201, 50181, 1501, -1000, 237, -1000, 1527, -1000,
	50181, -1000, 1491, 1835, 1079, 1079, -1000, -1000, -1000, 50181,
	1734, -1000, -1000, -1000, -1000, 505, 2134, 239, -1000, -1000,
	-242, -1000, -1000, 235, 237, 50880, 1079, 645, -1000, -1000,
	-1000, -1000, -1000, -487, 1489, 496, 245, 338, 51579, 51579,
	51579, 51579, 51579, 543, -1000, -1000, 50, -1000, -1000, 218,
	-1000, -1000, -1000, -1000, 218, -1000, -1000, -1000, -1000, 277,
	465, -1000, 51579, 51579, 643, -1000, -1000, -1000, -1000, -1000,
	834, -1000, -1000, 834, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2123, 51579, 38, -450,
	-1000, -443, 21520, -1000, -1000, -1000, -1000, 1269, 490, 1163,
	22219, 22219, 22219, -1000, -1000, -1000, 775, 775, 30609, -1000,
	21520, 20821, -1000, -1000, 21520, 21520, 720, -1000, 21520, 1007,
	-1000, 21520, -1000, -1000, 1251, 3015, 3015, 3015, 3015, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1605,
	21520, 21520, 21520, 1164, 339, -1000, -1000, -1000, -1000, -1000,
	2323, -1000, 21520, -1000, 30609, 21520, 21520, 21520, -1000, -1000,
	-1000, 21520, 21520, -1000, -1000, 21520, -1000, 21520, -1000, -1000,
	-1000, -1000, -1000, -1000, 21520, -1000, 21520, -1000, -1000, -1000,
	21520, -1000, 21520, -1000, -1000, 21520, -1000, 21520, -1000, 21520,
	-1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520,
	-1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520,
	-1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520,
	-1000, -1000, -1000, 21520, -1000, -1000, 21520, 21520, -1000, 21520,
	21520, 21520, -1000, 21520, 21520, 21520, 21520, -1000, -1000, -1000,
	-1000, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520, 21520,
	21520, -1000, -1000, -1000, -1000, -1000, -1000, 21520, -1000, 36201,
	34, -213, 1067, 34, 1067, -1000, 20821, 15915, -1000, -1000,
	-1000, -1000, -1000, 21520, 21520, 21520, 21520, 21520, 21520, -1000,
	-1000, -1000, 21520, 21520, -1000, 21520, -1000, 21520, -1000, -1000,
	-1000, -1000, -1000, 629, -1000, 569, 569, 569, 50181, -1000,
	-1000, -1000, -1000, 1664, -1000, 2248, -1000, 1985, 1977, 2322,
	2306, -1000, 27114, 2639, -1000, -1000, 50181, -389, -1000, 2023,
	2179, 640, 640, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13095, 2255, 21520, 1914, 50880, 142, -1000, 26415, 50181, 50880,
	27114, 27114, 27114, 27114, 27114, -1000, 1953, 1950, -1000, 1941,
	1929, 2039, 51579, -1000, 1278, 1468, -1000, 21520, 29211, 1636,
	27114, -1000, -1000, 27114, 51579, 12390, -1000, -1000, 36, 12,
	-1000, -1000, -1000, -1000, 710, -1000, -1000, 883, 2206, 2042,
	-1000, -1000, -1000, -1000, -1000, 1466, -1000, 1461, 1661, 1455,
	1445, 208, -1000, 1807, 2122, 696, 696, -1000, 972, -1000,
	1079, 1415, 1393, -1000, -1000, -1000, 495, -1000, 2180, 51579,
	1912, 1911, 1910, -1000, -495, 963, 1828, 1749, 21520, 1825,
	2281, 1652, 50181, -1000, -1000, 50880, -1000, 284, -1000, 262,
	50181, -1000, -1000, -1000, 328, 51579, -1000, 5177, -1000, -1000,
	-1000, 237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 51579,
	255, -1000, 1816, 1011, -1000, -1000, 1815, -1000, -1000, -1000,
	-1000, 221, 301, 1387, 219, 1358, 219, -1000, 51579, 613,
	1928, 51579, -1000, -1000, -1000, 845, 845, -1000, -1000, 2091,
	-1000, 1079, 3015, 22219, 22219, -1000, 648, 924, -191, 1809,
	1809, -1000, 1809, 1811, -1000, 1809, 181, 1809, 179, 1809,
	-1000, -1000, 1164, 1164, 1251, -1000, 2107, 1883, -1000, 1140,
	21520, 2895, -1000, -1000, -1000, -1000, -1000, -47, 2736, 2529,
	3015, -1000, 1805, 1795, 21520, 3015, 1164, 2098, 3015, 3015,
	3015, 3015, 3015, 3015, 3015, 3015, 3015, 3015, 3015, 3015,
	2083, 2079, 1930, 1926, 1870, 1843, 1812, 1806, 1802, 1784,
	1744, 1739, 1729, 1725, 1719, 1695, 3015, -1000, 1140, 1251,
	2360, 1251, 3015, 3015, 2314, 278, 3015, 1433, 1433, 1433,
	1433, 1433, 1251, 1251, 1251, 1251, 3015, 50181, -1000, -213,
	-1000, -1000, -261, -267, -1000, 1164, -213, 1659, 1164, -1000,
	1650, 1630, 1858, 1603, 3015, 1822, 3015, 3015, 3015, 1548,
	-1000, 2242, 2242, 2242, 1419, 982, 51579, -1000, -1000, -1000,
	-1000, 2306, 2304, 1658, -1000, -1000, 105, 454, -1000, 2047,
	2179, -1000, 2279, 2003, 2276, -1000, -1000, -1000, -1000, -1000,
	1140, -1000, 2158, 1623, -1000, 701, 1643, -1000, -1000, 20122,
	1421, 1968, 570, 1419, 1714, 2577, 1896, 1909, 2008, -1000,
	-1000, -1000, -1000, 1931, -1000, 1927, -1000, -1000, 1772, -1000,
	1624, 337, 27114, 1694, 1694, -1000, 567, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 846, 4977, 2350, -1000, 1356, -1000,
	1074, 196, 940, -1000, -1000, 696, 696, -1000, 772, 770,
	-1000, 51579, 1792, -1000, 380, 1322, 380, 939, -1000, -1000,
	935, -1000, -1000, -1000, -1000, 1844, 1925, -1000, -1000, -1000,
	-1000, 51579, -1000, -1000, 51579, 51579, 51579, 1790, 2275, -1000,
	21520, 1788, 700, 3078, 50181, 50181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 423, 696, -463,
	291, 286, 696, 696, 696, -496, -1000, -1000, 1413, 1392,
	-1000, -177, -1000, 21520, -1000, -1000, -1000, 1117, 1117, 1234,
	1232, 1227, -1000, 1772, -1000, -1000, -1000, 1517, -1000, -1000,
	-155, 50181, 50181, 50181, 50181, -1000, -1000, 927, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	648, 1164, 336, -161, 1164, -1000, -1000, 380, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21520, -1000,
	21520, -1000, 1140, 21520, 2255, 1220, 21520, 21520, -1000, 934,
	922, 3015, -1000, -1000, -1000, 21520, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21520,
	-1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520,
	-1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520,
	-1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520, -1000, 21520,
	-1000, -1000, 21520, -1000, -1000, -1000, 21520, 243, 775, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1164, 332, -1000, -1000, -1000, -1000, 2321, -1000, 1164, 21520,
	-1000, -1000, 21520, -1000, 21520, 21520, -1000, 21520, -1000, 21520,
	-1000, -1000, -1000, -1000, 21520, 1734, 2013, 1734, 1734, 29211,
	-1000, -1000, 2304, 2266, 2274, 1996, 1998, 1998, 2047, -1000,
	2273, 2265, -1000, 1214, 2263, 1206, 768, -1000, 50880, 21520,
	142, -1000, 406, 50181, 142, 50181, -1000, 2294, -1000, -1000,
	21520, 1782, -1000, 21520, -1000, -1000, -1000, -1000, 5684, 2306,
	1694, -1000, -1000, 669, -1000, 21520, -1000, -1000, -1000, 10194,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1193, 1190,
	-1000, -1000, 1776, 21520, -1000, -1000, -1000, 1492, 1462, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1772, -1000, -1000,
	-1000, -1000, 328, -491, 3071, 50181, 921, -1000, 1380, 1652,
	306, 142, 1188, 696, 696, 696, 917, 916, 34803, 1374,
	-1000, 50181, 408, -1000, 328, -1000, -182, -186, 3015, -1000,
	-1000, 2200, -1000, -1000, 15915, -1000, -1000, 1769, 1831, -1000,
	-1000, -1000, -1000, 1960, -148, -165, -1000, -1000, 3015, 3015,
	1396, 1164, -1000, 3015, 3015, 1397, 1381, -1000, 3015, 3015,
	3015, 3015, 3015, 3015, 3015, 3015, 3015, 3015, 3015, 3015,
	3015, 3015, 3015, 3015, 3015, 1251, 1544, -1000, 243, 1164,
	1906, -1000, -1000, 5684, -1000, -1000, 2294, 2262, 34, -1000,
	-1000, 241, 34, 1140, 1509, 3015, 1499, 1471, 3015, 3015,
	29910, -1000, 2260, 2259, 35502, 35502, 629, 2266, -231, 21520,
	21520, 1994, 900, -1000, -1000, -1000, -1000, 1186, 1182, -1000,
	1155, -1000, 2349, -1000, 1140, -1000, 142, -1000, 566, 1643,
	-1000, 2255, 1140, 50181, 1140, 113, 2294, -1000, 3015, -1000,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, -1000,
	-1000, 50181, 3066, -1000, -1000, 2197, 1315, 64, -1000, 1178,
	1652, -1000, -1000, 135, -1000, 21520, -1000, 34803, 1130, 1118,
	-1000, -1000, -1000, -1000, -496, -1000, -1000, -1000, -1000, -1000,
	-1000, 413, 1649, -1000, 692, 50181, 51579, -1000, 1932, -1000,
	-1000, -1000, 21520, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21520, -1000, 1164,
	1904, -1000, -330, -1000, -470, 21520, -213, -1000, -1000, -213,
	-1000, 21520, -1000, -1000, 21520, -1000, 21520, -1000, -1000, 1313,
	-1000, -1000, -1000, -1000, -1000, 1313, 1313, -1000, -231, -1000,
	1646, -1000, 50181, 1140, 1638, -1000, 899, -1000, -1000, -1000,
	-1000, -1000, 50880, 1643, 50181, -1000, 1272, 1164, 1734, 2255,
	-1000, 1270, -1000, 413, -1000, 1763, 1749, -1000, -1000, -1000,
	19423, -1000, -1000, -1000, -1000, -1000, 233, -154, 15915, 11685,
	1268, -1000, -153, 3015, 1251, -1000, -434, -1000, -1000, -1000,
	-1000, 251, -1000, -1000, 1638, -1000, -1000, 1443, 1384, 1376,
	34104, -1000, -1000, -1000, -1000, -231, -1000, -1000, 2185, -1000,
	-1000, 1637, -1000, -1000, 29211, 49482, -1000, -143, 297, -154,
	21520, 1748, 1164, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -31, -1000, -1000, 562, -1000, -1000, -1000, 1815, -174,
	-1000, -1000, -1000, 151, -453, -258, -269, -1000, -1000, 22219,
	-1000, 21520, -1000, 21520, -1000, 21520, -1000, -1000, -1000, 50181,
	1734, -1000, 1172, -1000, 4287, -281, 1903, -1000, -109, -1000,
	-1000, -1000, 832, 1090, -1000, -1000, -1000, -1000, -1000, -1000,
	3057, 50181, -1000, 438, -1000, -1000, 15210, -155, -169, 758,
	-1000, -1000, -1000, -1000, -1000, 1123, 1080, 3015, -1000, 50181,
	-1000, 49482, -272, 645, 5684, -1000, 1902, 1900, 2319, -1000,
	-1000, -1000, -1000, -1000, -1000, -503, 1169, 258, -1000, -1000,
	-1000, 151, -1000, 21520, -1000, 21520, -1000, 1164, -1000, -1000,
	2176, 113, -1000, 2345, -1000, 2315, 665, 665, -1000, 884,
	-503, -1000, -1000, 3015, 3015, -1000, -283, -1000, -1000, -1000,
	-1000, -1000, 426, 966, -1000, -1000, -1000, -1000, -1000, 5684,
	-1000, -1000, -1000, 200, 200, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3043, 3040, 47, 1, 35, 34, 3038, 26, 92,
	196, 39, 218, 94, 3035, 175, 3033, 3032, 3030, 3029,
	3028, 3025, 2386, 2375, 2370, 3023, 3022, 3018, 3015, 3013,
	3008, 3007, 3006, 3005, 3003, 174, 168, 191, 3002, 3001,
	3000, 125, 185, 77, 81, 190, 2999, 2998, 90, 2996,
	2995, 2994, 194, 193, 187, 810, 2993, 192, 135, 52,
	2992, 2986, 2976, 2973, 2970, 2968, 2967, 2961, 2960, 2905,
	2894, 2893, 2892, 2891, 2881, 2880, 2876, 2871, 276, 2869,
	2868, 20, 2867, 95, 2866, 2865, 2864, 2862, 2861, 8,
	2860, 2859, 13, 37, 2858, 2857, 53, 2854, 2851, 2843,
	2842, 2841, 17, 2836, 24, 2835, 40, 2834, 2817, 132,
	2813, 2809, 2808, 43, 2804, 2803, 2802, 2801, 2798, 2797,
	2789, 181, 2784, 2782, 2781, 162, 235, 2778, 2776, 167,
	105, 116, 2775, 2774, 100, 188, 2773, 115, 2771, 2769,
	2764, 150, 2759, 1028, 2755, 2746, 66, 68, 2745, 243,
	2741, 2739, 9, 161, 71, 5, 7, 182, 2734, 2728,
	65, 126, 2727, 123, 2725, 2722, 102, 70, 2720, 101,
	93, 2717, 2716, 14, 4, 2715, 118, 121, 119, 69,
	2712, 2710, 166, 2709, 2706, 2701, 89, 2700, 2696, 4987,
	2693, 83, 137, 103, 75, 2692, 44, 63, 2691, 2690,
	2689, 2688, 2687, 51, 2686, 2685, 2684, 151, 217, 169,
	2683, 48, 45, 54, 154, 2682, 38, 76, 198, 170,
	2681, 2680, 143, 140, 2677, 2675, 57, 41, 86, 2674,
	96, 136, 124, 60, 91, 141, 2673, 2672, 64, 74,
	2669, 2667, 2666, 2665, 173, 2662, 2661, 73, 2660, 56,
	2659, 160, 2656, 27, 87, 2655, 49, 159, 2654, 78,
	2652, 2649, 67, 104, 72, 36, 2637, 158, 164, 130,
	199, 2628, 2627, 55, 2625, 2624, 2613, 195, 273, 2535,
	2525, 82, 179, 144, 148, 84, 2523, 341, 2522, 2511,
	16, 4633, 7800, 2510, 46, 165, 2504, 2503, 7141, 19,
	59, 21, 2500, 172, 2496, 2490, 2488, 2487, 197, 176,
	122, 163, 117, 2486, 2483, 2482, 15, 2480, 2479, 2478,
	2473, 2469, 2468, 111, 33, 32, 31, 209, 62, 11,
	97, 171, 156, 88, 2464, 2463, 2458, 128, 79, 2457,
	155, 153, 127, 129, 2454, 186, 145, 109, 2452, 120,
	30, 2450, 2447, 2443, 2442, 98, 2441, 2440, 2439, 2438,
	152, 146, 114, 85, 2433, 80, 113, 147, 149, 50,
	2432, 58, 2431, 2425, 28, 189, 25, 2421, 12, 107,
	106, 2420, 6428, 184, 2418, 18, 335, 157, 2416, 2414,
	3, 6, 10, 2412, 2411, 2410, 2407, 139, 2404, 2396,
	2394, 2393, 23, 61, 22, 2, 108, 99, 2391, 2390,
	142, 2384, 2379, 3222, 0, 134, 2374, 200,
}

//line sql.y:8381
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	259, 382, 383, 383, 257, 257, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 107, 107, 23, 24,
	24, 24, 24, 415, 415, 184, 184, 182, 182, 183,
	183, 262, 262, 25, 266, 266, 268, 268, 268, 268,
	258, 258, 258, 26, 26, 267, 267, 269, 269, 269,
	272, 272, 272, 272, 311, 311, 311, 27, 27, 27,
	27, 27, 127, 127, 385, 385, 384, 378, 378, 377,
	377, 376, 381, 381, 380, 380, 379, 39, 40, 49,
	49, 49, 49, 50, 51, 386, 386, 351, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 353, 353, 339, 339, 352, 352,
	352, 352, 352, 352, 352, 338, 338, 138, 138, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 401, 401, 401, 400,
	400, 237, 237, 237, 237, 237, 237, 237, 237, 148,
	148, 160, 160, 160, 160, 160, 160, 146, 146, 147,
	145, 145, 145, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 159, 159, 155, 155, 155, 156, 156, 156,
	157, 157, 402, 402, 402, 402, 316, 316, 316, 316,
	319, 319, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 318, 318, 318, 318, 318, 318, 318, 320, 320,
	320, 320, 320, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 322,
	322, 322, 322, 322, 322, 322, 322, 337, 337, 323,
	323, 331, 331, 332, 332, 333, 333, 333, 334, 334,
	334, 335, 335, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 330, 330, 329, 329, 329, 340, 365, 365,
	364, 364, 362, 362, 362, 362, 362, 362, 362, 362,
	349, 349, 359, 359, 359, 359, 359, 348, 348, 344,
	344, 344, 345, 345, 346, 346, 343, 343, 347, 347,
	361, 361, 360, 360, 341, 341, 342, 342, 367, 403,
	403, 403, 403, 403, 404, 404, 368, 393, 395, 395,
	395, 394, 394, 391, 392, 390, 390, 390, 390, 390,
	83, 83, 83, 285, 285, 286, 286, 357, 357, 356,
	356, 356, 358, 358, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 280, 280, 280, 389, 389,
	389, 389, 389, 389, 388, 388, 388, 354, 354, 354,
	354, 387, 387, 58, 58, 217, 217, 406, 406, 407,
	407, 407, 46, 46, 46, 46, 46, 46, 45, 45,
	45, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 47, 47, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 109, 109, 110, 110, 110, 110, 112, 112,
	112, 370, 370, 59, 59, 3, 3, 172, 174, 175,
	175, 173, 173, 173, 173, 173, 173, 61, 61, 60,
	60, 177, 176, 178, 178, 178, 1, 1, 2, 2,
	4, 4, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 336, 336, 336, 369, 369, 371,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	115, 114, 114, 113, 116, 116, 116, 116, 116, 116,
	116, 116, 373, 373, 373, 62, 62, 374, 324, 325,
	326, 5, 6, 350, 372, 123, 123, 29, 38, 38,
	30, 30, 30, 30, 31, 31, 63, 66, 66, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 279, 279, 288, 288, 278, 278, 303, 303, 303,
	281, 281, 281, 282, 282, 399, 399, 399, 275, 275,
	65, 65, 65, 304, 304, 304, 304, 68, 68, 408,
	408, 409, 409, 410, 410, 410, 69, 70, 70, 306,
	306, 307, 307, 71, 72, 84, 84, 84, 84, 84,
	84, 84, 85, 85, 85, 85, 108, 108, 108, 15,
	15, 15, 15, 80, 80, 80, 14, 14, 17, 67,
	67, 74, 396, 396, 397, 398, 398, 398, 398, 75,
	77, 32, 32, 32, 32, 32, 32, 133, 133, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 128, 128, 128, 122, 122, 416, 78, 79, 79,
	126, 126, 126, 119, 119, 119, 125, 125, 125, 16,
	16, 18, 261, 261, 19, 19, 130, 130, 132, 132,
	132, 132, 132, 134, 134, 134, 134, 134, 134, 134,
	129, 129, 131, 131, 131, 131, 296, 296, 296, 295,
	295, 166, 166, 168, 167, 167, 169, 169, 170, 170,
	170, 170, 215, 215, 192, 192, 254, 254, 255, 255,
	253, 253, 260, 260, 256, 256, 256, 256, 263, 263,
	171, 171, 171, 171, 179, 179, 180, 180, 181, 181,
	305, 305, 301, 301, 301, 300, 300, 185, 185, 185,
	187, 186, 186, 186, 186, 188, 188, 190, 190, 189,
	189, 191, 196, 196, 195, 195, 193, 193, 193, 193,
	194, 194, 194, 194, 197, 197, 143, 143, 143, 143,
	143, 143, 143, 143, 158, 158, 158, 158, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 244,
	244, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 152,
	220, 220, 219, 219, 86, 86, 86, 87, 87, 88,
	88, 88, 88, 88, 89, 89, 89, 89, 89, 144,
	144, 91, 91, 90, 90, 210, 210, 293, 293, 92,
	93, 93, 96, 96, 95, 94, 94, 100, 100, 97,
	97, 99, 99, 98, 101, 101, 102, 103, 103, 276,
	276, 198, 198, 206, 206, 206, 206, 199, 199, 199,
	199, 199, 199, 199, 207, 207, 207, 214, 208, 208,
	204, 204, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 163, 163, 163, 163, 225, 225, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 151, 151, 164, 164, 164, 164,
	165, 165, 165, 165, 165, 165, 165, 313, 313, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	417, 417, 327, 327, 327, 205, 205, 205, 205, 205,
	124, 124, 124, 124, 124, 310, 310, 310, 314, 314,
	314, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 315, 315, 223, 223,
	120, 120, 221, 221, 222, 224, 224, 216, 216, 216,
	216, 218, 218, 201, 201, 201, 226, 226, 227, 227,
	104, 105, 105, 106, 106, 228, 228, 230, 229, 229,
	231, 232, 232, 232, 233, 233, 234, 234, 234, 48,
	48, 48, 48, 48, 43, 43, 43, 43, 44, 44,
	44, 44, 135, 135, 135, 135, 137, 137, 136, 136,
	81, 81, 82, 82, 82, 141, 141, 142, 142, 142,
	139, 139, 140, 140, 251, 251, 235, 235, 235, 242,
	242, 242, 238, 238, 240, 240, 240, 241, 241, 241,
	239, 248, 248, 250, 250, 249, 249, 245, 245, 246,
	246, 247, 247, 247, 243, 243, 200, 200, 200, 200,
	200, 252, 252, 252, 252, 264, 264, 211, 211, 213,
	213, 212, 212, 162, 265, 265, 273, 270, 270, 271,
	271, 297, 297, 297, 274, 274, 287, 287, 283, 283,
	284, 284, 277, 277, 289, 289, 289, 76, 209, 209,
	366, 366, 363, 292, 292, 294, 294, 298, 298, 302,
	302, 299, 299, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 413,
	414, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 1, 2, 3, 7, 0, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 1, 6, 3, 3, 3,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 6, 8, 6, 5, 4,
	10, 2, 2, 1, 2, 2, 2, 2, 2, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 8, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 6, 4, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 4, 4, 4, 6, 4, 6,
	4, 4, 6, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 4, 4, 6, 4, 4, 4,
	6, 8, 6, 4, 6, 6, 8, 10, 7, 8,
	8, 9, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 4, 4, 4,
	4, 4, 6, 4, 6, 5, 9, 6, 9, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 4, 4, 3, 4,
	6, 6, 4, 6, 4, 6, 8, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -78, -416, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -107, -34, 33, -39, -49,
	226, -50, -40, 227, -51, 229, 228, 266, 230, 378,
	259, 75, 314, 315, 317, 318, 319, 320, -108, 661,
	264, 265, 232, 37, 46, 34, 35, 38, 236, 272,
	273, 235, -10, -35, 9, -413, 12, 455, 261, 260,
	29, -12, 555, 87, -79, -412, 709, -251, -235, 23,
	34, 30, -234, -230, -126, -235, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -351, -353, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-375, -45, -42, 231, 228, 276, 123, 124, 266, 267,
	268, 230, 250, 265, 269, 264, 285, -41, 82, 34,
	555, 558, -358, 227, 233, 234, 229, 456, 126, 125,
	76, -355, 373, 588, 679, -57, 681, 101, 104, 680,
	45, 240, 682, 683, 684, 595, 685, 249, 686, 687,
	688, 689, 695, 636, 696, 697, 698, 127, 8, -78,
	-302, -298, 91, -291, 552, 252, 586, 587, 301, 82,
	42, 561, 370, 373, 588, 485, 679, 379, 314, 330,
	324, 490, 491, 492, 353, 345, 553, 589, 562, 304,
	253, 289, 673, 343, 135, 681, 308, 590, 267, 380,
	381, 591, 382, 101, 317, 419, 694, 307, 592, 692,
	104, 680, 322, 80, 484, 52, 676, 45, 262, 341,
	235, 337, 682, 290, 593, 564, 283, 126, 123, 701,
	37, 333, 51, 31, 691, 125, 50, 683, 150, 594,
	684, 595, 384, 360, 667, 49, 385, 268, 596, 85,
	273, 557, 311, 675, 386, 504, 334, 387, 300, 690,
	232, 597, 656, 648, 649, 388, 389, 668, 365, 361,
	366, 506, 598, 411, 489, 390, 652, 653, 708, 53,
	599, 600, 669, 124, 601, 79, 685, 81, 328, 329,
	602, 298, 251, 509, 510, 413, 357, 467, 474, 475,
	111, 112, 470, 113, 476, 114, 477, 478, 479, 468,
	115, 108, 469, 480, 481, 358, 359, 116, 482, 110,
	109, 471, 473, 117, 483, 249, 36, 391, 554, 302,
	59, 306, 277, 414, 47, 363, 705, 46, 663, 511,
	603, 666, 356, 352, 464, 54, 604, 605, 606, 607,
	486, 686, 355, 327, 351, 700, 4, 295, 487, 687,
	63, 234, 368, 367, 369, 284, 410, 348, 608, 609,
	610, 256, 83, 611, 338, 22, 612, 613, 392, 291,
	614, 57, 615, 616, 417, 265, 617, 55, 688, 40,
	618, 270, 702, 689, 619, 620, 621, 662, 622, 272,
	623, 394, 624, 650, 651, 393, 362, 364, 512, 279,
	395, 378, 237, 556, 625, 312, 332, 269, 693, 626,
	257, 500, 501, 502, 503, 674, 508, 507, 271, 276,
	264, 418, 258, 627, 628, 629, 630, 631, 305, 647,
	632, 633, 318, 695, 465, 44, 634, 635, 636, 637,
	638, 299, 294, 412, 421, 62, 84, 375, 639, 640,
	672, 326, 323, 292, 641, 315, 56, 696, 697, 698,
	286, 699, 493, 494, 495, 496, 10, 529, 530, 531,
	540, 532, 513, 521, 514, 522, 535, 541, 534, 533,
	538, 542, 515, 523, 539, 516, 524, 517, 525, 518,
	526, 543, 519, 527, 545, 520, 528, 544, 536, 537,
	706, 707, 488, 397, 127, 296, 297, 48, 349, 278,
	642, 309, 643, 339, 340, 354, 325, 350, 659, 316,
	657, 280, 398, 466, 266, 644, 420, 293, 371, 376,
	310, 560, 505, 285, 399, 671, 559, 497, 498, 347,
	344, 287, 499, 645, 661, 400, 241, 281, 282, 646,
	658, 401, 402, 303, 403, 404, 405, 406, 407, 409,
	313, 408, 660, 654, 655, 288, 558, 321, 342, 377,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 463, 239,
	-78, 239, -189, -298, 239, 178, -270, 381, -288, 383,
	396, 391, 401, 389, -279, 392, 394, 279, -399, 411,
	239, 398, 226, 384, 393, 402, 403, 303, 409, 404,
	313, 408, 288, 405, 406, 407, -382, 178, 684, 699,
	135, 346, 388, 386, 412, 663, 91, -304, 91, 92,
	93, -291, 316, -306, 321, -292, -382, -291, 319, -78,
	-78, -308, -308, -128, 663, 665, -208, -143, 143, -158,
	-259, -161, 92, -149, -153, -202, -203, -204, -205, -159,
	-218, -257, 167, 168, 175, 144, -214, -162, 27, 551,
	457, 456, 178, 32, -152, 221, 69, 70, 459, 146,
	58, 12, 431, 432, -160, 424, 425, 433, 427, 428,
	484, 486, 487, 488, 485, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 489, 461, 462, 118, 463,
	108, 110, 109, 464, 465, 466, 343, 511, 512, 506,
	509, 510, 508, 507, 358, 359, 467, 529, 530, 534,
	533, 531, 532, 535, 538, 539, 540, 541, 542, 543,
	545, 544, 536, 537, 514, 513, 515, 516, 517, 518,
	519, 520, 522, 521, 523, 524, 525, 526, 527, 528,
	546, 547, 548, 549, 550, 468, 469, 111, 112, 113,
	114, 115, 116, 117, 470, 473, 471, 472, 474, 475,
	476, 481, 482, 477, 478, 479, 480, 483, 369, 367,
	368, 364, 363, 362, -88, -100, 577, 576, -101, -150,
	-151, -164, -165, -292, -298, 244, 423, 238, 173, 455,
	-154, -147, -216, 107, 93, -8, -212, 422, 429, 430,
	434, 426, 435, 563, 565, 580, 581, 583, 568, 573,
	572, 575, 500, 501, 502, 503, 504, 505, 648, 649,
	650, 651, 652, 653, 654, 655, -382, -291, 91, -156,
	-155, -198, 94, 99, 102, 103, 105, -405, 262, 339,
	340, 119, -413, 677, 90, 95, 96, 97, 98, 120,
	121, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 45, 397, 397, -189, -78, -78, -78,
	-78, -228, -126, -230, -10, -8, -413, 9, -78, -8,
	-9, -13, -35, -37, 582, -36, -298, 100, -235, -251,
	13, 162, 43, 51, -233, -234, -12, -8, -143, 20,
	24, 25, -131, 169, -143, -298, -131, -277, 243, -78,
	-78, -266, -311, 316, -268, 412, 663, 411, -258, -271,
	91, -257, -270, 410, 92, -352, 159, -338, -342, -292,
	254, -368, 250, -189, -361, -360, -292, -413, -127, -287,
	240, 248, 247, 136, -386, 139, 296, 423, 238, -52,
	-53, -54, -270, 177, 683, -109, 271, 275, 88, 88,
	-342, -341, -340, -387, 275, 254, -367, -359, 246, 255,
	-348, 247, 248, -343, 240, 137, -387, -343, 245, 255,
	250, 254, 275, 275, 127, 275, 127, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 270, -349, 151, -349,
	559, 559, -355, -387, 250, 240, -387, -387, 246, -289,
	-343, 242, 26, 242, 36, 36, -349, -349, -349, -270,
	177, -349, -349, -349, -349, 283, 283, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, 239, -386, -135, 408, 303, 82,
	-55, 285, -38, -189, -287, 240, 241, -386, 272, -189,
	222, -189, 666, -281, 159, 16, -281, -278, 397, 395,
	382, 387, -281, -281, -281, -281, 286, 380, -344, 240,
	36, 251, 397, 286, 380, 286, 287, 286, 287, 390,
	400, 286, -303, 15, 162, 423, 385, 389, 279, 239,
	280, 241, 399, 287, -303, 90, -282, 159, 286, 397,
	282, -281, -281, -309, -413, -294, -292, -290, 231, 24,
	142, 26, 28, 145, 178, 130, 20, 146, 38, 233,
	346, 250, 177, 246, 456, 226, 73, 563, 424, 428,
	422, 427, 431, 458, 459, 423, 383, 32, 14, 565,
	29, 260, 25, 39, 171, 228, 149, 566, 263, 27,
	261, 118, 121, 568, 23, 76, 255, 15, 248, 41,
	17, 569, 570, 18, 244, 243, 162, 240, 71, 12,
	221, 30, 158, 67, 571, 137, 572, 573, 574, 575,
	131, 69, 159, 21, 703, 429, 430, 34, 664, 551,
	274, 173, 74, 60, 665, 143, 426, 576, 577, 119,
	578, 122, 77, 670, 139, 19, 72, 43, 579, 275,
	580, 245, 704, 581, 415, 582, 160, 229, 455, 70,
	161, 677, 583, 678, 238, 396, 9, 460, 33, 259,
	247, 129, 68, 435, 584, 239, 148, 461, 462, 242,
	132, 120, 8, 136, 35, 13, 75, 78, 432, 433,
	434, 58, 128, 555, 147, 16, 585, 416, 141, -382,
	666, -309, -309, 33, 92, -408, -409, -410, 555, 415,
	242, -292, -189, -84, 656, 230, -85, 662, 24, 237,
	-133, 397, -121, 178, 684, 667, 668, 669, 666, 394,
	674, 672, 670, 286, 671, 88, 139, 141, 142, 4,
	-143, 158, -199, 151, 152, 153, 154, 155, 156, 157,
	163, 162, 143, 145, 159, -244, 140, 164, 165, 166,
	167, 168, 169, 170, 172, 171, 173, 174, 160, 161,
	177, 224, 225, -153, -153, -153, -153, -214, -220, -219,
	-413, -216, -382, -291, -298, -413, -413, -153, -276, -413,
	-413, -149, -413, -413, -413, -223, -143, -413, -413, -417,
	-413, -417, -417, -417, -327, -413, -327, -327, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, 222, -413,
	-413, -413, -413, -413, -327, -327, -327, -327, -327, -327,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, 103, 99, 102, 94, -218, 105,
	90, 90, 90, 90, -8, -9, -208, -413, -308, -396,
	-397, -192, -189, -413, 303, -292, -292, 272, -233, -12,
	-8, -228, -234, -230, -8, -78, -119, -132, 64, 65,
	-134, 25, 39, 68, 66, 24, -414, 89, -414, -251,
	-414, 88, -37, -254, 87, 62, 44, 90, 90, 88,
	22, -229, -231, -143, 15, -296, 4, -295, 26, -292,
	90, 222, 15, -190, 30, -189, -277, -277, 88, 91,
	316, -267, -269, 413, 415, 151, -297, -292, 90, 32,
	89, 88, -189, -316, -319, -321, -320, -322, -317, -318,
	343, 344, 178, 347, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 360, 33, 262, 339, 340, 341, 342,
	361, 362, 363, 364, 366, 367, 368, 369, 324, 345,
	553, 325, 326, 327, 328, 329, 330, 332, 333, 336,
	334, 335, 337, 338, -383, -382, 87, 89, 88, -323,
	87, -143, -135, 239, -382, 240, 240, 240, -78, 455,
	-349, -349, -349, 270, 20, -45, -42, -375, 19, -41,
	-42, 231, 123, 124, 228, 87, -338, 87, -347, -383,
	-382, 87, 137, 245, 136, -346, -343, -346, -347, -382,
	-216, -382, 137, 137, -382, -382, -263, -292, -263, -263,
	24, -263, 24, -263, 24, 96, -292, -263, 24, -263,
	24, -263, 24, -263, 24, -263, 24, 32, 79, 80,
	81, 32, 83, 84, 85, -216, -382, -382, -216, -338,
	-216, -189, -382, -270, 96, 96, 96, -349, -349, 96,
	90, 90, 90, -349, -349, 96, 90, -300, -298, 90,
	90, -388, 256, 300, 302, 96, 96, 96, 96, 32,
	90, -389, 32, 691, 690, 692, 693, 694, 90, 96,
	32, 96, 32, 96, -292, 87, -189, -141, 290, 226,
	228, 231, 77, 90, 306, 307, 304, 309, 310, 151,
	45, 88, 242, 239, -382, -283, 244, -283, -292, -299,
	-298, -290, 242, 379, 90, -143, -345, 15, 162, -303,
	-303, -281, -189, -345, -303, -281, -189, -281, -281, -281,
	-281, -303, -303, -303, -281, -298, -298, -189, -189, -189,
	-189, -189, -189, -189, -309, -282, -281, 666, 90, -275,
	15, 77, -309, -309, 88, 322, 416, 417, -307, 319,
	-80, -292, 90, -15, -11, -23, -22, -24, 151, -15,
	88, 555, -182, -189, 666, 666, 666, 666, 666, 666,
	-143, -143, -143, -143, 578, -206, 119, 143, 120, 121,
	-161, -143, -207, -212, -214, 106, 162, 145, 159, -244,
	-149, -153, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -149, -149, -149, -149, -310, -292, 90, 178, -157,
	-156, 105, -405, -157, 552, 88, -219, 222, -143, -143,
	-382, -143, -292, -129, -131, -129, -143, -221, -222, 147,
	-216, -143, -414, -414, 96, 169, -125, 25, 39, -125,
	-125, -125, -125, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -125, -292, -292, -118, -117, 437, 438,
	439, 440, 442, 443, 444, 447, 448, 452, 453, 436,
	454, 441, 446, 449, 450, 451, 445, 342, -143, -143,
	-143, -143, -143, -143, -86, -143, 130, 131, 132, -208,
	-143, -149, -143, -143, -143, -414, -143, -143, -143, -209,
	-208, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -381,
	-380, -379, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -208, -208, -208, -208, -208,
	-143, -414, -143, -163, -147, 96, -259, 105, 92, -143,
	-143, -130, -129, -294, -299, -290, -291, -129, -130, -130,
	-129, -129, -143, -143, -143, -143, -143, -143, -143, -143,
	-414, -143, -143, -143, -143, -143, -251, -414, -208, 88,
	-398, 415, 416, 664, -301, 275, -300, 26, -209, 90,
	15, -261, 78, -292, -233, -233, 64, 65, 60, -129,
	-134, -414, -36, 26, -253, -292, 63, 90, -328, -270,
	370, 371, 178, -143, -143, 88, -232, 28, 29, -189,
	-295, 169, -299, -189, -262, 275, -189, -167, -169, -170,
	-171, -192, -215, -413, -172, -8, 574, 571, 15, -182,
	-183, -191, -298, -268, -311, -267, 88, 414, 416, 417,
	77, 122, -143, -329, 177, -357, -356, -355, -338, -340,
	-341, -342, 89, -329, -334, 376, 375, -323, -323, -323,
	-323, -323, -328, -328, -328, -328, 87, 87, -323, -323,
	-323, -323, -331, 87, -331, -331, -332, -331, 87, -332,
	-333, 87, -333, -368, -143, -365, -364, -362, -363, 249,
	101, 646, 602, 555, 595, 636, 78, -360, -232, 96,
	-414, -141, -284, 244, -366, -363, -382, -382, -382, -284,
	91, 90, 91, 90, 91, 90, -110, -59, -1, 703,
	704, 705, 88, 20, -339, -338, -58, 300, -371, -372,
	275, -367, -361, -347, 137, -346, -347, -347, -382, 88,
	30, 127, 127, 127, 127, 555, 228, 33, -285, 594,
	143, 646, 602, -338, -58, 242, 242, -310, -310, -310,
	90, 90, -280, 699, -182, -137, 292, 151, 281, 281,
	239, 239, 294, -189, 305, 308, 306, 307, 304, 309,
	310, 24, 24, 24, 24, 24, 293, 295, 297, 283,
	-189, -189, -283, 77, -184, -189, 27, -298, 90, 90,
	-189, -281, -281, -189, -281, -281, -189, -410, 323, -292,
	357, 657, 658, 660, 659, -121, 415, 88, 555, 23,
	-122, 23, -413, 119, 120, 121, -207, -149, -153, -149,
	142, 263, -413, -216, -414, -294, 26, 88, 78, -414,
	88, 88, -414, -414, 88, 15, -224, -222, 149, -143,
	-414, 88, -414, -414, -208, -143, -143, -143, -143, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -208,
	88, 88, 15, -314, 26, -414, -414, -414, -414, -414,
	-223, -414, 15, -414, 78, 88, 162, 88, -414, -414,
	-414, 88, 88, -414, -414, 88, -414, 88, -414, -414,
	-414, -414, -414, -414, 88, -414, 88, -414, -414, -414,
	88, -414, 88, -414, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, -414, -414, 88, -414, -414, 88, 88, -414, 88,
	88, 88, -414, 88, 88, 88, 88, -414, -414, -414,
	-414, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, -414, -414, -414, -414, -414, -414, 88, -93, 579,
	-414, -414, 88, -414, 88, -414, -413, 222, -414, -414,
	-414, -414, -414, 88, 88, 88, 88, 88, 88, -414,
	-414, -414, 88, 88, -414, 88, -414, 88, -414, -397,
	663, 416, -196, -195, -193, 75, 243, 76, -413, -300,
	-414, -157, -259, -260, -259, -201, -292, 96, 105, -235,
	-166, -168, 15, -134, -214, 89, 88, -328, -239, -245,
	-278, -292, 90, 178, -330, 178, -330, 370, 371, -231,
	222, -197, 16, -200, 33, 58, -11, -413, -413, 33,
	88, -185, -187, -186, -188, 67, 71, 73, 68, 69,
	70, 74, -305, 26, -8, -167, -8, -413, -189, -182,
	-415, 15, 78, -415, 88, 222, -269, -272, 418, 415,
	421, -382, 90, -109, 88, -355, -342, -236, -138, 41,
	-335, 377, -328, 562, -328, -337, 90, -337, 96, 96,
	96, 89, -48, -43, -44, 34, 82, -362, -349, 90,
	40, -349, -349, -292, 89, -232, -137, -189, 143, 77,
	-366, -366, -366, -298, -2, 702, 708, 137, 87, 382,
	19, -253, 88, 89, -217, 301, 89, -111, -292, 89,
	87, -347, -347, -292, -413, 239, 32, 32, 646, 602,
	594, -58, -217, -216, -382, -329, 701, 700, 89, 241,
	299, -142, 431, -139, 90, 91, -189, -189, -189, -189,
	-189, 231, 228, 405, -406, 311, -406, 284, 242, -182,
	-189, 88, -83, 258, 253, -303, -303, 34, -189, 415,
	675, 673, -143, 142, 263, -161, -153, -149, -312, 178,
	343, 262, 341, 337, 357, 348, 375, 339, 376, 334,
	333, 332, -312, -310, -208, -131, -143, -143, 150, -143,
	148, -143, -414, -414, -414, -414, -414, -228, -143, -143,
	-143, -414, 178, 343, 15, -143, -310, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -379, -143, -208,
	-143, -208, -143, -143, -143, -143, -143, -380, -380, -380,
	-380, -380, -208, -208, -208, -208, -143, -413, -292, -96,
	-95, -94, 629, 243, -93, -163, -96, -163, -130, -294,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-193, -343, -343, -343, -263, 88, -274, 23, 15, 58,
	58, -166, -197, -167, -134, -292, -242, 656, -248, 47,
	-246, -247, 48, -243, 49, 57, -330, -330, 169, -233,
	-143, -264, 77, -265, -273, -216, -211, -213, -212, -413,
	-252, -414, -292, -263, -265, -169, -170, -170, -169, -170,
	67, 67, 67, 72, 67, 72, 67, -186, -298, -414,
	-143, -301, 78, -167, -167, -191, -298, 169, 415, 419,
	420, -355, -404, 119, 143, 32, 77, 373, 101, -402,
	177, 591, 641, 646, 602, 595, 636, -403, 245, 136,
	137, 257, 26, 42, 89, 88, 89, 88, 89, 89,
	88, -286, -285, -44, -43, -349, -349, 96, -382, 90,
	90, 241, 27, -189, 77, 77, 77, -112, 706, 96,
	87, -3, 82, -143, 87, 20, -338, -216, -373, -324,
	-374, -325, -326, -5, -6, -350, -115, 58, 101, -62,
	45, 240, 686, 687, 127, -413, 699, -365, -253, -369,
	-371, -189, -146, -413, -145, -147, -154, 167, 168, 262,
	339, 340, -217, -189, -136, 290, 298, 87, -140, 92,
	-385, 78, 281, 373, 281, 90, -407, 312, 90, -407,
	-189, -83, -48, -189, -281, -281, 34, -382, -414, -161,
	-153, -124, 162, 555, -315, 561, -323, -323, -323, -333,
	-323, 329, -323, 329, -323, -414, -414, -414, 88, -414,
	23, -414, -143, 88, -120, 460, 88, 88, -414, 87,
	87, -143, -414, -414, -414, 88, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, -414, 88, -414, -414, -414, 88, -313, 647, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-92, -293, -292, -93, 611, 611, -414, -93, -225, 88,
	-414, -414, 88, -414, 88, 88, -414, 88, -414, 88,
	-414, -414, -414, -414, 88, -194, 23, -194, -194, -414,
	-259, -189, -197, -226, 17, -239, 52, 349, -250, -249,
	56, 48, -247, 20, 50, 20, 31, -264, 88, 151,
	88, -414, -414, 88, 58, 222, -414, -197, -180, -179,
	77, 78, -181, 77, -179, 67, 67, -254, 88, -262,
	-167, -197, -197, 222, 119, -413, -148, -160, -146, 13,
	90, 90, -382, -401, 690, 691, 32, 96, -349, -349,
	137, 137, -189, 87, -328, 90, -328, 96, 96, 32,
	83, 84, 85, 32, 79, 80, 81, -189, -189, -189,
	-189, -370, 87, 20, -143, 87, 151, 89, -253, -253,
	277, 162, -349, 684, 283, 283, -349, -349, -349, -114,
	-113, 706, 89, -414, 88, -336, 555, 558, -143, -155,
	-155, -254, 89, -378, 555, -384, -292, -292, -292, -292,
	96, 98, -414, 553, 74, 556, -414, -328, -143, -143,
	-143, -233, 90, -143, -143, 96, 96, -414, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -208, -143, -414, -177, -176,
	-178, 667, 119, 32, -312, -414, -210, 275, -99, -98,
	-97, 15, -414, -143, -143, -143, -143, -143, -143, -143,
	-413, 67, 19, 17, -413, -413, -301, -226, -227, 18,
	20, -240, 54, -238, 53, -238, -249, 20, 20, 90,
	20, 90, 137, -273, -143, -213, 58, -11, -292, -211,
	-292, -228, -143, 87, -143, -157, -197, -197, -143, -203,
	484, 486, 487, 488, 485, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 489, 463, 108, 110, 109,
	464, 465, 466, 343, 511, 512, 506, 509, 510, 508,
	507, 358, 359, 467, 529, 530, 534, 533, 531, 532,
	535, 538, 539, 540, 541, 542, 543, 545, 544, 536,
	537, 514, 513, 515, 516, 517, 518, 519, 520, 522,
	521, 523, 524, 525, 526, 527, 528, 468, 469, 111,
	112, 113, 114, 115, 116, 117, 470, 473, 471, 474,
	475, 476, 481, 482, 477, 478, 479, 480, 483, 369,
	367, 368, 364, 363, 362, 500, 501, 502, 503, 504,
	505, 648, 649, 650, 651, 652, 653, 654, 655, 90,
	90, 87, -143, 89, 89, -254, -369, -59, 89, -255,
	-253, 96, 89, 278, -212, -413, 90, -349, -349, -349,
	96, 96, -300, -414, 88, -292, -403, -371, 559, 559,
	-414, 26, -377, -376, -294, 87, 78, 63, 554, 557,
	-414, -414, 88, -414, -414, -414, 89, 89, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, 88, -414, -176,
	-178, -414, 77, -157, -228, 20, -96, 300, 302, -96,
	-414, 88, -414, -414, 88, -414, 88, -414, -414, -256,
	-414, -292, 245, 20, 20, -256, -256, -196, -227, -106,
	-105, -104, 585, -143, -208, -241, 55, 77, 122, 90,
	90, 90, 13, -211, 222, -233, -253, -174, 382, -228,
	-414, -253, 89, 26, 89, 708, 137, 89, -212, -123,
	-413, 274, -300, 90, 90, -113, -116, -11, 88, 151,
	-253, -189, 63, -143, -208, -414, 77, 566, 667, -91,
	-90, -87, 678, 704, -208, -93, -93, -143, -143, -143,
	88, -414, -414, -414, -106, 88, -103, -102, -292, 77,
	122, -265, -292, 89, -414, -413, -233, 89, -237, -11,
	87, -3, 274, -324, -374, -325, -326, -5, -6, -350,
	-81, 555, -376, -354, -298, -294, 90, 96, 89, 555,
	-414, -414, -89, 145, 676, 644, -144, -155, -152, 221,
	-414, 88, -414, 88, -414, 88, -292, 245, -104, 88,
	26, -301, -175, -173, -292, 608, -394, -393, 551, -404,
	-400, 119, 143, 101, -402, 646, 602, 128, 129, -81,
	-143, 87, -414, -82, 289, 663, 222, -385, 556, -89,
	677, 622, 597, 622, 597, -143, -143, -143, -102, -413,
	-414, 88, 23, -316, -61, 619, -391, -392, 77, -395,
	388, 618, 639, 119, 90, 89, -253, 250, -299, -378,
	557, 142, -414, 88, -414, 88, -414, -92, -173, 615,
	-329, -157, -392, 77, -391, 77, 14, 13, -4, 707,
	89, 291, -89, -143, -143, -414, -60, 27, -174, -390,
	258, 253, 256, 33, -390, 96, -4, -414, -414, 619,
	252, 32, 119, -157, -177, -176, -176,
}

var yyDef = [...]int{
	876, -2, -2, 878, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 876, 876, 876, 0, 876, 0, 0,
	876, -2, -2, 876, 1569, 0, 876, 0, 0, 0,
	-2, 791, 797, 0, 806, -2, 0, 0, 876, 876,
	2161, 2161, 871, 0, 0, 0, 0, 0, 876, 876,
	876, 876, 1435, 51, 876, 0, 86, 87, 826, 827,
	828, 66, 0, 2159, 877, 1, 3, 72, 76, 0,
	0, 0, 59, 1444, 0, 79, 0, 0, 880, 0,
	0, 1552, 876, 876, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 602, 525,
	577, 523, 562, -2, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 400, 400,
	0, 0, -2, 511, 511, 511, 1554, 0, 0, 0,
	559, 462, 400, 400, 400, 0, 400, 400, 400, 400,
	0, 0, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 1462,
	166, 1570, 1567, 1568, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 0,
	1546, 0, 715, 979, 0, 0, 780, 780, 0, 780,
	780, 780, 780, 0, 0, 0, 729, 0, 0, 0,
	0, 777, 0, 745, 746, 0, 777, 0, 752, 783,
	0, 0, 758, 780, 780, 761, 2162, 0, 2162, 2162,
	1537, 0, 774, 772, 786, 787, 41, 790, 793, 794,
	795, 796, 799, 0, 810, 813, 1563, 1564, 0, 815,
	822, 839, 840, 0, 872, 873, 46, 1128, 0, 1001,
	0, 1007, -2, 1018, 1033, 1034, 1035, 1036, 1037, 1039,
	1040, 1041, 0, 0, 0, 0, 1046, 1047, 0, 0,
	0, 0, 0, 1109, 1055, 0, 0, 0, 0, 1408,
	0, 0, 1370, 1370, 1143, 1370, 1370, 1372, 1372, 1372,
	1774, 1910, 1918, 2072, 1735, 1741, 1742, 1743, 2032, 2033,
	2034, 2035, 2107, 2108, 2112, 1834, 0, 0, 0, 2158,
	1871, 1879, 1880, 1904, 2004, 2093, 1753, 1899, 1968, 1831,
	1853, 1854, 1986, 1987, 1875, 1876, 1857, 2037, 2038, 2048,
	2049, 2039, 2041, 2046, 2050, 2054, 2040, 2047, 2051, 2061,
	2064, 2067, 2068, 2069, 2044, 2042, 2052, 2055, 2057, 2059,
	2062, 2065, 2045, 2043, 2053, 2056, 2058, 2060, 2063, 2066,
	0, 0, 0, 0, 0, 1869, 1872, 1860, 1861, 1863,
	1865, 1870, 1877, 1883, 1862, 1882, 1881, 0, 1858, 1859,
	1864, 1874, 1878, 1866, 1867, 1868, 1873, 1884, 1924, 1923,
	1922, 1967, 1895, 1966, 0, 0, 0, 0, 0, 1309,
	1310, 1311, 1312, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 1421, 1422, 45, 1127, 1533, 1372, 1372, 1372,
	1372, 1372, 1372, 1069, 1070, 1071, 1072, 1073, 1097, 1098,
	1104, 1105, 1981, 1982, 1983, 1984, 1815, 2102, 1823, 1824,
	1963, 1964, 1836, 1837, 2133, 2134, -2, -2, -2, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 1778, 2083,
	2084, 229, 0, 0, 297, 298, 294, 295, 296, 1111,
	1112, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 291, 2161, 0, 849, 0, 0, 0, 0,
	0, 1444, 0, 1436, 1435, 64, 0, 876, -2, 0,
	0, 0, 0, 48, 0, 53, 936, 879, 78, 77,
	1484, 0, 0, 0, 60, 1445, 68, 70, 1446, 0,
	881, 882, 0, 912, 916, 0, 0, 0, 1553, 1552,
	1552, 103, 0, 0, 104, 124, 125, 126, 0, 0,
	110, 111, 1539, 1540, 44, 0, 0, 178, 179, 0,
	42, 427, 0, 174, 0, 420, 359, 0, 1462, 0,
	0, 0, 0, 0, 876, 0, 1547, 155, 156, 163,
	164, 165, 400, 400, 400, 574, 0, 0, 166, 166,
	532, 533, 534, 0, 0, -2, 425, 0, 512, 0,
	0, 414, 414, 418, 416, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 401, 0,
	572, 573, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 1555, 1556, 0, 549, 550, 0, 0, 0, 400,
	400, 0, 0, 0, 0, 400, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 1475, 0, 0, 0,
	-2, 0, 707, 0, 0, 0, 1548, 1548, 0, 714,
	0, 716, 0, 719, 0, 0, 720, 0, 777, 777,
	775, 776, 722, 723, 724, 725, 780, 0, 0, 409,
	410, 411, 777, 780, 0, 780, 780, 780, 780, 777,
	777, 777, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2162, 783, 780, 0, 753, 0, 754, 755,
	756, 759, 760, 762, 2163, 2164, 1565, 1566, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 2162,
	2162, 766, 770, 1538, 792, 798, 800, 801, 0, 0,
	811, 814, 833, 50, 1822, 821, 50, 823, 824, 825,
	851, 852, 857, 0, 0, 0, 0, 863, 864, 865,
	0, 0, 868, 869, 870, 0, 0, 0, 0, 0,
	999, 0, 0, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1019, 1020,
	0, 0, 0, 1042, 1043, 1044, 1045, 1048, 0, 1060,
	0, 1062, 1417, -2, 0, 0, 0, 1053, 1054, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 1141,
	0, 1142, 1144, 1145, 1146, 0, 1147, 1148, 886, 886,
	886, 886, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 896, 0, 0,
	896, 896, 0, 0, 221, 222, 223, 224, 225, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	299, 247, 248, 249, 1127, 0, 0, 0, 47, 841,
	842, 0, 962, 1558, 0, 0, 892, 0, 58, 67,
	69, 1444, 62, 1444, 0, 898, 0, 0, -2, -2,
	899, 905, 906, 907, 908, 909, 55, 2160, 56, 0,
	75, 0, 49, 0, 0, 0, 0, 373, 1487, 0,
	0, 1437, 1438, 1441, 0, 913, 1916, 917, 0, 919,
	920, 0, 0, 101, 0, 978, 0, 0, 0, 112,
	0, 114, 115, 0, 0, 0, 384, 1541, 1542, 1543,
	-2, 407, 0, 384, 368, 307, 308, 309, 359, 311,
	359, 359, 359, 359, 373, 373, 373, 373, 342, 343,
	344, 345, 346, 0, 0, 328, 359, 359, 359, 359,
	349, 350, 351, 352, 353, 354, 355, 356, 312, 313,
	314, 315, 316, 317, 318, 319, 320, 361, 361, 361,
	361, 361, 365, 365, 0, 43, 0, 388, 0, 1441,
	0, 0, 1475, 1550, 1560, 0, 0, 0, 1550, 133,
	0, 0, 0, 575, 613, 526, 563, 576, 0, 529,
	530, -2, 0, 0, 511, 0, 513, 0, 408, 0,
	-2, 0, 418, 0, 414, 418, 415, 418, 406, 419,
	553, 554, 555, 0, 557, 558, 643, 948, 0, 0,
	0, 0, 0, 649, 650, 651, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 513,
	0, 560, 0, 0, 464, 465, 466, 0, 0, 469,
	470, 471, 472, 0, 0, 475, 476, 477, 965, 966,
	478, 479, 504, 505, 506, 480, 481, 482, 483, 484,
	485, 486, 498, 499, 500, 501, 502, 503, 487, 488,
	489, 490, 491, 492, 495, 0, 148, 1466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 0, 895, 980,
	1571, 1572, 0, 0, 781, 782, 0, 412, 413, 780,
	780, 726, 767, 0, 780, 730, 768, 731, 733, 732,
	734, 747, 748, 780, 737, 778, 779, 738, 739, 740,
	741, 742, 743, 744, 763, 749, 750, 751, 784, 0,
	788, 789, 764, 765, 0, 0, 804, 805, 0, 812,
	836, 834, 835, 837, 829, 830, 831, 832, 0, 838,
	0, 0, 854, 97, 859, 860, 861, 862, 874, 867,
	1129, 996, 997, 998, 0, 1000, 1004, 0, 1113, 1115,
	1006, 1002, 1008, 1124, 1125, 1126, 0, 0, 0, 0,
	0, 1012, 1016, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1038, 1385, 1386, 1387, 1057,
	300, 301, 0, 1058, 0, 0, 0, 0, 0, 0,
	0, 1128, 1059, 0, 910, 0, 0, 1415, 1412, 0,
	0, 0, 1371, 1373, 0, 0, 0, 887, 888, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1388, 0,
	0, 0, 0, 0, 1408, 0, 1064, 1065, 1066, 0,
	0, 0, 0, 0, 0, 1186, 0, 0, 0, 0,
	1559, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1313, 1314, 1315, 1316, 40, 0,
	0, 0, 897, 1419, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	844, 845, 847, 0, 982, 0, 963, 0, 0, 850,
	0, 891, 0, 894, 61, 63, 903, 904, 0, 921,
	900, 57, 52, 0, 0, 940, 1485, 373, 1507, 0,
	382, 382, 379, 1447, 1448, 0, 1440, 1442, 1443, 80,
	918, 914, 0, 994, 0, 0, 977, 0, 924, 926,
	927, 928, 960, 0, 931, 932, 0, 0, 0, 0,
	0, 99, 979, 105, 0, 113, 0, 0, 118, 119,
	106, 107, 108, 109, 0, 602, -2, 459, 180, 182,
	183, 184, 175, -2, 371, 369, 370, 310, 373, 373,
	336, 337, 338, 339, 340, 341, 0, 0, 329, 330,
	331, 332, 321, 0, 322, 323, 324, 363, 0, 325,
	326, 0, 327, 426, 0, 1449, 389, 390, 392, 400,
	0, 395, 396, 0, 400, 400, 0, 421, 422, 0,
	1441, 1466, 0, 0, 0, 1561, 1560, 1560, 1560, 0,
	168, 169, 170, 171, 172, 173, 638, 0, 0, 614,
	636, 637, 166, 0, 0, 176, 515, 514, 0, 670,
	0, 424, 0, 0, 418, 418, 403, 404, 556, 0,
	0, 645, 646, 647, 648, 0, 0, 0, 542, 453,
	0, 543, 544, 513, 515, 0, 0, 384, 467, 468,
	473, 474, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 590, 591, 594, 596, 517,
	600, 593, 595, 597, 517, 601, 1463, 1464, 1465, 0,
	0, 708, 0, 0, 450, 95, 1549, 713, 717, 718,
	777, 736, 769, 777, 728, 735, 757, 802, 803, 808,
	816, 817, 818, 819, 820, 858, 0, 0, 0, 0,
	866, 0, 0, 1005, 1114, 1116, 1009, 0, 1013, 1017,
	0, 0, 0, 1063, 1061, 1419, 0, 0, 0, 1110,
	0, 0, 1132, 1133, 0, 0, 0, 1413, 0, 0,
	1139, 0, 1374, 1149, 0, 0, 0, 0, 0, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1435,
	0, 0, 0, 0, 0, 1170, 1171, 1172, 1173, 1174,
	0, 1176, 0, 1177, 0, 0, 0, 0, 1184, 1185,
	1187, 0, 0, 1190, 1191, 0, 1193, 0, 1195, 1196,
	1197, 1198, 1199, 1200, 0, 1202, 0, 1204, 1205, 1206,
	0, 1208, 0, 1210, 1211, 0, 1213, 0, 1215, 0,
	1218, 0, 1221, 0, 1224, 0, 1227, 0, 1230, 0,
	1233, 0, 1236, 0, 1239, 0, 1242, 0, 1245, 0,
	1248, 0, 1251, 0, 1254, 0, 1257, 0, 1260, 0,
	1263, 1264, 1265, 0, 1267, 1268, 0, 0, 1269, 0,
	0, 0, 1273, 0, 0, 0, 0, 1282, 1283, 1284,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 1297, 1298, 1299, 1300, 1301, 0, 1303, 0,
	1092, 0, 0, 1092, 0, 1130, 896, 0, 1375, 1376,
	1377, 1378, 1379, 0, 0, 0, 0, 0, 0, 1336,
	1337, 1339, 0, 0, 1342, 0, 1344, 0, 1532, 843,
	846, 848, 934, 983, 984, 0, 0, 0, 0, 964,
	1557, 889, 890, 893, 942, 0, 1423, 0, 0, 921,
	994, 922, 0, 901, 54, 937, 0, 1489, 1488, 1501,
	1514, 382, 382, 376, 377, 383, 378, 380, 381, 1439,
	0, 1444, 0, 1525, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 967, 0, 0, 970, 0,
	0, 0, 0, 961, 932, 0, 933, 0, -2, 0,
	0, 93, 94, 0, 0, 0, 116, 117, 0, 0,
	123, 385, 386, 157, 166, 461, 181, 434, 0, 0,
	306, 372, 333, 334, 335, 0, 357, 0, 0, 0,
	0, 455, 129, 1453, 1452, 400, 400, 391, 0, 394,
	0, 0, 0, 1562, 360, 423, 0, 147, 0, 0,
	0, 0, 0, 153, 608, 0, 0, 615, 0, 0,
	0, 524, 0, 535, 536, 0, 642, -2, 704, 388,
	0, 402, 405, 949, 0, 0, 537, 0, 540, 541,
	454, 515, 546, 547, 561, 548, 496, 497, 494, 0,
	0, 1476, 1477, 1482, 1480, 1481, 134, 582, 584, 583,
	587, 0, 0, 0, 519, 0, 519, 580, 0, 450,
	1449, 0, 712, 451, 452, 780, 780, 853, 98, 0,
	856, 0, 0, 0, 0, 1010, 1014, 1380, 1406, 359,
	359, 1393, 359, 365, 1396, 359, 1398, 359, 1401, 359,
	1404, 1405, 0, 0, 0, 911, 0, 0, 1138, 1416,
	0, 0, 1150, 1151, 1152, 1153, 1154, 1410, 0, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 146, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 1091, 0,
	1093, 1094, 0, 0, 1305, 0, 0, 1317, 0, 1420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	985, 990, 990, 990, 0, 0, 0, 1544, 1545, 1424,
	1425, 994, 1426, 923, 902, 941, 1507, 0, 1500, 0,
	-2, 1509, 0, 0, 0, 1515, 374, 375, 915, 81,
	995, 84, 0, 1525, 1534, 0, 1516, 1527, 1529, 0,
	0, 0, 1521, 0, 994, 925, 956, 958, 0, 953,
	968, 969, 971, 0, 973, 0, 975, 976, 936, 930,
	0, 101, 0, 994, 994, 100, 0, 981, 120, 121,
	122, 460, 185, 190, 0, 0, 0, 195, 0, 197,
	0, 0, 0, 202, 203, 400, 400, 435, 0, 303,
	305, 0, 0, 188, 373, 0, 373, 0, 364, 366,
	0, 436, 456, 1450, 1451, 0, 0, 393, 397, 398,
	399, 0, 1551, 149, 0, 0, 0, 611, 0, 639,
	0, 0, 0, 0, 0, 0, 177, 516, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 0, 400, 0,
	0, 0, 400, 400, 400, 0, 696, 387, 0, 0,
	667, 664, 538, 0, 227, 228, 230, 0, 0, 0,
	0, 0, 545, 936, 1467, 1468, 1469, 0, 1479, 1483,
	137, 0, 0, 0, 0, 592, 598, 0, 518, 599,
	709, 710, 711, 96, 721, 727, 855, 875, 1003, 1011,
	1015, 0, 0, 0, 0, 1407, 1391, 373, 1394, 1395,
	1397, 1399, 1400, 1402, 1403, 1051, 1052, 1056, 0, 1135,
	0, 1137, 1414, 0, 1444, 0, 0, 0, 1168, 0,
	0, 0, 1179, 1178, 1180, 0, 1182, 1183, 1188, 1189,
	1192, 1194, 1201, 1203, 1207, 1209, 1212, 1214, 1216, 0,
	1219, 0, 1222, 0, 1225, 0, 1228, 0, 1231, 0,
	1234, 0, 1237, 0, 1240, 0, 1243, 0, 1246, 0,
	1249, 0, 1252, 0, 1255, 0, 1258, 0, 1261, 0,
	1266, 1270, 0, 1272, 1274, 1275, 0, 0, 0, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1302,
	0, 1085, 1088, 1304, 1095, 1096, 1101, 1307, 0, 0,
	1131, 1319, 0, 1324, 0, 0, 1330, 0, 1334, 0,
	1340, 1341, 1343, 1345, 0, 0, 0, 0, 0, 962,
	943, 65, 1426, 1428, 0, 1494, 1492, 1492, 1502, 1503,
	0, 0, 1510, 0, 0, 0, 0, 85, 0, 0,
	0, 1530, 0, 0, 0, 0, 102, 1435, 950, 957,
	0, 0, 951, 0, 952, 972, 974, 929, 0, 994,
	994, 91, 92, 0, 191, 0, 193, 219, 220, 0,
	196, 198, 199, 200, 206, 207, 208, 201, 0, 0,
	302, 304, 0, 0, 347, 358, 348, 0, 0, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 936, 150, 151,
	152, 603, 0, 613, 0, 938, 0, 606, 0, 527,
	0, 0, 0, 400, 400, 400, 0, 0, 0, 0,
	681, 0, 0, 644, 0, 652, 0, 0, 0, 231,
	232, 0, 1478, 581, 0, 135, 136, 0, 0, 586,
	520, 521, 1049, 0, 0, 0, 1050, 1392, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 633, 634, 0, 1348, 1090, 1435, 0, 1092, 1102,
	1103, 0, 1092, 1318, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 982, 1428, 1433, 0,
	0, 1497, 0, 1490, 1493, 1491, 1504, 0, 0, 1511,
	0, 1513, 0, 1535, 1536, 1528, 0, 1520, 1523, 1519,
	1522, 1444, 954, 0, 959, 0, 1435, 90, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	205, 0, 0, 362, 367, 0, 0, 0, 604, 0,
	939, 616, 607, 0, 694, 0, 698, 0, 0, 0,
	701, 702, 703, 680, 0, 684, 428, 668, 665, 666,
	539, 0, 138, 139, 0, 0, 0, 1381, 0, 1384,
	1134, 1136, 0, 1165, 1166, 1167, 1389, 1390, 1181, 1217,
	1220, 1223, 1226, 1229, 1232, 1235, 1238, 1241, 1244, 1247,
	1250, 1253, 1256, 1259, 1262, 1271, 1276, 0, 1279, 0,
	0, 1280, 0, 635, 1081, 0, 0, 1099, 1100, 0,
	1320, 0, 1325, 1326, 0, 1331, 0, 1335, 1346, 0,
	987, 944, 945, 992, 993, 0, 0, 935, 1433, 83,
	1434, 1431, 0, 1429, 1427, 1486, 0, 1495, 1496, 1505,
	1506, 1512, 0, 1518, 0, 88, 0, 0, 0, 1444,
	192, 0, 211, 0, 612, 0, 615, 605, 692, 693,
	0, 705, 697, 699, 700, 682, -2, 1470, 0, 0,
	0, 588, 1382, 0, 0, 1281, 0, 631, 632, 1089,
	1082, 0, 1067, 1068, 1086, 1306, 1308, 0, 0, 0,
	0, 986, 988, 989, 82, 0, 1430, 1107, 0, 1498,
	1499, 1526, 1524, 955, 962, 0, 89, 441, 434, 1470,
	0, 0, 0, 685, 686, 687, 688, 689, 690, 691,
	578, 1472, 140, 141, 0, 508, 509, 510, 134, 0,
	1140, 1277, 1083, 0, 0, 0, 0, 1079, 1080, 0,
	1321, 0, 1327, 0, 1332, 0, 946, 947, 1432, 0,
	0, 617, 0, 619, 0, -2, 429, 442, 0, 186,
	212, 213, 0, 0, 216, 217, 218, 209, 210, 130,
	0, 0, 706, 0, 1473, 1474, 0, 137, 0, 0,
	1074, 1075, 1076, 1077, 1078, 0, 0, 0, 1108, 1087,
	618, 0, 0, 384, 0, 628, 430, 431, 0, 437,
	438, 439, 440, 214, 215, 640, 0, 0, 507, 585,
	1383, 0, 1322, 0, 1328, 0, 1333, 0, 620, 621,
	629, 0, 432, 0, 433, 0, 0, 0, 609, 0,
	640, 1471, 1084, 0, 0, 1106, 0, 630, 626, 443,
	445, 446, 0, 0, 444, 641, 610, 1323, 1329, 0,
	447, 448, 449, 622, 623, 624, 625,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 172, 164, 3,
	87, 89, 169, 167, 88, 168, 222, 170, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 709,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 174, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 175,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 165, 166, 171, 173, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:609
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:622
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:627
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:665
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:671
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:682
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:692
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:696
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:702
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:708
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:737
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:743
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:883
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:889
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:896
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:902
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:910
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:914
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:944
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:948
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:972
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:982
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:992
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1002
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1015
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1021
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1027
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1045
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1049
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1055
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1059
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1063
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1069
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1073
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1079
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1093
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1097
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1121
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1125
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1129
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1135
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1141
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1157
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1168
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1172
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1177
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1187
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1192
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1197
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1203
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1208
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1223
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1229
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1245
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1252
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1259
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1264
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1269
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1274
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1281
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1288
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1299
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1310
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1316
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1320
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1324
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1352
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1356
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1372
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1376
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1382
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1386
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1392
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1402
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1407
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1416
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1440
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1449
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1471
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1481
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1487
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1492
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1535
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1541
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1551
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1561
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1565
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1571
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1575
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1580
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1584
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1589
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1595
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1601
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1731
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1744
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Armscii8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = ASCIIStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Big5Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = UBinaryStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1250Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1251Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp1256Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp1257Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp850Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp852Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp866Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Cp932Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Dec8Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = EucjpmsStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = EuckrStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = Gb18030Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Gb2312Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = GbkStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = Geostd8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = GreekStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = HebrewStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Hp8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Keybcs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Koi8rStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Koi8uStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin1Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin2Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Latin5Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = Latin7Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = MacceStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = MacromanStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = SjisStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Swe7Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Tis620Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Ucs2Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = UjisStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf16Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf16leStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf32Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Utf8mb4Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = Utf8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1928
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1962
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1966
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1974
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2223
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2228
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2232
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2262
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2274
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2283
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2287
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2308
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2323
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2357
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2366
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2372
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2382
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2386
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2391
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2395
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2427
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2431
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2443
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = "key"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = yyDollar[1].str
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2500
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2510
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2520
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2524
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2530
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2534
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2540
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2544
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2550
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2556
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2560
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2581
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2587
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2593
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2599
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2603
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2612
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2616
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2622
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2628
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2634
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2650
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2669
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2673
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2682
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2691
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2697
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2711
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2715
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2909
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2914
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2927
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2931
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2940
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2944
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2952
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2962
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3104
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3310
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3371
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3380
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3388
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3397
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3404
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3416
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3425
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3440
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3449
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3454
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3458
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3464
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3470
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3476
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3486
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3490
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3496
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3502
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3508
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3514
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3524
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3538
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3544
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3550
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3554
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3558
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3564
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3568
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3573
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3577
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3582
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3586
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3592
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3596
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3600
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3604
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3695
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3710
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3714
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3719
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3724
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3729
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3734
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3739
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3751
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3756
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3762
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3768
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3778
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3783
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3787
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3792
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3797
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3802
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3807
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3813
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3819
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3826
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3833
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3840
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3848
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3852
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3858
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3864
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3870
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3876
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3882
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3888
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3894
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3900
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3922
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3926
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = ""
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = "extended "
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4228
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4242
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4246
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4256
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4262
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4324
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4333
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4339
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4349
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4353
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4357
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4364
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4374
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4386
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4390
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4396
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4401
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4405
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4409
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4413
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4417
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4421
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4425
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4430
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4434
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4438
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4442
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4466
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4474
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4497
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4525
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4529
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4535
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4541
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4545
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4549
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4553
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4559
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4660
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4664
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4678
		{
			setAllowComments(yylex, true)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			yyVAL.strs = nil
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4692
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4702
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4706
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = SQLCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4738
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4742
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4752
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4761
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4767
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4771
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4780
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4785
		{
			yyVAL.strs = nil
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4801
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = SQLCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = DistinctStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = StraightJoinHint
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4837
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4847
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4851
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4855
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4859
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4864
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4872
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4884
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4888
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4894
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4900
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4904
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4914
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4918
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4922
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4926
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4932
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4936
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4942
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4946
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4955
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4964
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4970
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4980
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4984
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4990
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4994
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5008
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5012
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5025
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5029
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5033
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5037
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5043
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5045
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5049
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5055
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5057
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5060
		{
			yyVAL.empty = struct{}{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5065
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5073
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5086
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5090
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5094
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5100
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5106
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5110
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5114
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5118
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5124
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5128
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5138
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5148
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5152
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5158
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5167
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5173
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5177
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5183
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5187
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5191
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5195
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5200
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5204
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5208
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5212
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5506
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5510
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5516
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5520
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5526
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5530
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5534
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5540
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5544
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5551
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5555
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5559
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5563
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5567
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5573
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5577
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5581
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5585
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5589
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5608
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5614
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5618
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5627
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5632
		{
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5635
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5641
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5647
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5651
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5663
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5669
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5673
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5679
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5683
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5689
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5693
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5705
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5711
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5715
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5721
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5727
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5731
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = ""
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5747
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5751
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5758
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5762
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5766
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5770
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5776
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5780
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5784
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5788
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5792
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5796
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5800
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5806
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5810
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5814
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5821
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5827
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5831
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6733
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6739
		{
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6741
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6745
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6749
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6753
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6757
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6761
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6765
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6769
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6773
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6777
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6781
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6787
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6791
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6795
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6799
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6803
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6807
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6811
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6815
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6819
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6829
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6833
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6837
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6859
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6869
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6873
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6877
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6881
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6885
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6891
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6895
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6899
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6909
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6913
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6919
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6923
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6927
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6931
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6935
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6941
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6945
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6949
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6953
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6957
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6961
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6965
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6969
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6973
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6977
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7001
		{
			yyVAL.str = string("")
		}
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7005
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7011
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7015
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7021
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7030
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7036
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7040
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7044
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7048
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7054
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7058
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7064
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7073
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7086
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7095
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7101
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7107
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7111
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7120
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7129
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7135
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7141
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7145
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7151
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7156
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7160
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7164
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7173
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7179
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7183
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7187
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7196
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7200
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7204
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7208
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7215
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7219
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7223
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7227
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7233
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7237
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7241
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7245
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7250
		{
			yyVAL.str = ""
		}
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7254
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7258
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7262
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7267
		{
			yyVAL.str = ""
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7271
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7286
		{
			yyVAL.str = ""
		}
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7290
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7295
		{
			yyVAL.str = "cascaded"
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7312
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7318
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7324
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7330
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7339
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7343
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7348
		{
			yyVAL.str = ""
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7352
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7358
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7362
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7368
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7372
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7376
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7381
		{
			yyVAL.str = ""
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7385
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7389
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7394
		{
			yyVAL.str = ""
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7398
		{
			yyVAL.str = " header"
		}
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7403
		{
			yyVAL.str = ""
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7407
		{
			yyVAL.str = " manifest on"
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7411
		{
			yyVAL.str = " manifest off"
		}
	case 1497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7416
		{
			yyVAL.str = ""
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7420
		{
			yyVAL.str = " overwrite on"
		}
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7424
		{
			yyVAL.str = " overwrite off"
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7430
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7435
		{
			yyVAL.str = ""
		}
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7439
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7449
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7455
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7459
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7464
		{
			yyVAL.str = ""
		}
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7468
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7478
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7484
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7488
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7492
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7497
		{
			yyVAL.str = ""
		}
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7501
		{
			yyVAL.str = " optionally"
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7514
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7518
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7522
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7526
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7530
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7536
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7540
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7544
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7548
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7553
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7557
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7563
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7567
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7573
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7577
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7583
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7587
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7592
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7602
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7606
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7612
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7619
		{
			yyVAL.str = "charset"
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7629
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7633
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7637
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7646
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7648
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7653
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7658
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7661
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7666
		{
			yyVAL.empty = struct{}{}
		}
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7668
		{
			yyVAL.empty = struct{}{}
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7670
		{
			yyVAL.empty = struct{}{}
		}
	case 1557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7674
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7683
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7690
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7694
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7700
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7704
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7711
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7717
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7721
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7727
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7731
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7738
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8351
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8360
		{
			decNesting(yylex)
		}
	case 2161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8365
		{
			skipToEnd(yylex)
		}
	case 2162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8370
		{
			skipToEnd(yylex)
		}
	case 2163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8374
		{
			skipToEnd(yylex)
		}
	case 2164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8378
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
